{
    "abstractText": "Conversational speech recognition has served as a flagship speech recognition task since the release of the Switchboard corpus in the 1990s. In this paper, we measure the human error rate on the widely used NIST 2000 test set, and find that our latest automated system has reached human parity. The error rate of professional transcribers is 5.9% for the Switchboard portion of the data, in which newly acquainted pairs of people discuss an assigned topic, and 11.3% for the CallHome portion where friends and family members have open-ended conversations. In both cases, our automated system establishes a new state of the art, and edges past the human benchmark, achieving error rates of 5.8% and 11.0%, respectively. The key to our system\u2019s performance is the use of various convolutional and LSTM acoustic model architectures, combined with a novel spatial smoothing method and lattice-free MMI acoustic training, multiple recurrent neural network language modeling approaches, and a systematic use of system combination.",
    "authors": [
        {
            "affiliations": [],
            "name": "W. Xiong"
        },
        {
            "affiliations": [],
            "name": "J. Droppo"
        },
        {
            "affiliations": [],
            "name": "X. Huang"
        },
        {
            "affiliations": [],
            "name": "F. Seide"
        },
        {
            "affiliations": [],
            "name": "M. Seltzer"
        },
        {
            "affiliations": [],
            "name": "A. Stolcke"
        },
        {
            "affiliations": [],
            "name": "D. Yu"
        }
    ],
    "id": "SP:7b7ef1a834d14a8e842b704446dc7c9e5353bf40",
    "references": [
        {
            "authors": [
                "M. Campbell"
            ],
            "title": "A",
            "venue": "J. Hoane, and F.-h. Hsu, \u201cDeep Blue\u201d, Artificial intelligence, vol. 134, pp. 57\u201383",
            "year": 2002
        },
        {
            "authors": [
                "D. Silver",
                "A. Huang",
                "C.J. Maddison",
                "A. Guez",
                "L. Sifre"
            ],
            "title": "G",
            "venue": "Van Den Driessche, J. Schrittwieser, I. Antonoglou, V. Panneershelvam, M. Lanctot, et al., \u201cMastering the game of Go with deep neural networks and tree search\u201d, Nature, vol. 529, pp. 484\u2013489",
            "year": 2016
        },
        {
            "authors": [
                "D. Amodei",
                "R. Anubhai",
                "E. Battenberg",
                "C. Case",
                "J. Casper",
                "B. Catanzaro",
                "J. Chen",
                "M. Chrzanowski",
                "A. Coates"
            ],
            "title": "G",
            "venue": "Diamos, et al., \u201cDeep Speech 2: End-toend speech recognition in English and Mandarin\u201d, arXiv preprint arXiv:1512.02595",
            "year": 2015
        },
        {
            "authors": [
                "T.T. Kristjansson",
                "J.R. Hershey",
                "P.A. Olsen",
                "S.J. Rennie",
                "R.A. Gopinath"
            ],
            "title": "Super-human multi-talker speech recognition: the IBM 2006 Speech Separation Challenge system",
            "venue": "Proc. Interspeech, vol. 12, p. 155",
            "year": 2006
        },
        {
            "authors": [
                "C. Weng",
                "D. Yu",
                "M.L. Seltzer",
                "J. Droppo"
            ],
            "title": "Singlechannel mixed speech recognition using deep neural networks",
            "venue": "Proc. IEEE ICASSP, pp. 5632\u20135636. IEEE",
            "year": 2014
        },
        {
            "authors": [
                "D.S. Pallett"
            ],
            "title": "A look at NIST\u2019s benchmark ASR tests: past",
            "venue": "present, and future\u201d, in IEEE Automatic Speech Recognition and Understanding Workshop, pp. 483\u2013 488. IEEE",
            "year": 2003
        },
        {
            "authors": [
                "P. Price",
                "W.M. Fisher",
                "J. Bernstein",
                "D.S. Pallett"
            ],
            "title": "The DARPA 1000-word resource management database for continuous speech recognition",
            "venue": "Proc. IEEE ICASSP, pp. 651\u2013654. IEEE",
            "year": 1988
        },
        {
            "authors": [
                "D.B. Paul",
                "J.M. Baker"
            ],
            "title": "The design for the wall street journal-based csr corpus",
            "venue": "Proceedings of the workshop on Speech and Natural Language, pp. 357\u2013 362. Association for Computational Linguistics",
            "year": 1992
        },
        {
            "authors": [
                "D. Graff",
                "Z. Wu",
                "R. MacIntyre",
                "M. Liberman"
            ],
            "title": "The 1996 broadcast news speech and language-model corpus",
            "venue": "Proceedings of the DARPA Workshop on Spoken Language technology, pp. 11\u201314",
            "year": 1997
        },
        {
            "authors": [
                "J.J. Godfrey",
                "E.C. Holliman",
                "J. McDaniel"
            ],
            "title": "Switchboard: Telephone speech corpus for research and development",
            "venue": "Proc. IEEE ICASSP, vol. 1, pp. 517\u2013520. IEEE",
            "year": 1992
        },
        {
            "authors": [
                "C. Cieri",
                "D. Miller",
                "K. Walker"
            ],
            "title": "The Fisher corpus: a resource for the next generations of speech-to-text",
            "venue": "LREC, vol. 4, pp. 69\u201371",
            "year": 2004
        },
        {
            "authors": [
                "S.F. Chen",
                "B. Kingsbury",
                "L. Mangu",
                "D. Povey",
                "G. Saon",
                "H. Soltau",
                "G. Zweig"
            ],
            "title": "Advances in speech transcription at IBM under the DARPA EARS program",
            "venue": "IEEE Trans. Audio, Speech, and Language Processing, vol. 14, pp. 1596\u20131608",
            "year": 2006
        },
        {
            "authors": [
                "S. Matsoukas",
                "J.-L. Gauvain",
                "G. Adda"
            ],
            "title": "T",
            "venue": "Colthurst, C.- L. Kao, O. Kimball, L. Lamel, F. Lefevre, J. Z. Ma, J. Makhoul, et al., \u201cAdvances in transcription of broadcast news and conversational telephone speech within the combined ears bbn/limsi system\u201d, IEEE Transactions on Audio, Speech, and Language Processing, vol. 14, pp. 1541\u20131556",
            "year": 2006
        },
        {
            "authors": [
                "A. Stolcke",
                "B. Chen",
                "H. Franco",
                "V.R.R. Gadde",
                "M. Graciarena",
                "M.-Y. Hwang",
                "K. Kirchhoff",
                "A. Mandal",
                "N. Morgan"
            ],
            "title": "X",
            "venue": "Lei, et al., \u201cRecent innovations in speech-to-text transcription at SRI-ICSI-UW\u201d, IEEE Transactions on Audio, Speech, and Language Processing, vol. 14, pp. 1729\u20131744",
            "year": 2006
        },
        {
            "authors": [
                "A. Ljolje"
            ],
            "title": "The AT&T 2001 LVCSR system",
            "venue": "NIST LVCSR Workshop",
            "year": 2001
        },
        {
            "authors": [
                "J.-L. Gauvain",
                "L. Lamel",
                "H. Schwenk",
                "G. Adda",
                "L. Chen",
                "F. Lefevre"
            ],
            "title": "Conversational telephone speech recognition",
            "venue": "Proc. IEEE ICASSP, vol. 1, pp. I\u2013212. IEEE",
            "year": 2003
        },
        {
            "authors": [
                "G. Evermann",
                "H.Y. Chan",
                "M.J.F. Gales",
                "T. Hain",
                "X. Liu",
                "D. Mrva",
                "L. Wang",
                "P.C. Woodland"
            ],
            "title": "Development of the 2003 cu-htk conversational telephone speech transcription system",
            "venue": "Proc. IEEE ICASSP, vol. 1, pp. I\u2013249. IEEE",
            "year": 2004
        },
        {
            "authors": [
                "F. Seide",
                "G. Li",
                "D. Yu"
            ],
            "title": "Conversational speech transcription using context-dependent deep neural networks",
            "venue": "Proc. Interspeech, pp. 437\u2013440",
            "year": 2011
        },
        {
            "authors": [
                "R.P. Lippmann"
            ],
            "title": "Speech recognition by machines and humans",
            "venue": "Speech Communication, vol. 22, pp. 1\u201315",
            "year": 1997
        },
        {
            "authors": [
                "W. Xiong",
                "J. Droppo",
                "X. Huang",
                "F. Seide",
                "M. Seltzer",
                "A. Stolcke",
                "D. Yu",
                "G. Zweig"
            ],
            "title": "The Microsoft 2016 conversational speech recognition system",
            "venue": "submitted to ICASSP",
            "year": 2017
        },
        {
            "authors": [
                "F.J. Pineda"
            ],
            "title": "Generalization of back-propagation to recurrent neural networks",
            "venue": "Physical Review Letters, vol. 59, pp. 2229",
            "year": 1987
        },
        {
            "authors": [
                "R.J. Williams",
                "D. Zipser"
            ],
            "title": "A learning algorithm for continually running fully recurrent neural networks",
            "venue": "Neural Computation, vol. 1, pp. 270\u2013280",
            "year": 1989
        },
        {
            "authors": [
                "A. Waibel",
                "T. Hanazawa",
                "G. Hinton",
                "K. Shikano",
                "K.J. Lang"
            ],
            "title": "Phoneme recognition using time-delay neural networks",
            "venue": "IEEE Trans. Acoustics, Speech, and Signal Processing, vol. 37, pp. 328\u2013339",
            "year": 1989
        },
        {
            "authors": [
                "Y. LeCun",
                "Y. Bengio"
            ],
            "title": "Convolutional networks for images",
            "venue": "speech, and time series\u201d, The handbook of brain theory and neural networks, vol. 3361, pp. 1995",
            "year": 1995
        },
        {
            "authors": [
                "Y. LeCun",
                "B. Boser",
                "J.S. Denker",
                "D. Henderson",
                "R.E. Howard",
                "W. Hubbard",
                "L.D. Jackel"
            ],
            "title": "Backpropagation applied to handwritten zip code recognition",
            "venue": "Neural computation, vol. 1, pp. 541\u2013551",
            "year": 1989
        },
        {
            "authors": [
                "T. Robinson",
                "F. Fallside"
            ],
            "title": "A recurrent error propagation network speech recognition system",
            "venue": "Computer Speech & Language, vol. 5, pp. 259\u2013274",
            "year": 1991
        },
        {
            "authors": [
                "S. Hochreiter",
                "J. Schmidhuber"
            ],
            "title": "Long short-term memory",
            "venue": "Neural Computation, vol. 9, pp. 1735\u20131780",
            "year": 1997
        },
        {
            "authors": [
                "H. Sak",
                "A.W. Senior",
                "F. Beaufays"
            ],
            "title": "Long shortterm memory recurrent neural network architectures for large scale acoustic modeling",
            "venue": "Proc. Interspeech, pp. 338\u2013342",
            "year": 2014
        },
        {
            "authors": [
                "H. Sak",
                "A. Senior",
                "K. Rao",
                "F. Beaufays"
            ],
            "title": "Fast and accurate recurrent neural network acoustic models for speech recognition",
            "venue": "Proc. Interspeech, pp. 1468\u2013 1472",
            "year": 2015
        },
        {
            "authors": [
                "G. Saon",
                "H.-K.J. Kuo",
                "S. Rennie",
                "M. Picheny"
            ],
            "title": "The IBM 2015 English conversational telephone speech recognition system",
            "venue": "Interspeech, pp. 3140\u20133144",
            "year": 2015
        },
        {
            "authors": [
                "T. Sercu",
                "C. Puhrsch",
                "B. Kingsbury",
                "Y. LeCun"
            ],
            "title": "Very deep multilingual convolutional neural networks for LVCSR",
            "venue": "Proc. IEEE ICASSP, pp. 4955\u20134959. IEEE",
            "year": 2016
        },
        {
            "authors": [
                "M. Bi",
                "Y. Qian",
                "K. Yu"
            ],
            "title": "Very deep convolutional neural networks for LVCSR",
            "venue": "Proc. Interspeech, pp. 3259\u20133263",
            "year": 2015
        },
        {
            "authors": [
                "Y. Qian",
                "M. Bi",
                "T. Tan",
                "K. Yu"
            ],
            "title": "Very deep convolutional neural networks for noise robust speech recognition",
            "venue": "IEEE/ACM Trans. Audio, Speech, and Language Processing,",
            "year": 2016
        },
        {
            "authors": [
                "T. Mikolov",
                "M. Karafi\u00e1t",
                "L. Burget",
                "J. Cernock\u1ef3",
                "S. Khudanpur"
            ],
            "title": "Recurrent neural network based language model",
            "venue": "Proc. Interspeech, pp. 1045\u20131048",
            "year": 2010
        },
        {
            "authors": [
                "T. Mikolov",
                "G. Zweig"
            ],
            "title": "Context dependent recurrent neural network language model",
            "venue": "Proc. Interspeech, pp. 901\u2013904",
            "year": 2012
        },
        {
            "authors": [
                "M. Sundermeyer",
                "R. Schl\u00fcter"
            ],
            "title": "and H",
            "venue": "Ney, \u201cLstm neural networks for language modeling.\u201d, in Interspeech, pp. 194\u2013197",
            "year": 2012
        },
        {
            "authors": [
                "I. Medennikov",
                "A. Prudnikov",
                "A. Zatvornitskiy"
            ],
            "title": "Improving English conversational telephone speech recognition",
            "venue": "Proc. Interspeech, pp. 2\u20136",
            "year": 2016
        },
        {
            "authors": [
                "T. Mikolov",
                "W.-t. Yih",
                "G. Zweig"
            ],
            "title": "Linguistic regularities in continuous space word representations",
            "venue": "in HLT-NAACL,",
            "year": 2013
        },
        {
            "authors": [
                "I. Sutskever",
                "O. Vinyals",
                "Q.V. Le"
            ],
            "title": "Sequence to sequence learning with neural networks",
            "venue": "Advances in Neural Information Processing Systems, pp. 3104\u2013 3112",
            "year": 2014
        },
        {
            "authors": [
                "A. Hannun",
                "C. Case",
                "J. Casper",
                "B. Catanzaro",
                "G. Diamos",
                "E. Elsen",
                "R. Prenger",
                "S. Satheesh",
                "S. Sengupta"
            ],
            "title": "A",
            "venue": "Coates, et al., \u201cDeep speech: Scaling up end-to-end speech recognition\u201d, arXiv preprint arXiv:1412.5567",
            "year": 2014
        },
        {
            "authors": [
                "M.L. Glenn",
                "S. Strassel",
                "H. Lee",
                "K. Maeda",
                "R. Zakhary",
                "X. Li"
            ],
            "title": "Transcription methods for consistency",
            "venue": "volume and efficiency\u201d, in LREC",
            "year": 2010
        },
        {
            "authors": [
                "K. Simonyan",
                "A. Zisserman"
            ],
            "title": "Very deep convolutional networks for large-scale image recognition",
            "venue": "arXiv preprint arXiv:1409.1556",
            "year": 2014
        },
        {
            "authors": [
                "K. He",
                "X. Zhang",
                "S. Ren",
                "J. Sun"
            ],
            "title": "Deep residual learning for image recognition",
            "venue": "arXiv preprint arXiv:1512.03385",
            "year": 2015
        },
        {
            "authors": [
                "R.K. Srivastava",
                "K. Greff",
                "J. Schmidhuber"
            ],
            "title": "Highway networks",
            "venue": "CoRR, vol. abs/1505.00387",
            "year": 2015
        },
        {
            "authors": [
                "P. Ghahremani",
                "J. Droppo",
                "M.L. Seltzer"
            ],
            "title": "Linearly augmented deep neural network",
            "venue": "Proc. IEEE ICASSP, pp. 5085\u20135089. IEEE",
            "year": 2016
        },
        {
            "authors": [
                "D. Yu",
                "W. Xiong",
                "J. Droppo",
                "A. Stolcke",
                "G. Ye",
                "J. Li",
                "G. Zweig"
            ],
            "title": "Deep convolutional neural networks with layer-wise context expansion and attention",
            "venue": "Proc. Interspeech, pp. 17\u201321",
            "year": 2016
        },
        {
            "authors": [
                "A. Waibel",
                "H. Sawai",
                "K. Shikano"
            ],
            "title": "Consonant recognition by modular construction of large phonemic time-delay neural networks",
            "venue": "Proc. IEEE ICASSP, pp. 112\u2013115. IEEE",
            "year": 1989
        },
        {
            "authors": [
                "A. Graves",
                "J. Schmidhuber"
            ],
            "title": "Framewise phoneme classification with bidirectional LSTM and other neural network architectures",
            "venue": "Neural Networks, vol. 18, pp. 602\u2013610",
            "year": 2005
        },
        {
            "authors": [
                "N. Dehak",
                "P.J. Kenny",
                "R. Dehak",
                "P. Dumouchel",
                "P. Ouellet"
            ],
            "title": "Front-end factor analysis for speaker verification",
            "venue": "IEEE Trans. Audio, Speech, and Language Processing, vol. 19, pp. 788\u2013798",
            "year": 2011
        },
        {
            "authors": [
                "G. Saon",
                "H. Soltau",
                "D. Nahamoo",
                "M. Picheny"
            ],
            "title": "Speaker adaptation of neural network acoustic models using i-vectors",
            "venue": "IEEE Speech Recognition and Understanding Workshop, pp. 55\u201359",
            "year": 2013
        },
        {
            "authors": [
                "G. Saon",
                "T. Sercu",
                "S.J. Rennie",
                "H.J. Kuo"
            ],
            "title": "The IBM 2016 English conversational telephone speech recognition",
            "venue": "system\u201d, in Proc. Interspeech,",
            "year": 2016
        },
        {
            "authors": [
                "G. Wang",
                "K. Sim"
            ],
            "title": "Sequential classification criteria for NNs in automatic speech recognition",
            "venue": "Proc. Interspeech, pp. 441\u2013444",
            "year": 2011
        },
        {
            "authors": [
                "K. Vesel\u1ef3",
                "A. Ghoshal",
                "L. Burget",
                "D. Povey"
            ],
            "title": "Sequence-discriminative training of deep neural networks",
            "venue": "Proc. Interspeech, pp. 2345\u20132349",
            "year": 2013
        },
        {
            "authors": [
                "D. Povey",
                "V. Peddinti",
                "D. Galvez",
                "P. Ghahrmani",
                "V. Manohar",
                "X. Na",
                "Y. Wang",
                "S. Khudanpur"
            ],
            "title": "Purely sequence-trained neural networks for ASR based on lattice-free MMI",
            "venue": "Proc. Interspeech, pp. 2751\u20132755",
            "year": 2016
        },
        {
            "authors": [
                "C. Mendis",
                "J. Droppo",
                "S. Maleki",
                "M. Musuvathi",
                "T. Mytkowicz",
                "G. Zweig"
            ],
            "title": "Parallelizing WFST speech decoders",
            "venue": "Proc. IEEE ICASSP, pp. 5325\u2013 5329. IEEE",
            "year": 2016
        },
        {
            "authors": [
                "A. Stolcke"
            ],
            "title": "SRILM\u2014an extensible language modeling toolkit",
            "venue": "Proc. Interspeech, vol. 2002, p. 2002",
            "year": 2002
        },
        {
            "authors": [
                "T. Alum\u00e4e",
                "M. Kurimo"
            ],
            "title": "Efficient estimation of maximum entropy language models with N-gram features: An SRILM extension",
            "venue": "Proc. Interspeech, pp. 1820\u20131823",
            "year": 2012
        },
        {
            "authors": [
                "X. Chen",
                "X. Liu",
                "Y. Qian",
                "M.J.F. Gales",
                "P.C. Woodland"
            ],
            "title": "CUED-RNNLM: An open-source toolkit for efficient training and evaluation of recurrent neural network language models",
            "venue": "Proc. IEEE ICASSP, pp. 6000\u20136004. IEEE",
            "year": 2016
        },
        {
            "authors": [
                "M. Gutmann",
                "A. Hyv\u00e4rinen"
            ],
            "title": "Noise-contrastive estimation: A new estimation principle for unnormalized statistical models",
            "venue": "AISTATS, vol. 1, pp. 6",
            "year": 2010
        },
        {
            "authors": [
                "P.-S. Huang",
                "X. He",
                "J. Gao",
                "L. Deng",
                "A. Acero",
                "L. Heck"
            ],
            "title": "Learning deep structured semantic models for web search using clickthrough data",
            "venue": "Proceedings of the 22nd ACM international conference on Conference on information & knowledge management, pp. 2333\u20132338. ACM",
            "year": 2013
        },
        {
            "authors": [
                "O. Press",
                "L. Wolf"
            ],
            "title": "Using the output embedding to improve language models",
            "venue": "arXiv preprint arXiv:1608.05859",
            "year": 2016
        },
        {
            "authors": [
                "P. Ghahremani",
                "J. Droppo"
            ],
            "title": "Self-stabilized deep neural network",
            "venue": "Proc. IEEE ICASSP. IEEE",
            "year": 2016
        },
        {
            "authors": [
                "A. Stolcke"
            ],
            "title": "The SRI March 2000 Hub-5 conversational speech transcription system",
            "venue": "Proceedings NIST Speech Transcription Workshop,",
            "year": 2000
        },
        {
            "authors": [
                "D. Yu"
            ],
            "title": "An introduction to computational networks and the Computational Network Toolkit",
            "venue": "Technical Report MSR-TR-2014-112, Microsoft Research,",
            "year": 2014
        },
        {
            "authors": [
                "F. Seide",
                "H. Fu",
                "J. Droppo",
                "G. Li",
                "D. Yu"
            ],
            "title": "1-bit stochastic gradient descent and its application to dataparallel distributed training of speech DNNs",
            "venue": "Proc. Interspeech, pp. 1058\u20131062",
            "year": 2014
        },
        {
            "authors": [
                "T.N. Sainath",
                "A.-r. Mohamed",
                "B. Kingsbury",
                "B. Ramabhadran"
            ],
            "title": "Deep convolutional neural networks for LVCSR",
            "venue": "in Proc. IEEE ICASSP,",
            "year": 2013
        },
        {
            "authors": [
                "O. Abdel-Hamid",
                "A.-r. Mohamed",
                "H. Jiang",
                "G. Penn"
            ],
            "title": "Applying convolutional neural networks concepts to hybrid NN-HMM model for speech recognition",
            "venue": "in Proc. IEEE ICASSP,",
            "year": 2012
        },
        {
            "authors": [
                "C. Wu",
                "P. Karanasou",
                "M.J. Gales",
                "K.C. Sim"
            ],
            "title": "Stimulated deep neural network for speech recognition",
            "venue": "Proc. Interspeech, pp. 400\u2013404",
            "year": 2016
        }
    ],
    "sections": [
        {
            "text": "Index Terms\u2014 Conversational speech recognition, convolutional neural networks, recurrent neural networks, VGG, ResNet, LACE, BLSTM, spatial smoothing.\n1. INTRODUCTION\nRecent years have seen human performance levels reached or surpassed in tasks ranging from the games of chess and Go [1, 2] to simple speech recognition tasks like carefully read newspaper speech [3] and rigidly constrained smallvocabulary tasks in noise [4, 5]. In the area of speech recognition, much of the pioneering early work was driven by a series of carefully designed tasks with DARPA-funded datasets publicly released by the LDC and NIST [6]: first simple ones like the \u201cresource management\u201d task [7] with a small vocabulary and carefully controlled grammar; then read speech recognition in the Wall Street Journal task [8]; then Broadcast News [9]; each progressively more difficult for automatic systems. One of last big initiatives in this area was in conversational telephone speech (CTS), which is especially difficult due to the spontaneous (neither read nor planned) nature of the speech, its informality, and the\nself-corrections, hesitations and other disfluencies that are pervasive. The Switchboard [10] and later Fisher [11] data collections of the 1990s and early 2000s provide what is to date the largest and best studied of the conversational corpora. The history of work in this area includes key contributions by institutions such as IBM [12], BBN [13], SRI [14], AT&T [15], LIMSI [16], Cambridge University [17], Microsoft [18] and numerous others. In the past, human performance on this task has been widely cited as being 4% [19]. However, the error rate estimate in [19] is attributed to a \u201cpersonal communication,\u201d and the actual source of this number is ephemeral. To better understand human performance, we have used professional transcribers to transcribe the actual test sets that we are working with, specifically the CallHome and Switchboard portions of the NIST eval 2000 test set. We find that the human error rates on these two parts are different almost by a factor of two, so a single number is inappropriate to cite. The error rate on Switchboard is about 5.9%, and for CallHome 11.3%. We improve on our recently reported conversational speech recognition system [20] by about 0.4%, and now exceed human performance by a small margin. Our progress is a result of the careful engineering and optimization of convolutional and recurrent neural networks. While the basic structures have been well known for a long period [21, 22, 23, 24, 25, 26, 27], it is only recently that they have dominated the field as the best models for speech recognition. Surprisingly, this is the case for both acoustic modeling [28, 29, 30, 31, 32, 33] and language modeling [34, 35, 36, 37]. In comparison to the standard feed-forward MLPs or DNNs that first demonstrated breakthrough performance on conversational speech recognition [18], these acoustic models have the ability to model a large amount of acoustic context with temporal invariance, and in the case of convolutional models, with frequency invariance as well. In language modeling, recurrent models appear to improve over classical N-gram models through the use of an unbounded word history, as well as the generalization ability of continuous word representations [38]. In the meantime, ensemble learning has become commonly used in several neural models [39, 40, 35], to improve robustness by reducing bias and variance. This paper is an expanded version of [20], with the following additional material: ar X iv :1 61 0. 05 25 6v 2 [ cs .C L ] 1 7 Fe b 20\n17\n1. A comprehensive assessment of human performance on the NIST eval 2000 test set\n2. The description of a novel spatial regularization method which significantly boosts our LSTM acoustic model performance\n3. The use of LSTM rather than RNN-LMs, and the use of a letter-trigram input representation\n4. A two-level system combination, based on a subsystem of BLSTM-system variants that, by itself, surpasses the best previously reported results\n5. Expanded coverage of the Microsoft Cognitive Toolkit (CNTK) used to build our models\n6. An analysis of human versus machine errors, which indicates substantial equivalence, with the exception of the word classes of backchannel acknowledgments (e.g. \u201cuh-huh\u201d) and hesitations (e.g. \u201cum\u201d).\nThe remainder of this paper describes our system in detail. Section 2 describes our measurement of human performance. Section 3 describes the convolutional neural net (CNN) and long-short-term memory (LSTM) models. Section 4 describes our implementation of i-vector adaptation. Section 5 presents out lattice-free MMI training process. Language model rescoring is a significant part of our system, and described in Section 6. We describe the CNTK toolkit that forms the basis of our neural network models in Section 7. Experimental results are presented in Section 8, followed by an error analysis in section 9, a review of relevant prior work in 10 and concluding remarks.\n2. HUMAN PERFORMANCE\nTo measure human performance, we leveraged an existing pipeline in which Microsoft data is transcribed on a weekly basis. This pipeline uses a large commercial vendor to perform two-pass transcription. In the first pass, a transcriber works from scratch to transcribe the data. In the second pass, a second listener monitors the data to do error correction. Dozens of hours of test data are processed in each batch. One week, we added the NIST 2000 CTS evaluation data to the work-list, without further comment. The intention was to measure the error rate of professional transcribers going about their normal everyday business. Aside from the standard twopass checking in place, we did not do a complex multi-party transcription and adjudication process. The transcribers were given the same audio segments as were provided to the speech recognition system, which results in short sentences or sentence fragments from a single channel. This makes the task easier since the speakers are more clearly separated, and more difficult since the two sides of the conversation are not interleaved. Thus, it is the same condition as reported for our\nautomated systems. The resulting numbers are 5.9% for the Switchboard portion, and 11.3% for the CallHome portion of the NIST 2000 test set, using the NIST scoring protocol. These numbers should be taken as an indication of the \u201cerror rate\u201d of a trained professional working in industry-standard speech transcript production. (We have submitted the human transcripts thus produced to the Linguistic Data Consortium for publication, so as to facilitate research by other groups.) Past work [41] reports inter-transcriber error rates for data taken from the later RT03 test set (which contains Switchboard and Fisher, but no CallHome data). Error rates of 4.1 to 4.5% are reported for extremely careful multiple transcriptions, and 9.6% for \u201cquick transcriptions.\u201d While this is a different test set, the numbers are in line with our findings. We note that the bulk of the Fisher training data, and the bulk of the data overall, was transcribed with the \u201cquick transcription\u201d guidelines. Thus, the current state of the art is actually far exceeding the noise level in its own training data. Perhaps the most important point is the extreme variability between the two test subsets. The more informal CallHome data has almost double the human error rate of the Switchboard data. Interestingly, the same informality, multiple speakers per channel, and recording conditions that make CallHome hard for computers make it difficult for people as well. Notably, the performance of our artificial system aligns almost exactly with the performance of people on both sets.\n3. CONVOLUTIONAL AND LSTM NEURAL NETWORKS"
        },
        {
            "heading": "3.1. CNNs",
            "text": "We use three CNN variants. The first is the VGG architecture of [42]. Compared to the networks used previously in image recognition, this network uses small (3x3) filters, is deeper, and applies up to five convolutional layers before pooling. The second network is modeled on the ResNet architecture [43], which adds highway connections [44], i.e. a linear transform of each layer\u2019s input to the layer\u2019s output [44, 45]. The only difference is that we apply Batch Normalization before computing ReLU activations. The last CNN variant is the LACE (layer-wise context expansion with attention) model [46]. LACE is a TDNN [23] variant in which each higher layer is a weighted sum of nonlinear transformations of a window of lower layer frames. In other words, each higher layer exploits broader context than lower layers. Lower layers focus on extracting simple local patterns while higher layers extract complex patterns that cover broader contexts. Since not all frames in a window carry the same importance, an attention mask is applied. The LACE model differs from the earlier TDNN models e.g. [23, 47] in the use of a learned attention mask and ResNet like linear pass-through. As illustrated in detail in Figure 1, the model is composed of four blocks, each with the same architecture. Each block starts\nwith a convolution layer with stride 2 which sub-samples the input and increases the number of channels. This layer is followed by four RELU-convolution layers with jump links similar to those used in ResNet. Table 1 compares the layer structure and parameters of the three CNN architectures. We also trained a fused model by combining a ResNet model and a VGG model at the senone posterior level. Both base models are independently trained, and then the score fusion weight is optimized on development data. The fused system is our best single system."
        },
        {
            "heading": "3.2. LSTMs",
            "text": "While our best performing models are convolutional, the use of long short-term memory networks (LSTMs) is a close second. We use a bidirectional architecture [48] without frameskipping [29]. The core model structure is the LSTM defined in [28]. We found that using networks with more than six layers did not improve the word error rate on the development set, and chose 512 hidden units, per direction, per layer, as that provided a reasonable trade-off between training time and final model accuracy."
        },
        {
            "heading": "3.3. Spatial Smoothing",
            "text": "Inspired by the human auditory cortex, where neighboring neurons tend to simultaneously activate, we employ a spatial smoothing technique to improve the accuracy of our LSTM models. The smoothing is implemented as a regularization term on the activations between layers of the acoustic\nmodel. First, each vector of activations is re-interpreted as a 2-dimensional image. For example, if there are 512 neurons, they are interpreted as the pixels of a 16 by 32 image. Second, this image is high-pass filtered. The filter is implemented as a circular convolution with a 3 by 3 kernel. The center tap of the kernel has a value of 1, and the remaining eight having a value of \u22121/8. Third, the energy of this highpass filtered image is computed and added to the training objective function. We have found empirically that a suitable scale for this energy is 0.1 with respect to the existing cross entropy objective function. The overall effect of this process is to make the training algorithm prefer models that have correlated neurons, and to improve the word error rate of the acoustic model. Table 2 shows the benefit in error rate for some of our early systems. We observed error reductions of between 5 and 10% relative from spatial smoothing.\n4. SPEAKER ADAPTIVE MODELING\nSpeaker adaptive modeling in our system is based on conditioning the network on an i-vector [49] characterization of each speaker [50, 51]. A 100-dimensional i-vector is generated for each conversation side. For the LSTM system, the conversation-side i-vector vs is appended to each frame of input. For convolutional networks, this approach is inappropriate because we do not expect to see spatially contiguous patterns in the input. Instead, for the CNNs, we add a learnable weight matrix W l to each layer, and add W lvs to the activation of the layer before the nonlinearity. Thus, in the CNN, the i-vector essentially serves as an speaker-dependent bias to each layer. Note that the i-vectors are estimated using MFCC features; by using them subsequently in systems based on log-filterbank features, we may benefit from a form of feature combination. Performance improvements from ivectors are shown in Table 3. The full experimental setup is described in Section 8.\n5. LATTICE-FREE SEQUENCE TRAINING\nAfter standard cross-entropy training, we optimize the model parameters using the maximum mutual information (MMI) objective function. Denoting a word sequence by w and its corresponding acoustic realization by a, the training criterion is \u2211\nw,a\u2208data log P (w)P (a|w)\u2211\u2032 w P (w \u2032)P (a|w\u2032) .\nAs noted in [52, 53], the necessary gradient for use in backpropagation is a simple function of the posterior probability of a particular acoustic model state at a given time, as computed by summing over all possible word sequences in an unconstrained manner. As first done in [12], and more recently in [54], this can be accomplished with a straightforward alphabeta computation over the finite state acceptor representing the decoding search space. In [12], the search space is taken to be an acceptor representing the compositionHCLG for a unigram language model L on words. In [54], a language model on phonemes is used instead. In our implementation, we use a mixed-history acoustic unit language model. In this model, the probability of transitioning into a new context-dependent phonetic state (senone) is conditioned on both the senone and phone history. We found this model to perform better than either purely word-based or phone-based models. Based on a set of initial experiments, we developed the following procedure:\n1. Perform a forced alignment of the training data to select lexical variants and determine frame-aligned senone sequences.\n2. Compress consecutive framewise occurrences of a single senone into a single occurrence.\n3. Estimate an unsmoothed, variable-length N-gram language model from this data, where the history state consists of the previous phone and previous senones within the current phone.\nTo illustrate this, consider the sample senone sequence {s s2.1288, s s3.1061, s s4.1096}, {eh s2.527, eh s3.128, eh s4.66}, {t s2.729, t s3.572, t s4.748}. When predicting the state following eh s4.66 the history consists of (s, eh s2.527, eh s3.128, eh s4.66), and following t s2.729, the history is (eh, t s2.729). We construct the denominator graph from this language model, and HMM transition probabilities as determined by transition-counting in the senone sequences found in the training data. Our approach not only largely reduces the complexity of building up the language model but also provides very reliable training performance. We have found it convenient to do the full computation, without pruning, in a series of matrix-vector operations on the GPU. The underlying acceptor is represented with a sparse matrix, and we maintain a dense likelihood vector for each time frame. The alpha and beta recursions are implemented with CUSPARSE level-2 routines: sparse-matrix, dense vector multiplies. Run time is about 100 times faster than real time. As in [54], we use cross-entropy regularization. In all the lattice-free MMI (LFMMI) experiments mentioned below we use a trigram language model. Most of the gain is usually obtained after processing 24 to 48 hours of data.\n6. LM RESCORING AND SYSTEM COMBINATION\nAn initial decoding is done with a WFST decoder, using the architecture described in [55]. We use an N-gram language model trained and pruned with the SRILM toolkit [56]. The first-pass LM has approximately 15.9 million bigrams, trigrams, and 4grams, and a vocabulary of 30,500 words. It gives a perplexity of 69 on the 1997 CTS evaluation transcripts. The initial decoding produces a lattice with the pronunciation variants marked, from which 500-best lists are generated for rescoring purposes. Subsequent N-best rescoring uses an unpruned LM comprising 145 million N-grams. All N-gram LMs were estimated by a maximum entropy criterion as described in [57]. The N-best hypotheses are then rescored using a combination of the large N-gram LM and several neural net LMs. We have experimented with both RNN LMs and LSTM LMs, and describe the details in the following two sections."
        },
        {
            "heading": "6.1. RNN-LM setup",
            "text": "Our RNN-LMs are trained and evaluated using the CUEDRNNLM toolkit [58]. Our RNN-LM configuration has several distinctive features, as described below.\n1. We trained both standard, forward-predicting RNNLMs and backward RNN-LMs that predict words in\n2. As is customary, the RNN-LM probability estimates are interpolated at the word-level with corresponding Ngram LM probabilities (separately for the forward and backward models). In addition, we trained a second RNN-LM for each direction, obtained by starting with different random initial weights. The two RNN-LMs and the N-gram LM for each direction are interpolated with weights of (0.375, 0.375, 0.25).\n3. In order to make use of LM training data that is not fully matched to the target conversational speech domain, we start RNN-LM training with the union of in-domain (here, CTS) and out-of-domain (e.g., Web) data. Upon convergence, the network undergoes a second training phase using the in-domain data only. Both training phases use in-domain validation data to regulate the learning rate schedule and termination. Because the size of the out-of-domain data is a multiple of the indomain data, a standard training on a simple union of the data would not yield a well-matched model, and have poor perplexity in the target domain.\n4. We found best results with an RNN-LM configuration that had a second, non-recurrent hidden layer. This produced lower perplexity and word error than the standard, single-hidden-layer RNN-LM architecture [34].1\nThe overall network architecture thus had two hidden layers with 1000 units each, using ReLU nonlinearities. Training used noise-contrastive estimation (NCE) [59].\n5. The RNN-LM output vocabulary consists of all words occurring more than once in the in-domain training set. While the RNN-LM estimates a probability for unknown words, we take a different approach in rescoring: The number of out-of-set words is recorded for each hypothesis and a penalty for them is estimated for them when optimizing the relative weights for all model scores (acoustic, LM, pronunciation), using the SRILM nbest-optimize tool.\n1However, adding more hidden layers produced no further gains."
        },
        {
            "heading": "6.2. LSTM-LM setup",
            "text": "After obtaining good results with RNN-LMs we also explored the LSTM recurrent network architecture for language modeling, inspired by recent work showing gains over RNN-LMs for conversational speech recognition [37]. In addition to applying the lessons learned from our RNN-LM experiments, we explored additional alternatives, as described below.\n1. There are two types of input vectors our LSTM LMs take, word based one-hot vector input and letter trigram vector [60] input. Including both forward and backward models, we trained four different LSTM LMs in total.\n2. For the word based input, we leveraged the approach from [61] to tie the input embedding and output embedding together.\n3. Here we also used a two-phase training schedule to train the LSTM LMs. First we train the model on the combination of in-domain and out-domain data for four data passes without any learning rate adjustment. We then start from the resulting model and train on in-domain data until convergence.\n4. Overall the letter trigram based models perform a little better than the word based language model. We tried applying dropout on both types of language models but didn\u2019t see an improvement.\n5. Convergence was improved through a variation of selfstabilization [62], in which each output vector x of nonlinearities are scaled by 14 ln(1 + e\n4\u03b2), where a \u03b2 is a scalar that is learned for each output. This has a similar effect as the scale of the well-known batch normalization technique, but can be used in recurrent loops.\n6. Table 4 shows the impact of number of layers on the final perplexities. Based on this, we proceeded with three hidden layers, with 1000 hidden units each. The perplexities of each LSTM-LM we used in the final combination (before interpolating with the N-gram model) can be found in Table 5.\nFor the final system, we interpolated two LSTM-LMs with an N-gram LM for the forward-direction LM, and similarly for the backward-direction LM. All LSTMs use three hidden\nlayers and are trained on in-domain and web data. Unlike for the RNN-LMs, the two models being interpolated differ not just in their random initialization, but also in the input encoding (one uses a triletter encoding, the other a one-hot word encoding). The forward and backward LM log probability scores are combined additively."
        },
        {
            "heading": "6.3. Training data",
            "text": "The 4-gram language model for decoding was trained on the available CTS transcripts from the DARPA EARS program: Switchboard (3M words), BBN Switchboard-2 transcripts (850k), Fisher (21M), English CallHome (200k), and the Uni-\nversity of Washington conversational Web corpus (191M). A separate N-gram model was trained from each source and interpolated with weights optimized on RT-03 transcripts. For the unpruned large rescoring 4-gram, an additional LM component was added, trained on 133M word of LDC Broadcast News texts. The N-gram LM configuration is modeled after that described in [51], except that maxent smoothing was used. The RNN and LSTM LMs were trained on Switchboard and Fisher transcripts as in-domain data (20M words for gradient computation, 3M for validation). To this we added 62M words of UW Web data as out-of-domain data, for use in the two-phase training procedure described above."
        },
        {
            "heading": "6.4. RNN-LM and LSTM-LM performance",
            "text": "Table 6 gives perplexity and word error performance for various recurrent neural net LM setups, from simple to more complex. The acoustic model used was the ResNet CNN. Note that, unlike the results in Tables 4 and 5, the neural net LMs in Table 6 are interpolated with the N-gram LM. As can be seen, each of the measures described earlier adds incremental gains, which, however, add up to a substantial improvement overall. The total gain relative to a purely N-gram based system is a 20% relative error reduction with RNN-LMs, and 23% with LSTM-LMs. As shown later (see Table 8) the gains with different acoustic models are similar."
        },
        {
            "heading": "6.5. System Combination",
            "text": "The LM rescoring is carried out separately for each acoustic model. The rescored N-best lists from each subsystem are then aligned into a single confusion network [63] using the SRILM nbest-rover tool. However, the number of potential candidate systems is too large to allow an all-out combination, both for practical reasons and due to overfitting issues. Instead, we perform a greedy search, starting with the single best system, and successively adding additional systems, to find a small set of systems that are maximally complementary. The RT-02 Switchboard set was used for this search procedure. We experimented with two search algorithms to find good subsets of systems. We always start with the system giving the best individual accuracy on the development set. In one approach, a greedy forward search then adds systems incrementally to the combination, giving each equal weight. If no improvement is found with any of the unused systems, we try adding each with successively lower relative weights of 0.5, 0.2, and 0.1, and stop if none of these give an improvement. A second variant of the search procedure that can give lower error (as measured on the devset) estimates the best system weights for each incremental combination candidate. The weight estimation is done using an expectation-maximization algorithm based on aligning the reference words to the confusion networks, and maximizing the weighted probability of the correct word at each alignment position. To avoid overfitting, the weights for an N -way combination are smoothed hi-\nerarchically, i.e., interpolated with the weights from the (N \u2212 1)-way system that preceded it. This tends to give robust weights that are biased toward the early (i.e., better) subsystems. The final system incorporated a variety of BLSTM models with roughly similar performance, but differing in various metaparameters (number of senones, use of spatial smoothing, and choice of pronunciation dictionaries).2 To further limit the number of free parameters to be estimated in system combination, we performed system selection in two stages. First, we selected the four best BLSTM systems. We then combined these with equal weights and treated them as a single subsystem in searching for a larger combination including other acoustic models. This yielded our best overall combined system, as reported in Section 8.3.\n7. MICROSOFT COGNITIVE TOOLKIT (CNTK)\nAll neural networks in the final system were trained with the Microsoft Cognitive Toolkit, or CNTK [64, 65]. on a Linux-based multi-GPU server farm. CNTK allows for flexible model definition, while at the same time scaling very efficiently across multiple GPUs and multiple servers. The resulting fast experimental turnaround using the full 2000- hour corpus was critical for our work."
        },
        {
            "heading": "7.1. Flexible, Terse Model Definition",
            "text": "In CNTK, a neural network (and the training criteria) are specified by its formula, using a custom functional language (BrainScript), or Python. A graph-based execution engine, which provides automatic differentiation, then trains the model\u2019s parameters through SGD. Leveraging a stock library of common layer types, networks can be specified very tersely. Samples can be found in [64]."
        },
        {
            "heading": "7.2. Multi-Server Training using 1-bit SGD",
            "text": "Training the acoustic models in this paper on a single GPU would take many weeks or even months. CNTK made training times feasible by parallelizing the SGD training with our 1-bit SGD parallelization technique [66]. This data-parallel method distributes minibatches over multiple worker nodes, and then aggregates the sub-gradients. While the necessary communication time would otherwise be prohibitive, the 1- bit SGD method eliminates the bottleneck by two techniques: 1-bit quantization of gradients and automatic minibatch-size scaling. In [66], we showed that gradient values can be quantized to just a single bit, if one carries over the quantization error from one minibatch to the next. Each time a sub-gradient is quantized, the quantization error is computed and remembered, and then added to the next minibatch\u2019s sub-gradient.\n2We used two different dictionaries, one based on a standard phone set and another with dedicated vowel and nasal phones used only in the pronunciations of filled pauses (\u201cuh\u201d, \u201cum\u201d) and backchannel acknowledgments (\u201cuh-huh\u201d, \u201cmhm\u201d), similar to [63].\nThis reduces the required bandwidth 32-fold with minimal loss in accuracy. Secondly, automatic minibatch-size scaling progressively decreases the frequency of model updates. At regular intervals (e.g. every 72h of training data), the trainer tries larger minibatch sizes on a small subset of data and picks the largest that maintains training loss. These two techniques allow for excellent multi-GPU/server scalability, and reduced the acoustic-model training times on 2000h from months to between 1 and 3 weeks, making this work feasible."
        },
        {
            "heading": "7.3. Computational performance",
            "text": "Table 7 compares the runtimes, as multiples of speech duration, of various processing steps associated with the different acoustic model architectures (figures for DNNs are given only as a reference point, since they are not used in our system). Acoustic model (AM) training comprises the forward and backward dynamic programming passes, as well as parameter updates. AM evaluation refers to the forward computation only. Decoding includes AM evaluation along with hypothesis search (only the former makes use of the GPU). Runtimes were measured on a 12-core Intel Xeon E5-2620v3 CPU clocked at 2.4GHz, with an Nvidia Titan X GPU. We observe that the GPU gives a 10 to 100-fold speedup for AM evaluation over the CPU implementation. AM evaluation is thus reduced to a small faction of overall decoding time, making near-realtime operation possible.\n8. EXPERIMENTS AND RESULTS"
        },
        {
            "heading": "8.1. Speech corpora",
            "text": "We train with the commonly used English CTS (Switchboard and Fisher) corpora. Evaluation is carried out on the NIST 2000 CTS test set, which comprises both Switchboard (SWB) and CallHome (CH) subsets. The waveforms were segmented according to the NIST partitioned evaluation map (PEM) file, with 150ms of dithered silence padding added in the case of the CallHome conversations.3 The Switchboard-1 portion of the NIST 2002 CTS test set was used for tuning and development. The acoustic training data is comprised by LDC corpora 97S62, 2004S13, 2005S13, 2004S11 and 2004S09; see [12] for a full description."
        },
        {
            "heading": "8.2. Acoustic Model Details",
            "text": "Forty-dimensional log-filterbank features were extracted every 10 milliseconds, using a 25-millisecond analysis window. The CNN models used window sizes as indicated in Table 1, and the LSTMs processed one frame of input at a time. The bulk of our models use three state left-to-right triphone models with 9000 tied states. Additionally, we have trained several models with 27k tied states. The phonetic inventory in-\n3Using the sox tool options pad 0.15 0.15 dither -p 14."
        },
        {
            "heading": "CH SWB CH SWB CH SWB",
            "text": "cludes special models for noise, vocalized-noise, laughter and silence. We use a 30k-vocabulary derived from the most common words in the Switchboard and Fisher corpora. The decoder uses a statically compiled unigram graph, and dynamically applies the language model score. The unigram graph has about 300k states and 500k arcs. Table 3 shows the result of i-vector adaptation and LFMMI training on several of our early systems. We achieve a 5\u20138% relative improvement from i-vectors, including on CNN systems. The last row of Table 3 shows the effect of LFMMI training on the different models. We see a consistent 7\u201310% further relative reduction in error rate for all models. Considering the great increase in procedural simplicity of LFMMI over the previous practice of writing\nlattices and post-processing them, we consider LFMMI to be a significant advance in technology."
        },
        {
            "heading": "8.3. Overall Results and Discussion",
            "text": "The performance of all our component models is shown in Table 8, along with the BLSTM combination and full system combination results. (Recall that the four best BLSTM systems are combined with equal weights first, as described in Section 6.5.) Key benchmarks from the literature, our own best results, and the measured human error rates are compared in Table 9.4 All models listed in Table 8 are selected for the combined systems for one or more of the three rescoring LMs. The only exception is the VGG+ResNet system, which combines acoustic senone posteriors from the VGG and ResNet networks. While this yields our single best acoustic model, only the individual VGG and ResNet models are used in the overall system combination. We also observe that the four model variants chosen for the combined BLSTM subsystem differ incrementally by one hyperparameter (smooth-\n4When comparing the last row in Table 3 with the \u201cN-gram LM\u201d results in Table 8, note that the former results were obtained with the pruned N-gram LM used in the decoder and fixed score weights (during lattice generation), whereas the latter results are from rescoring with the unpruned N-gram LM (during N-best generation), using optimized score weighting. Accordingly, the rescoring results are generally somewhat better.\ning, number of senones, dictionary), and that the BLSTMs alone achieve an error that is within 3% relative of the full system combination. This validates the rationale that choosing different hyperparameters is an effective way to obtain complementary systems for combination purposes. We also assessed the lower bound of performance for our lattice/Nbest rescoring paradigm. The 500-best lists from the lattices generated with the ResNet CNN system had an oracle (lowest achievable) WER of 2.7% on the Switchboard portion of the NIST 2000 evaluation set, and an oracle WER of 4.9% on the CallHome portion. The oracle error of the combined system is even lower (though harder to quantify) since (1) N-best output from all systems are combined and (2) confusion network construction generates new possible hypotheses not contained in the original N-best lists. With oracle error rates less than half the currently achieved actual error rates, we conclude that search errors are not a major limiting factor to even better accuracy.\n9. ERROR ANALYSIS\nIn this section, we compare the errors made by our artificial recognizer with those made by human transcribers. We find that the machine errors are substantially the same as human ones, with one large exception: confusions between backchannel words and hesitations. The distinction is that backchannel words like \u201cuh-huh\u201d are an acknowledgment of the speaker, also signaling that the speaker should keep talking, while hesitations like \u201cuh\u201d are used to indicate that the current speaker has more to say and wants to keep his or her turn.5 As turn-management devices, these two classes of words therefore have exactly opposite functions. Table 10 shows the ten most common substitutions for both humans and the artificial system. Tables 11 and 12 do the same for deletions and insertions. Focusing on the substitutions, we see that by far the most common error in the ASR system is the confusion of a hesitation in the reference for a backchannel in the hypothesis. People do not seem to have this problem. We speculate that this is due to the nature of the Fisher training corpus, where the \u201cquick transcription\u201d guidelines were predominately used [41]. We find that there is inconsistent treatment of backchannel and hesitation in the resulting data; the relatively poor performance of the automatic system here might simply be due to confusions in the training data annotations. For perspective, there are over twenty-one thousand words in each test set. Thus the errors due to hesitation/backchannel substitutions account for an error rate of only about 0.2% absolute.\nThe most frequent substitution for people on the Switchboard corpus was mistaking a hesitation in the reference for\n5The NIST scoring protocol treats hesitation words as optional, and we therefore delete them from our recognizer output prior to scoring. This explains why we see many substitutions of backchannels for hesitations, but not vice-versa.\nthe word \u201chmm.\u201d The scoring guidelines treat \u201chmm\u201d as a word distinct from backchannels and hesitations, so this is not a scoring mistake. Examination of the contexts in which the error is made show that it is most often intended to acknowledge the other speaker, i.e. as a backchannel. For both people and our automated system, the insertion and deletion patterns are similar: short function words are by far the most frequent errors. In particular, the single most common error made by the transcribers was to omit the word \u201cI.\u201d While we believe further improvement in function and content words is possible, the significance of the remaining backchannel/hesitation confusions is unclear. Table 13 shows the overall error rates broken down by substitutions, insertions and deletions. We see that the human transcribers have a somewhat lower substitution rate, and a higher deletion rate. The relatively higher deletion rate might reflect a human bias to avoid outputting uncertain information, or the productivity demands on a professional transcriber. In all cases, the number of insertions is relatively small.\n10. RELATION TO PRIOR WORK\nCompared to earlier applications of CNNs to speech recognition [67, 68], our networks are much deeper, and use linear bypass connections across convolutional layers. They are similar in spirit to those studied more recently by [31, 30, 51, 32, 33]. We improve on these architectures with the LACE model [46], which iteratively expands the effective window size, layer-by-layer, and adds an attention mask to differentially weight distant context. Our spatial regularization technique is similar in spirit to stimulated deep neural networks [69]. Whereas stimulated networks use a supervision signal to encourage locality of activations in the model, our technique is automatic. Our use of lattice-free MMI is distinctive, and extends previous work [12, 54] by proposing the use of a mixed triphone/phoneme history in the language model. On the language modeling side, we achieve a performance boost by combining multiple LSTM-LMs in both forward and backward directions, and by using a two-phase training regimen to get best results from out-of-domain data. For our best CNN system, LSTM-LM rescoring yields a relative word error reduction of 23%, and a 20% relative gain for the combined recognition system, considerably larger than previously reported for conversational speech recognition [37].\n11. CONCLUSIONS\nWe have measured the human error rate on NIST\u2019s 2000 conversational telephone speech recognition task. We find that there is a great deal of variability between the Switchboard and CallHome subsets, with 5.8% and 11.0% error rates respectively. For the first time, we report automatic recognition performance on par with human performance on this task.\nOur system\u2019s performance can be attributed to the systematic use of LSTMs for both acoustic and language modeling, as well as CNNs in the acoustic model, and extensive combination of complementary system for both acoustic and language modeling."
        },
        {
            "heading": "Acknowledgments",
            "text": "We thank Arul Menezes for access to the Microsoft transcription pipeline; Chris Basoglu, Amit Agarwal and Marko Radmilac for their invaluable assistance with CNTK; Jinyu Li and Partha Parthasarathy for many helpful conversations. We also thank X. Chen from Cambridge University for valuable assistance with the CUED-RNNLM toolkit, and the International Computer Science Institute for compute and data resources.\n12. REFERENCES\n[1] M. Campbell, A. J. Hoane, and F.-h. Hsu, \u201cDeep Blue\u201d, Artificial intelligence, vol. 134, pp. 57\u201383, 2002.\nnie, and R. A. Gopinath, \u201cSuper-human multi-talker speech recognition: the IBM 2006 Speech Separation Challenge system\u201d, in Proc. Interspeech, vol. 12, p. 155, 2006.\n[5] C. Weng, D. Yu, M. L. Seltzer, and J. Droppo, \u201cSinglechannel mixed speech recognition using deep neural networks\u201d, in Proc. IEEE ICASSP, pp. 5632\u20135636. IEEE, 2014.\n[6] D. S. Pallett, \u201cA look at NIST\u2019s benchmark ASR tests: past, present, and future\u201d, in IEEE Automatic Speech Recognition and Understanding Workshop, pp. 483\u2013 488. IEEE, 2003.\n[7] P. Price, W. M. Fisher, J. Bernstein, and D. S. Pallett, \u201cThe DARPA 1000-word resource management database for continuous speech recognition\u201d, in Proc. IEEE ICASSP, pp. 651\u2013654. IEEE, 1988.\n[8] D. B. Paul and J. M. Baker, \u201cThe design for the wall street journal-based csr corpus\u201d, in Proceedings of the workshop on Speech and Natural Language, pp. 357\u2013 362. Association for Computational Linguistics, 1992.\n[9] D. Graff, Z. Wu, R. MacIntyre, and M. Liberman, \u201cThe 1996 broadcast news speech and language-model corpus\u201d, in Proceedings of the DARPA Workshop on Spoken Language technology, pp. 11\u201314, 1997.\n[10] J. J. Godfrey, E. C. Holliman, and J. McDaniel, \u201cSwitchboard: Telephone speech corpus for research and development\u201d, in Proc. IEEE ICASSP, vol. 1, pp. 517\u2013520. IEEE, 1992.\n[11] C. Cieri, D. Miller, and K. Walker, \u201cThe Fisher corpus: a resource for the next generations of speech-to-text\u201d, in LREC, vol. 4, pp. 69\u201371, 2004.\n[12] S. F. Chen, B. Kingsbury, L. Mangu, D. Povey, G. Saon, H. Soltau, and G. Zweig, \u201cAdvances in speech transcription at IBM under the DARPA EARS program\u201d, IEEE Trans. Audio, Speech, and Language Processing, vol. 14, pp. 1596\u20131608, 2006.\n[13] S. Matsoukas, J.-L. Gauvain, G. Adda, T. Colthurst, C.L. Kao, O. Kimball, L. Lamel, F. Lefevre, J. Z. Ma, J. Makhoul, et al., \u201cAdvances in transcription of broadcast news and conversational telephone speech within the combined ears bbn/limsi system\u201d, IEEE Transactions on Audio, Speech, and Language Processing, vol. 14, pp. 1541\u20131556, 2006.\n[14] A. Stolcke, B. Chen, H. Franco, V. R. R. Gadde, M. Graciarena, M.-Y. Hwang, K. Kirchhoff, A. Mandal, N. Morgan, X. Lei, et al., \u201cRecent innovations in speech-to-text transcription at SRI-ICSI-UW\u201d, IEEE Transactions on Audio, Speech, and Language Processing, vol. 14, pp. 1729\u20131744, 2006.\n[15] A. Ljolje, \u201cThe AT&T 2001 LVCSR system\u201d, NIST LVCSR Workshop, 2001.\n[16] J.-L. Gauvain, L. Lamel, H. Schwenk, G. Adda, L. Chen, and F. Lefevre, \u201cConversational telephone speech recognition\u201d, in Proc. IEEE ICASSP, vol. 1, pp. I\u2013212. IEEE, 2003.\n[17] G. Evermann, H. Y. Chan, M. J. F. Gales, T. Hain, X. Liu, D. Mrva, L. Wang, and P. C. Woodland, \u201cDevelopment of the 2003 cu-htk conversational telephone speech transcription system\u201d, in Proc. IEEE ICASSP, vol. 1, pp. I\u2013249. IEEE, 2004.\n[18] F. Seide, G. Li, and D. Yu, \u201cConversational speech transcription using context-dependent deep neural networks\u201d, in Proc. Interspeech, pp. 437\u2013440, 2011.\n[19] R. P. Lippmann, \u201cSpeech recognition by machines and humans\u201d, Speech Communication, vol. 22, pp. 1\u201315, 1997.\n[20] W. Xiong, J. Droppo, X. Huang, F. Seide, M. Seltzer, A. Stolcke, D. Yu, and G. Zweig, \u201cThe Microsoft 2016 conversational speech recognition system\u201d, submitted to ICASSP, 2017, preprint at https://arxiv.org/abs/1609.03528.\n[21] F. J. Pineda, \u201cGeneralization of back-propagation to recurrent neural networks\u201d, Physical Review Letters, vol. 59, pp. 2229, 1987.\n[22] R. J. Williams and D. Zipser, \u201cA learning algorithm for continually running fully recurrent neural networks\u201d, Neural Computation, vol. 1, pp. 270\u2013280, 1989.\n[23] A. Waibel, T. Hanazawa, G. Hinton, K. Shikano, and K. J. Lang, \u201cPhoneme recognition using time-delay neural networks\u201d, IEEE Trans. Acoustics, Speech, and Signal Processing, vol. 37, pp. 328\u2013339, 1989.\n[24] Y. LeCun and Y. Bengio, \u201cConvolutional networks for images, speech, and time series\u201d, The handbook of brain theory and neural networks, vol. 3361, pp. 1995, 1995.\n[25] Y. LeCun, B. Boser, J. S. Denker, D. Henderson, R. E. Howard, W. Hubbard, and L. D. Jackel, \u201cBackpropagation applied to handwritten zip code recognition\u201d, Neural computation, vol. 1, pp. 541\u2013551, 1989.\n[26] T. Robinson and F. Fallside, \u201cA recurrent error propagation network speech recognition system\u201d, Computer Speech & Language, vol. 5, pp. 259\u2013274, 1991.\n[27] S. Hochreiter and J. Schmidhuber, \u201cLong short-term memory\u201d, Neural Computation, vol. 9, pp. 1735\u20131780, 1997.\n[28] H. Sak, A. W. Senior, and F. Beaufays, \u201cLong shortterm memory recurrent neural network architectures for large scale acoustic modeling\u201d, in Proc. Interspeech, pp. 338\u2013342, 2014.\n[29] H. Sak, A. Senior, K. Rao, and F. Beaufays, \u201cFast and accurate recurrent neural network acoustic models for speech recognition\u201d, in Proc. Interspeech, pp. 1468\u2013 1472, 2015.\n[30] G. Saon, H.-K. J. Kuo, S. Rennie, and M. Picheny, \u201cThe IBM 2015 English conversational telephone speech recognition system\u201d, in Interspeech, pp. 3140\u20133144, 2015.\n[31] T. Sercu, C. Puhrsch, B. Kingsbury, and Y. LeCun, \u201cVery deep multilingual convolutional neural networks for LVCSR\u201d, in Proc. IEEE ICASSP, pp. 4955\u20134959. IEEE, 2016.\n[32] M. Bi, Y. Qian, and K. Yu, \u201cVery deep convolutional neural networks for LVCSR\u201d, in Proc. Interspeech, pp. 3259\u20133263, 2015.\n[33] Y. Qian, M. Bi, T. Tan, and K. Yu, \u201cVery deep convolutional neural networks for noise robust speech recognition\u201d, IEEE/ACM Trans. Audio, Speech, and Language Processing, vol. 24, pp. 2263\u20132276, Aug. 2016.\n[34] T. Mikolov, M. Karafia\u0301t, L. Burget, J. Cernocky\u0300, and S. Khudanpur, \u201cRecurrent neural network based language model\u201d, in Proc. Interspeech, pp. 1045\u20131048, 2010.\n[35] T. Mikolov and G. Zweig, \u201cContext dependent recurrent neural network language model\u201d, in Proc. Interspeech, pp. 901\u2013904, 2012.\n[36] M. Sundermeyer, R. Schlu\u0308ter, and H. Ney, \u201cLstm neural networks for language modeling.\u201d, in Interspeech, pp. 194\u2013197, 2012.\n[37] I. Medennikov, A. Prudnikov, and A. Zatvornitskiy, \u201cImproving English conversational telephone speech recognition\u201d, in Proc. Interspeech, pp. 2\u20136, 2016.\n[38] T. Mikolov, W.-t. Yih, and G. Zweig, \u201cLinguistic regularities in continuous space word representations\u201d, in HLT-NAACL, vol. 13, pp. 746\u2013751, 2013.\n[39] I. Sutskever, O. Vinyals, and Q. V. Le, \u201cSequence to sequence learning with neural networks\u201d, in Advances in Neural Information Processing Systems, pp. 3104\u2013 3112, 2014.\n[40] A. Hannun, C. Case, J. Casper, B. Catanzaro, G. Diamos, E. Elsen, R. Prenger, S. Satheesh, S. Sengupta, A. Coates, et al., \u201cDeep speech: Scaling up end-to-end speech recognition\u201d, arXiv preprint arXiv:1412.5567, 2014.\n[41] M. L. Glenn, S. Strassel, H. Lee, K. Maeda, R. Zakhary, and X. Li, \u201cTranscription methods for consistency, volume and efficiency\u201d, in LREC, 2010.\n[42] K. Simonyan and A. Zisserman, \u201cVery deep convolutional networks for large-scale image recognition\u201d, arXiv preprint arXiv:1409.1556, 2014.\n[43] K. He, X. Zhang, S. Ren, and J. Sun, \u201cDeep residual learning for image recognition\u201d, arXiv preprint arXiv:1512.03385, 2015.\n[44] R. K. Srivastava, K. Greff, and J. Schmidhuber, \u201cHighway networks\u201d, CoRR, vol. abs/1505.00387, 2015.\n[45] P. Ghahremani, J. Droppo, and M. L. Seltzer, \u201cLinearly augmented deep neural network\u201d, in Proc. IEEE ICASSP, pp. 5085\u20135089. IEEE, 2016.\n[46] D. Yu, W. Xiong, J. Droppo, A. Stolcke, G. Ye, J. Li, and G. Zweig, \u201cDeep convolutional neural networks with layer-wise context expansion and attention\u201d, in Proc. Interspeech, pp. 17\u201321, 2016.\n[47] A. Waibel, H. Sawai, and K. Shikano, \u201cConsonant recognition by modular construction of large phonemic time-delay neural networks\u201d, in Proc. IEEE ICASSP, pp. 112\u2013115. IEEE, 1989.\n[48] A. Graves and J. Schmidhuber, \u201cFramewise phoneme classification with bidirectional LSTM and other neural network architectures\u201d, Neural Networks, vol. 18, pp. 602\u2013610, 2005.\n[49] N. Dehak, P. J. Kenny, R. Dehak, P. Dumouchel, and P. Ouellet, \u201cFront-end factor analysis for speaker verification\u201d, IEEE Trans. Audio, Speech, and Language Processing, vol. 19, pp. 788\u2013798, 2011.\n[50] G. Saon, H. Soltau, D. Nahamoo, and M. Picheny, \u201cSpeaker adaptation of neural network acoustic models using i-vectors\u201d, in IEEE Speech Recognition and Understanding Workshop, pp. 55\u201359, 2013.\n[51] G. Saon, T. Sercu, S. J. Rennie, and H. J. Kuo, \u201cThe IBM 2016 English conversational telephone speech recognition system\u201d, in Proc. Interspeech, pp. 7\u201311, Sep. 2016.\n[52] G. Wang and K. Sim, \u201cSequential classification criteria for NNs in automatic speech recognition\u201d, in Proc. Interspeech, pp. 441\u2013444, 2011.\n[53] K. Vesely\u0300, A. Ghoshal, L. Burget, and D. Povey, \u201cSequence-discriminative training of deep neural networks\u201d, in Proc. Interspeech, pp. 2345\u20132349, 2013.\n[54] D. Povey, V. Peddinti, D. Galvez, P. Ghahrmani, V. Manohar, X. Na, Y. Wang, and S. Khudanpur, \u201cPurely sequence-trained neural networks for ASR based on lattice-free MMI\u201d, in Proc. Interspeech, pp. 2751\u20132755, 2016.\n[55] C. Mendis, J. Droppo, S. Maleki, M. Musuvathi, T. Mytkowicz, and G. Zweig, \u201cParallelizing WFST speech decoders\u201d, in Proc. IEEE ICASSP, pp. 5325\u2013 5329. IEEE, 2016.\n[56] A. Stolcke, \u201cSRILM\u2014an extensible language modeling toolkit\u201d, in Proc. Interspeech, vol. 2002, p. 2002, 2002.\n[57] T. Aluma\u0308e and M. Kurimo, \u201cEfficient estimation of maximum entropy language models with N-gram features: An SRILM extension\u201d, in Proc. Interspeech, pp. 1820\u20131823, 2012.\n[58] X. Chen, X. Liu, Y. Qian, M. J. F. Gales, and P. C. Woodland, \u201cCUED-RNNLM: An open-source toolkit for efficient training and evaluation of recurrent neural network language models\u201d, in Proc. IEEE ICASSP, pp. 6000\u20136004. IEEE, 2016.\n[59] M. Gutmann and A. Hyva\u0308rinen, \u201cNoise-contrastive estimation: A new estimation principle for unnormalized statistical models\u201d, AISTATS, vol. 1, pp. 6, 2010.\n[60] P.-S. Huang, X. He, J. Gao, L. Deng, A. Acero, and L. Heck, \u201cLearning deep structured semantic models for web search using clickthrough data\u201d, in Proceedings of the 22nd ACM international conference on Conference on information & knowledge management, pp. 2333\u20132338. ACM, 2013.\n[61] O. Press and L. Wolf, \u201cUsing the output embedding to improve language models\u201d, arXiv preprint arXiv:1608.05859, 2016.\n[62] P. Ghahremani and J. Droppo, \u201cSelf-stabilized deep neural network\u201d, in Proc. IEEE ICASSP. IEEE, 2016.\n[63] A. Stolcke et al., \u201cThe SRI March 2000 Hub-5 conversational speech transcription system\u201d, in Proceedings NIST Speech Transcription Workshop, College Park, MD, May 2000.\n[64] Microsoft Research, \u201cThe Microsoft Cognition Toolkit (CNTK)\u201d, https://cntk.ai.\n[65] D. Yu et al., \u201cAn introduction to computational networks and the Computational Network Toolkit\u201d, Technical Report MSR-TR-2014-112, Microsoft Research, 2014, https://github.com/Microsoft/CNTK.\n[66] F. Seide, H. Fu, J. Droppo, G. Li, and D. Yu, \u201c1-bit stochastic gradient descent and its application to dataparallel distributed training of speech DNNs\u201d, in Proc. Interspeech, pp. 1058\u20131062, 2014.\n[67] T. N. Sainath, A.-r. Mohamed, B. Kingsbury, and B. Ramabhadran, \u201cDeep convolutional neural networks for LVCSR\u201d, in Proc. IEEE ICASSP, pp. 8614\u20138618. IEEE, 2013.\n[68] O. Abdel-Hamid, A.-r. Mohamed, H. Jiang, and G. Penn, \u201cApplying convolutional neural networks concepts to hybrid NN-HMM model for speech recognition\u201d, in Proc. IEEE ICASSP, pp. 4277\u20134280. IEEE, 2012.\n[69] C. Wu, P. Karanasou, M. J. Gales, and K. C. Sim, \u201cStimulated deep neural network for speech recognition\u201d, in Proc. Interspeech, pp. 400\u2013404, 2016."
        }
    ],
    "title": "ACHIEVING HUMAN PARITY IN CONVERSATIONAL SPEECH RECOGNITION",
    "year": 2017
}