{
    "abstractText": "While most previous work has focused on different pretraining objectives and architectures for transfer learning, we ask how to best adapt the pretrained model to a given target task. We focus on the two most common forms of adaptation, feature extraction (where the pretrained weights are frozen), and directly finetuning the pretrained model. Our empirical results across diverse NLP tasks with two stateof-the-art models show that the relative performance of fine-tuning vs. feature extraction depends on the similarity of the pretraining and target tasks. We explore possible explanations for this finding and provide a set of adaptation guidelines for the NLP practitioner.",
    "authors": [
        {
            "affiliations": [],
            "name": "Matthew Peters"
        },
        {
            "affiliations": [],
            "name": "Sebastian Ruder"
        },
        {
            "affiliations": [],
            "name": "Noah A. Smith"
        }
    ],
    "id": "SP:e5ff1bcdaaf6cf051d2dedcecca5d8beb2ed08da",
    "references": [
        {
            "authors": [
                "Yossi Adi",
                "Einat Kermany",
                "Yonatan Belinkov",
                "Ofer Lavi",
                "Yoav Goldberg."
            ],
            "title": "Fine-grained Analysis of Sentence Embeddings Using Auxiliary Prediction Tasks",
            "venue": "Proceedings of ICLR 2017.",
            "year": 2017
        },
        {
            "authors": [
                "Daniel M. Cer",
                "Mona T. Diab",
                "Eneko Agirre",
                "I\u00f1igo Lopez-Gazpio",
                "Lucia Specia."
            ],
            "title": "Semeval2017 task 1: Semantic textual similarity multilingual and crosslingual focused evaluation",
            "venue": "SemEval@ACL.",
            "year": 2017
        },
        {
            "authors": [
                "Qian Chen",
                "Xiaodan Zhu",
                "Zhenhua Ling",
                "Si Wei",
                "Hui Jiang",
                "Diana Inkpen."
            ],
            "title": "Enhanced LSTM for Natural Language Inference",
            "venue": "Proceedings of ACL 2017.",
            "year": 2017
        },
        {
            "authors": [
                "Alexis Conneau",
                "Douwe Kiela",
                "Holger Schwenk",
                "Lo\u0131\u0308c Barrault",
                "Antoine Bordes"
            ],
            "title": "Supervised Learning of Universal Sentence Representations from Natural Language Inference Data",
            "venue": "In Proceedings of the 2017 Conference on Empirical Methods",
            "year": 2017
        },
        {
            "authors": [
                "Andrew M. Dai",
                "Quoc V. Le."
            ],
            "title": "Semisupervised sequence learning",
            "venue": "NIPS.",
            "year": 2015
        },
        {
            "authors": [
                "Jacob Devlin",
                "Ming-Wei Chang",
                "Kenton Lee",
                "Kristina Toutanova"
            ],
            "title": "BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding",
            "year": 2018
        },
        {
            "authors": [
                "William B Dolan",
                "Chris Brockett."
            ],
            "title": "Automatically constructing a corpus of sentential paraphrases",
            "venue": "Proceedings of the Third International Workshop on Paraphrasing (IWP2005).",
            "year": 2005
        },
        {
            "authors": [
                "Bjarke Felbo",
                "Alan Mislove",
                "Anders S\u00f8gaard",
                "Iyad Rahwan",
                "Sune Lehmann."
            ],
            "title": "Using millions of emoji occurrences to learn any-domain representations for detecting sentiment, emotion and sarcasm",
            "venue": "Proceedings of the 2017 Conference on",
            "year": 2017
        },
        {
            "authors": [
                "Matt Gardner",
                "Joel Grus",
                "Mark Neumann",
                "Oyvind Tafjord",
                "Pradeep Dasigi",
                "Nelson F. Liu",
                "Matthew Peters",
                "Michael Schmitz",
                "Luke S. Zettlemoyer"
            ],
            "title": "Allennlp: A deep semantic natural language processing platform",
            "year": 2017
        },
        {
            "authors": [
                "Kaiming He",
                "Ross Girshick",
                "Piotr Doll\u00e1r."
            ],
            "title": "Rethinking ImageNet Pre-training",
            "venue": "arXiv preprint arXiv:1811.08883.",
            "year": 2018
        },
        {
            "authors": [
                "Jeremy Howard",
                "Sebastian Ruder."
            ],
            "title": "Universal Language Model Fine-tuning for Text Classification",
            "venue": "Proceedings of ACL 2018.",
            "year": 2018
        },
        {
            "authors": [
                "Yoon Kim."
            ],
            "title": "Convolutional Neural Networks for Sentence Classification",
            "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing, pages 1746\u20131751.",
            "year": 2014
        },
        {
            "authors": [
                "Diederik P. Kingma",
                "Jimmy Ba."
            ],
            "title": "Adam: A method for stochastic optimization",
            "venue": "ICLR.",
            "year": 2015
        },
        {
            "authors": [
                "Ryan Kiros",
                "Yukun Zhu",
                "Ruslan Salakhutdinov",
                "Richard S. Zemel",
                "Antonio Torralba",
                "Raquel Urtasun",
                "Sanja Fidler."
            ],
            "title": "Skip-Thought Vectors",
            "venue": "Proceedings of NIPS 2015.",
            "year": 2015
        },
        {
            "authors": [
                "Philipp Koehn",
                "Franz Josef Och",
                "Daniel Marcu."
            ],
            "title": "Statistical phrase-based translation",
            "venue": "Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology-",
            "year": 2003
        },
        {
            "authors": [
                "John D. Lafferty",
                "Andrew McCallum",
                "Fernando Pereira."
            ],
            "title": "Conditional random fields: Probabilistic models for segmenting and labeling sequence data",
            "venue": "ICML.",
            "year": 2001
        },
        {
            "authors": [
                "Guillaume Lample",
                "Miguel Ballesteros",
                "Sandeep Subramanian",
                "Kazuya Kawakami",
                "Chris Dyer."
            ],
            "title": "Neural Architectures for Named Entity Recognition",
            "venue": "Proceedings of NAACL-HLT 2016.",
            "year": 2016
        },
        {
            "authors": [
                "Lajanugen Logeswaran",
                "Honglak Lee."
            ],
            "title": "An efficient framework for learning sentence representations",
            "venue": "Proceedings of ICLR 2018.",
            "year": 2018
        },
        {
            "authors": [
                "Ilya Loshchilov",
                "Frank Hutter."
            ],
            "title": "Fixing weight decay regularization in adam",
            "venue": "CoRR, abs/1711.05101.",
            "year": 2017
        },
        {
            "authors": [
                "Marco Marelli",
                "Stefano Menini",
                "Marco Baroni",
                "Luisa Bentivogli",
                "Raffaella Bernardi",
                "Roberto Zamparelli"
            ],
            "title": "A sick cure for the evaluation of compositional distributional semantic models",
            "venue": "In LREC,",
            "year": 2014
        },
        {
            "authors": [
                "Brian W Matthews."
            ],
            "title": "Comparison of the predicted and observed secondary structure of t4 phage lysozyme",
            "venue": "Biochimica et Biophysica Acta (BBA)Protein Structure, 405(2):442\u2013451.",
            "year": 1975
        },
        {
            "authors": [
                "Bryan McCann",
                "James Bradbury",
                "Caiming Xiong",
                "Richard Socher."
            ],
            "title": "Learned in Translation: Contextualized Word Vectors",
            "venue": "Advances in Neural Information Processing Systems.",
            "year": 2017
        },
        {
            "authors": [
                "Tomas Mikolov",
                "Ilya Sutskever",
                "Kai Chen",
                "Greg S Corrado",
                "Jeff Dean."
            ],
            "title": "Distributed representations of words and phrases and their compositionality",
            "venue": "NIPS.",
            "year": 2013
        },
        {
            "authors": [
                "Lili Mou",
                "Zhao Meng",
                "Rui Yan",
                "Ge Li",
                "Yan Xu",
                "Lu Zhang",
                "Zhi Jin"
            ],
            "title": "How Transferable are Neural Networks in NLP Applications",
            "venue": "Proceedings of 2016 Conference on Empirical Methods in Natural Language Processing",
            "year": 2016
        },
        {
            "authors": [
                "Morteza Noshad",
                "Yu Zeng",
                "Alfred O. Hero III."
            ],
            "title": "Scalable Mutual Information Estimation using Dependence Graphs",
            "venue": "arXiv preprint arXiv:1801.09125.",
            "year": 2018
        },
        {
            "authors": [
                "Sinno Jialin Pan",
                "Qiang Yang."
            ],
            "title": "A survey on transfer learning",
            "venue": "IEEE Transactions on Knowledge and Data Engineering, 22(10):1345\u20131359.",
            "year": 2010
        },
        {
            "authors": [
                "Jeffrey Pennington",
                "Richard Socher",
                "Christopher D. Manning."
            ],
            "title": "Glove: Global vectors for word representation",
            "venue": "EMNLP.",
            "year": 2014
        },
        {
            "authors": [
                "Matthew E. Peters",
                "Mark Neumann",
                "Mohit Iyyer",
                "Matt Gardner",
                "Christopher Clark",
                "Kenton Lee",
                "Luke Zettlemoyer."
            ],
            "title": "Deep contextualized word representations",
            "venue": "Proceedings of NAACL-HLT 2018.",
            "year": 2018
        },
        {
            "authors": [
                "Alec Radford",
                "Karthik Narasimhan",
                "Tim Salimans",
                "Ilya Sutskever"
            ],
            "title": "Improving Language Understanding by Generative Pre-Training",
            "year": 2018
        },
        {
            "authors": [
                "Sebastian Ruder",
                "Barbara Plank."
            ],
            "title": "Learning to select data for transfer learning with Bayesian Optimization",
            "venue": "Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing.",
            "year": 2017
        },
        {
            "authors": [
                "Erik F. Tjong Kim Sang",
                "Fien De Meulder."
            ],
            "title": "Introduction to the CoNLL-2003 shared task: Language-independent named entity recognition",
            "venue": "CoNLL.",
            "year": 2003
        },
        {
            "authors": [
                "Andrew M Saxe",
                "Yamini Bansal",
                "Joel Dapello",
                "Madhu Advani",
                "Artemy Kolchinsky",
                "Brendan D Tracey",
                "David D Cox."
            ],
            "title": "On the Information Bottleneck Theory of Deep Learning",
            "venue": "Proceedings of ICLR 2018.",
            "year": 2018
        },
        {
            "authors": [
                "Richard Socher",
                "Alex Perelygin",
                "Jean Y Wu",
                "Jason Chuang",
                "Christopher D Manning",
                "Andrew Y Ng",
                "Christopher Potts."
            ],
            "title": "Recursive deep models for semantic compositionality over a sentiment treebank",
            "venue": "EMNLP.",
            "year": 2013
        },
        {
            "authors": [
                "Sandeep Subramanian",
                "Adam Trischler",
                "Yoshua Bengio",
                "Christopher J Pal."
            ],
            "title": "Learning General Purpose Distributed Sentence Representations via Large Scale Multi-task Learning",
            "venue": "Proceedings of ICLR 2018.",
            "year": 2018
        },
        {
            "authors": [
                "Joseph P. Turian",
                "Lev-Arie Ratinov",
                "Yoshua Bengio."
            ],
            "title": "Word representations: A simple and general method for semi-supervised learning",
            "venue": "ACL.",
            "year": 2010
        },
        {
            "authors": [
                "Ashish Vaswani",
                "Noam Shazeer",
                "Niki Parmar",
                "Jakob Uszkoreit",
                "Llion Jones",
                "Aidan N. Gomez",
                "Lukasz Kaiser",
                "Illia Polosukhin."
            ],
            "title": "Attention is all you need",
            "venue": "NIPS.",
            "year": 2017
        },
        {
            "authors": [
                "Alex Wang",
                "Amanpreet Singh",
                "Julian Michael",
                "Felix Hill",
                "Omer Levy",
                "Samuel R Bowman"
            ],
            "title": "GLUE: A Multi-Task Benchmark and Analysis Platform for Natural Language Understanding",
            "year": 2018
        },
        {
            "authors": [
                "Adina Williams",
                "Nikita Nangia",
                "Samuel Bowman."
            ],
            "title": "A broad-coverage challenge corpus for sentence understanding through inference",
            "venue": "NAACL.",
            "year": 2018
        },
        {
            "authors": [
                "Jason Yosinski",
                "Jeff Clune",
                "Yoshua Bengio",
                "Hod Lipson"
            ],
            "title": "How transferable are features in deep neural networks",
            "year": 2014
        },
        {
            "authors": [
                "Devlin"
            ],
            "title": "In the case of BERT, the output layer is a softmax to be consistent with the fine-tuned experiments presented in Devlin et al. (2018)",
            "venue": "In addition,",
            "year": 2018
        }
    ],
    "sections": [
        {
            "heading": "1 Introduction",
            "text": "Sequential inductive transfer learning (Pan and Yang, 2010) consists of two stages: pretraining, in which the model learns a general-purpose representation of inputs, and adaptation, in which the representation is transferred to a new task. Most previous work in NLP has focused on different pretraining objectives for learning word or sentence representations (Mikolov et al., 2013; Kiros et al., 2015).\nFew works, however, have focused on the adaptation phase. There are two main paradigms for adaptation: feature extraction and fine-tuning. In feature extraction ( ) the model\u2019s weights are \u2018frozen\u2019 and the pretrained representations are used in a downstream model similar to classic feature-based approaches (Koehn et al., 2003). Alternatively, a pretrained model\u2019s parameters can be unfrozen and fine-tuned ( ) on a new task (Dai and Le, 2015). Both have benefits: enables use of task-specific model architectures and may be\n?The first two authors contributed equally. \u2020Sebastian is now at DeepMind.\nextraction ( ) and fine-tuning ( ) with ELMo and BERT. Seq.: sequence labeling. Clas.: classification. Sent. pair: sentence pair tasks.\ncomputationally cheaper as features only need to be computed once. On the other hand, is convenient as it may allow us to adapt a general-purpose representation to many different tasks.\nGaining a better understanding of the adaptation phase is key in making the most use out of pretrained representations. To this end, we compare two state-of-the-art pretrained models, ELMo (Peters et al., 2018) and BERT (Devlin et al., 2018) using both and across seven diverse tasks including named entity recognition, natural language inference (NLI), and paraphrase detection. We seek to characterize the conditions under which one approach substantially outperforms the other, and whether it is dependent on the pretraining objective or target task. We find that and\nhave comparable performance in most cases, except when the source and target tasks are either highly similar or highly dissimilar. We furthermore shed light on the practical challenges of adaptation and provide a set of guidelines to the NLP practitioner, as summarized in Table 1."
        },
        {
            "heading": "2 Pretraining and Adaptation",
            "text": "While pretraining tasks have been designed with particular downstream tasks in mind (Felbo et al., 2017), we focus on pretraining tasks that seek to\nar X\niv :1\n90 3.\n05 98\n7v 2\n[ cs\n.C L\n] 1\n1 Ju\nn 20\n19\ninduce universal representations suitable for any downstream task.\nWord representations Pretrained word vectors (Turian et al., 2010; Pennington et al., 2014) have been an essential component in state-of-the-art NLP systems. Word representations are often fixed and fed into a task specific model ( ), although can provide improvements (Kim, 2014). Recently, contextual word representations learned supervisedly (e.g., through machine translation; McCann et al., 2017) or unsupervisedly (typically through language modeling; Peters et al., 2018) have significantly improved over noncontextual vectors.\nSentence embedding methods Such methods learn sentence representations via different pretraining objectives such as previous/next sentence prediction (Kiros et al., 2015; Logeswaran and Lee, 2018), NLI (Conneau et al., 2017), or a combination of objectives (Subramanian et al., 2018). During the adaptation phase, the sentence representation is typically provided as input to a linear classifier ( ). LM pretraining with has also been successfully applied to sentence level tasks. Howard and Ruder (2018, ULMFiT) propose techniques for fine-tuning a LM, including triangular learning rate schedules and discriminative finetuning, which uses lower learning rates for lower layers. Radford et al. (2018) extend LM- to additional sentence and sentence-pair tasks.\nMasked LM and next-sentence prediction BERT (Devlin et al., 2018) combines both word and sentence representations (via masked LM and next sentence prediction objectives) in a single very large pretrained transformer (Vaswani et al., 2017). It is adapted to both word and sentence level tasks by with task-specific layers."
        },
        {
            "heading": "3 Experimental Setup",
            "text": "We compare ELMo and BERT as representatives of the two best-performing pretraining settings. This section provides an overview of our methods; see the supplement for full details."
        },
        {
            "heading": "3.1 Target Tasks and Datasets",
            "text": "We evaluate on a diverse set of target tasks: named entity recognition (NER), sentiment analysis (SA), and three sentence pair tasks, natural language inference (NLI), paraphrase detection (PD), and semantic textual similarity (STS).\nNER We use the CoNLL 2003 dataset (Sang and Meulder, 2003), which provides token level annotations of newswire across four different entity types (PER, LOC, ORG, MISC).\nSA We use the binary version of the Stanford Sentiment Treebank (SST-2; Socher et al., 2013), providing sentiment labels (negative or positive) for phrases and sentences of movie reviews.\nNLI We use both the broad-domain MultiNLI dataset (Williams et al., 2018) and Sentences Involving Compositional Knowledge (SICK-E; Marelli et al., 2014).\nPD For paraphrase detection (i.e., decide whether two sentences are semantically equivalent), we use the Microsoft Research Paraphrase Corpus (MRPC; Dolan and Brockett, 2005).\nSTS We employ the Semantic Textual Similarity Benchmark (STS-B; Cer et al., 2017) and SICKR (Marelli et al., 2014). Both datasets, provide a human judged similarity value from 1 to 5 for each sentence pair."
        },
        {
            "heading": "3.2 Adaptation",
            "text": "We now describe how we adapt ELMo and BERT to these tasks. For we require a task-specific architecture, while for we need a task-specific output layer. For fair comparison, we conduct an extensive hyper-parameter search for each task.\nFeature extraction ( ) For both ELMo and BERT, we extract contextual representations of the words from all layers. During adaptation, we learn a linear weighted combination of the layers (Peters et al., 2018) which is used as input to a taskspecific model. When extracting features, it is important to expose the internal layers as they typically encode the most transferable representations. For SA, we employ a bi-attentive classification network (McCann et al., 2017). For the sentence pair tasks, we use the ESIM model (Chen et al., 2017). For NER, we use a BiLSTM with a CRF layer (Lafferty et al., 2001; Lample et al., 2016).\nFine-tuning ( ): ELMo We max-pool over the LM states and add a softmax layer for text classification. For the sentence pair tasks, we compute cross-sentence bi-attention between the LM states (Chen et al., 2017), apply a pooling operation, then add a softmax layer. For NER, we add a CRF layer on top of the LSTM states.\nPretraining Adaptation NER SA Nat. lang. inference Semantic textual similarityCoNLL 2003 SST-2 MNLI SICK-E SICK-R MRPC STS-B\ncompared to two sentence embedding methods. Settings that are good for are colored in red (\u2206= - > 1.0); settings good for are colored in blue (\u2206= - < -1.0). Numbers for baseline methods are from respective papers, except for SST-2, MNLI, and STS-B results, which are from Wang et al. (2018). BERT fine-tuning results (except on SICK) are from Devlin et al. (2018). The metric varies across tasks (higher is always better): accuracy for SST-2, SICK-E, and MRPC; matched accuracy for MultiNLI; Pearson correlation for STS-B and SICK-R; and span F1 for CoNLL 2003. For CoNLL 2003, we report the mean with five seeds; standard deviation is about 0.2%.\nFine-tuning ( ): BERT We feed the sentence representation into a softmax layer for text classification and sentence pair tasks following Devlin et al. (2018). For NER, we extract the representation of the first word piece for each token and add a softmax layer."
        },
        {
            "heading": "4 Results",
            "text": "We show results in Table 2 comparing ELMo and BERT for both and approaches across the seven tasks with one sentence embedding method, Skip-thoughts (Kiros et al., 2015), that employs a next-sentence prediction objective similar to BERT.\nBoth ELMo and BERT outperform the sentence embedding method significantly, except on the semantic textual similarity tasks (STS) where Skipthoughts is similar to ELMo. The overall performance of and varies from task to task, with small differences except for a few notable cases. For ELMo, we find the largest differences for sentence pair tasks where consistently outperforms . For BERT, we obtain nearly the opposite result: significantly outperforms on all STS tasks, with much smaller differences for the others.\nDiscussion Past work in NLP (Mou et al., 2016) showed that similar pretraining tasks transfer better.1 In computer vision (CV), Yosinski et al. (2014) similarly found that the transferability of\n1Mou et al. (2016), however, only investigate transfer between classification tasks (NLI \u2192 SICK-E/MRPC).\nfeatures decreases as the distance between the pretraining and target task increases. In this vein, Skip-thoughts\u2014and Quick-thoughts (Logeswaran and Lee, 2018), which has similar performance\u2014 which use a next-sentence prediction objective similar to BERT, perform particularly well on STS tasks, indicating a close alignment between the pretraining and target task. This strong alignment also seems to be the reason for BERT\u2019s strong relative performance on these tasks.\nIn CV, generally outperforms when transferring from ImageNet supervised classification pretraining to other classification tasks (Kornblith et al., 2018). Recent results suggest is less useful for more distant target tasks such as semantic segmentation (He et al., 2018). This is in line with our results, which show strong performance with\nbetween closely aligned tasks (next-sentence prediction in BERT and STS tasks) and poor performance for more distant tasks (LM in ELMo and sentence pair tasks). A confounding factor may be the suitability of the inductive bias of the model architecture for sentence pair tasks, which we will analyze next."
        },
        {
            "heading": "5 Analyses",
            "text": "Modelling pairwise interactions LSTMs consider each token sequentially, while Transformers can relate each token to every other in each layer (Vaswani et al., 2017). This might facilitate\nwith Transformers on sentence pair tasks, on which ELMo- performs comparatively poorly.\nSICK-E SICK-R STS-B MRPC\nELMo- +bi-attn. 83.8 84.0 80.2 77.0 w/o bi-attn. 70.9 51.8 38.5 72.3\nTable 3: Comparison of ELMO- cross-sentence embedding methods on dev. sets of sentence pair tasks.\nSICK-E SICK-R STS-B MRPC\nBERT- , joint enc. 85.5 86.4 88.1 83.3 separate encoding 81.2 86.8 86.8 81.4\nTable 4: Comparison of BERT- cross-sentence embedding methods on dev. sets of sentence pair tasks.\nTo analyze this further, we compare different ways of encoding the sentence pair with ELMo and BERT. For ELMo, we compare encoding with and without cross-sentence bi-attention in Table 3. When adapting the ELMo LSTM to a sentence pair task, modeling the sentence interactions by fine-tuning through the bi-attention mechanism provides the best performance.2 This provides further evidence that the LSTM has difficulty modeling the pairwise interactions during sequential processing. This is in contrast to a Transformer LM that can be fine-tuned in this manner (Radford et al., 2018).\nFor BERT- , we compare joint encoding of the sentence pair with encoding the sentences separately in Table 4. The latter leads to a drop in performance, which shows that the BERT representations encode cross-sentence relationships and are therefore particularly well-suited for sentence pair tasks.\nImpact of additional parameters We evaluate whether adding parameters is useful for both adaptation settings on NER. We add a CRF layer (as used in ) and a BiLSTM with a CRF layer (as used in ) to both and show results in Table 5. We find that additional parameters are key for , but hurt performance with . In addition, requires gradual unfreezing (Howard and Ruder, 2018) to match performance of feature extraction.\nELMo fine-tuning We found fine-tuning the ELMo LSTM to be initially difficult and required careful hyper-parameter tuning. Once tuned for one task, other tasks have similar hyperparameters. Our best models used slanted trian-\n2This is similar to text classification tasks, where we find max-pooling to outperform using the final hidden state, similar to (Howard and Ruder, 2018).\nTE GO TR FI SL\nBERT- 84.4 86.7 86.1 84.5 80.9 \u2206= - -1.1 -0.2 -0.6 0.4 -0.6 JS div 0.21 0.18 0.14 0.09 0.09\nTable 6: Accuracy of feature extraction ( ) and fine-\ntuning ( ) with BERT-base trained on training data of different MNLI domains and evaluated on corresponding dev sets. TE: telephone. FI: fiction. TR: travel. GO: government. SL: slate.\ngular learning rates and discriminative fine-tuning (Howard and Ruder, 2018) and in some cases gradual unfreezing.\nImpact of target domain Pretrained language model representations are intended to be universal. However, the target domain might still impact the adaptation performance. We calculate the Jensen-Shannon divergence based on term distributions (Ruder and Plank, 2017) between the domains used to train BERT (books and Wikipedia) and each MNLI domain. We show results in Table 6. We find no significant correlation. At least for this task, the distance of the source and target domains does not seem to have a major impact on the adaptation performance.\nRepresentations at different layers In addition, we are interested how the information in the different layers of the models develops over the course of fine-tuning. We measure this information in two ways: a) with diagnostic classifiers (Adi et al., 2017); and b) with mutual information (MI; Noshad et al., 2018). Both methods allow us to associate the hidden activations of our model with a linguistic property. In both cases, we use\nthe mean of the hidden activations of BERT-base3 of each token / word piece of the sequence(s) as the representation.4\nWith diagnostic classifiers, for each example, we extract the pretrained and fine-tuned representation at each layer as features. We use these features as input to train a logistic regression model (linear regression for STS-B, which has real-valued outputs) on the training data of two single sentence (CoLA5 and SST-2) and two pair sentence tasks (MRPC and STS-B). We show its performance on the corresponding dev sets in Figure 1.\nFor all tasks, diagnostic classifier performance generally is higher in higher layers of the model. Fine-tuning improves the performance of the diagnostic classifier at every layer. For the single sentence classification tasks CoLA and SST-2, pretrained performance increases gradually until the last layers. In contrast, for the sentence pair tasks MRPC and STS-B performance is mostly flat after the fourth layer. Relevant information for sentence pair tasks thus does not seem to be concentrated primarily in the upper layers of pretrained representations, which could explain why fine-tuning is particularly useful in these scenarios.\n3We show results for BERT as they are more inspectable due to the model having more layers. Trends for ELMo are similar.\n4We observed similar results when using max-pooling or the representation of the first token.\n5The Corpus of Linguistic Acceptability (CoLA) consists of examples of expert English sentence acceptability judgments drawn from 22 books and journal articles on linguistic theory. It uses the Matthews correlation coefficient (Matthews, 1975) for evaluation and is available at: nyu-mll.github.io/CoLA\nComputing the mutual information with regard to representations of deep neural networks has only become feasible recently with the development of more sophisticated MI estimators. In our experiments, we use the state-of-the-art ensemble dependency graph estimator (EDGE; Noshad et al., 2018) with default hyper-parameter values. As a sanity check, we compute the MI between hidden activations and random labels and random representations and random labels, which yields 0 in every case as we would expect.6\nWe show the mutual information I(H;Y ) between the pretrained and fine-tuned mean hidden activations H at each layer of BERT and the output labels Y on the dev sets of CoLA, SST-2, and MRPC in Figure 2.\nThe MI between pretrained representations and labels is close to 0 across all tasks and layers, except for SST where the last layer shows a small non-zero value. In contrast, fine-tuned representations display much higher MI values. The MI for fine-tuned representations rises gradually through the intermediate and last layers for the sentence pair task MRPC, while for the single sentence classification tasks, the MI rises sharply in the last layers. Similar to our findings with diagnostic classifiers, knowledge for single sentence classification tasks thus seems mostly concentrated in the last layers, while pair sentence classification tasks gradually build up information in the intermediate and last layers of the model."
        },
        {
            "heading": "6 Conclusion",
            "text": "We have empirically analyzed fine-tuning and feature extraction approaches across diverse datasets, finding that the relative performance depends on the similarity of the pretraining and target tasks. We have explored possible explanations and provided practical recommendations for adapting pretrained representations to NLP practicioners.\n6For the same settings, we obtain non-zero values with earlier estimators (Saxe et al., 2018), which seem to be less reliable for higher numbers of dimensions."
        },
        {
            "heading": "A Experimental details",
            "text": "For fair comparison, all experiments include extensive hyper-parameter tuning. We tuned the learning rate, dropout ratio, weight decay and number of training epochs. In addition, the finetuning experiments also examined the impact of triangular learning rate schedules, gradual unfreezing, and discriminative learning rates. Hyperparameters were tuned on the development sets and the best setting evaluated on the test sets.\nAll models were optimized with the Adam optimizer (Kingma and Ba, 2015) with weight decay fix (Loshchilov and Hutter, 2017).\nWe used the publicly available pretrained ELMo7 and BERT8 models in all experiments. For ELMo, we used the original two layer bidirectional LM. In the case of BERT, we used the BERT-base model, a 12 layer bidirectional transformer. We used the English uncased model for all tasks except for NER which used the English cased model.\nA.1 Feature extraction\nTo isolate the effects of fine-tuning contextual word representations, all feature based models only include one type of word representation (ELMo or BERT) and do not include any other pretrained word representations.\nFor all tasks, all layers of pretrained representations were weighted together with learned scalar parameters following Peters et al. (2018).\nNER For the NER task, we use a two layer bidirectional LSTM in all experiments. For ELMo, the output layer is a CRF, similar to a state-of-the-art NER system (Lample et al., 2016). Feature extraction for ELMo treated each sentence independently.\nIn the case of BERT, the output layer is a softmax to be consistent with the fine-tuned experiments presented in Devlin et al. (2018). In addition, as in Devlin et al. (2018), we used document context to extract word piece representations. When composing multiple word pieces into a single word representation, we found it beneficial to run the biLSTM layers over all word pieces before taking the LSTM states of the first word piece in each word. We experimented with other pooling operations to combine word pieces into a\n7https://allennlp.org/elmo 8https://github.com/google-research/bert\nsingle word representation but they did not provide additional gains.\nSA We used the implementation of the biattentive classification network in AllenNLP (Gardner et al., 2017) with default hyperparameters, except for tuning those noted above. As in the fine-tuning experiments for SST-2, we used all available annotations during training, including those of sub-trees. Evaluation on the development and test sets used full sentences.\nSentence pair tasks When extracting features from ELMo, each sentence was handled separately. For BERT, we extracted features for both sentences jointly to be consistent with the pretraining procedure. As reported in Section 5 this improved performance over extracting features for each sentence separately.\nOur model is the ESIM model (Chen et al., 2017), modified as needed to support regression tasks in addition to classification. We used default hyper-parameters except for those described above.\nA.2 Fine-tuning When fine-tuning ELMo, we found it beneficial to use discriminative learning rates (Howard and Ruder, 2018) where the learning rate decreased by 0.4\u00d7 in each layer (so that the learning rate for the second to last layer is 0.4\u00d7 the learning rate in the top layer). In addition, for SST-2 and NER, we also found it beneficial to gradually unfreeze the weights starting with the top layer. In this setting, in each epoch one additional layer of weights is unfrozen until all weights are training. These settings were chosen by tuning development set performance.\nFor fine-tuning BERT, we used the default learning rate schedule (Devlin et al., 2018) that is similar to the schedule used by Howard and Ruder (2018).\nSA We considered several pooling operations for composing the ELMo LSTM states into a vector for prediction including max pooling, average pooling and taking the first/last states. Max pooling performed slightly better than average pooling on the development set.\nSentence pair tasks Our bi-attentive fine-tuning mechanism is similar to the the attention mechanism in the feature based ESIM model. To apply it, we first computed the bi-attention between\nall words in both sentences, then applied the same \u201cenhanced\u201d pooling operation as in (Chen et al., 2017) before predicting with a softmax. Note that this attention mechanism and pooling operation does not add any additional parameters to the network."
        }
    ],
    "title": "To Tune or Not to Tune? Adapting Pretrained Representations to Diverse Tasks",
    "year": 2019
}