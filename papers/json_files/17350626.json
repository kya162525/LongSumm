{
    "abstractText": "We propose a new equilibrium enforcing method paired with a loss derived from the Wasserstein distance for training auto-encoder based Generative Adversarial Networks. This method balances the generator and discriminator during training. Additionally, it provides a new approximate convergence measure, fast and stable training and high visual quality. We also derive a way of controlling the trade-off between image diversity and visual quality. We focus on the image generation task, setting a new milestone in visual quality, even at higher resolutions. This is achieved while using a relatively simple model architecture and a standard training procedure.",
    "authors": [
        {
            "affiliations": [],
            "name": "David Berthelot"
        },
        {
            "affiliations": [],
            "name": "Thomas Schumm"
        },
        {
            "affiliations": [],
            "name": "Luke Metz"
        }
    ],
    "id": "SP:18c13d82a43de35c82f165c7cf293a4fdcac0739",
    "references": [
        {
            "authors": [
                "Sanjeev Arora",
                "Rong Ge",
                "Yingyu Liang",
                "Tengyu Ma",
                "Yi Zhang"
            ],
            "title": "Generalization and equilibrium in generative adversarial nets (gans)",
            "venue": "arXiv preprint arXiv:1703.00573,",
            "year": 2017
        },
        {
            "authors": [
                "Yoshua Bengio",
                "Patrice Simard",
                "Paolo Frasconi"
            ],
            "title": "Learning long-term dependencies with gradient descent is difficult",
            "venue": "IEEE transactions on neural networks,",
            "year": 1994
        },
        {
            "authors": [
                "Djork-Arn\u00e9 Clevert",
                "Thomas Unterthiner",
                "Sepp Hochreiter"
            ],
            "title": "Fast and accurate deep network learning by exponential linear units (elus)",
            "venue": "arXiv preprint arXiv:1511.07289,",
            "year": 2015
        },
        {
            "authors": [
                "Vincent Dumoulin",
                "Ishmael Belghazi",
                "Ben Poole",
                "Alex Lamb",
                "Martin Arjovsky",
                "Olivier Mastropietro",
                "Aaron Courville"
            ],
            "title": "Adversarially learned inference",
            "venue": "arXiv preprint arXiv:1606.00704,",
            "year": 2016
        },
        {
            "authors": [
                "Ian Goodfellow"
            ],
            "title": "Nips 2016 tutorial: Generative adversarial networks",
            "venue": "arXiv preprint arXiv:1701.00160,",
            "year": 2016
        },
        {
            "authors": [
                "Ian Goodfellow",
                "Jean Pouget-Abadie",
                "Mehdi Mirza",
                "Bing Xu",
                "David Warde-Farley",
                "Sherjil Ozair",
                "Aaron Courville",
                "Yoshua Bengio"
            ],
            "title": "Generative adversarial nets",
            "venue": "In Advances in neural information processing systems,",
            "year": 2014
        },
        {
            "authors": [
                "Kaiming He",
                "Xiangyu Zhang",
                "Shaoqing Ren",
                "Jian Sun"
            ],
            "title": "Deep residual learning for image recognition",
            "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,",
            "year": 2016
        },
        {
            "authors": [
                "Gao Huang",
                "Zhuang Liu",
                "Kilian Q Weinberger",
                "Laurens van der Maaten"
            ],
            "title": "Densely connected convolutional networks",
            "venue": "arXiv preprint arXiv:1608.06993,",
            "year": 2016
        },
        {
            "authors": [
                "Diederik Kingma",
                "Jimmy Ba"
            ],
            "title": "Adam: A method for stochastic optimization",
            "venue": "arXiv preprint arXiv:1412.6980,",
            "year": 2014
        },
        {
            "authors": [
                "Diederik P Kingma",
                "Max Welling"
            ],
            "title": "Auto-encoding variational bayes",
            "venue": "arXiv preprint arXiv:1312.6114,",
            "year": 2013
        },
        {
            "authors": [
                "Ziwei Liu",
                "Ping Luo",
                "Xiaogang Wang",
                "Xiaoou Tang"
            ],
            "title": "Deep learning face attributes in the wild",
            "venue": "In Proceedings of International Conference on Computer Vision (ICCV),",
            "year": 2015
        },
        {
            "authors": [
                "Aaron van den Oord",
                "Nal Kalchbrenner",
                "Oriol Vinyals",
                "Lasse Espeholt",
                "Alex Graves",
                "Koray Kavukcuoglu"
            ],
            "title": "Conditional image generation with pixelcnn decoders",
            "venue": "arXiv preprint arXiv:1606.05328,",
            "year": 2016
        },
        {
            "authors": [
                "Ben Poole",
                "Alexander A Alemi",
                "Jascha Sohl-Dickstein",
                "Anelia Angelova"
            ],
            "title": "Improved generator objectives for gans",
            "venue": "arXiv preprint arXiv:1612.02780,",
            "year": 2016
        },
        {
            "authors": [
                "Alec Radford",
                "Luke Metz",
                "Soumith Chintala"
            ],
            "title": "Unsupervised representation learning with deep convolutional generative adversarial networks",
            "venue": "arXiv preprint arXiv:1511.06434,",
            "year": 2015
        },
        {
            "authors": [
                "Tim Salimans",
                "Ian Goodfellow",
                "Wojciech Zaremba",
                "Vicki Cheung",
                "Alec Radford",
                "Xi Chen"
            ],
            "title": "Improved techniques for training gans",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2016
        },
        {
            "authors": [
                "C\u00e9dric Villani"
            ],
            "title": "Optimal transport: old and new, volume 338",
            "venue": "Springer Science & Business Media,",
            "year": 2008
        },
        {
            "authors": [
                "D Warde-Farley",
                "Y Bengio"
            ],
            "title": "Improving generative adversarial networks with denoising feature matching",
            "venue": "ICLR submissions,",
            "year": 2017
        },
        {
            "authors": [
                "Han Zhang",
                "Tao Xu",
                "Hongsheng Li",
                "Shaoting Zhang",
                "Xiaolei Huang",
                "Xiaogang Wang",
                "Dimitris Metaxas"
            ],
            "title": "Stackgan: Text to photo-realistic image synthesis with stacked generative adversarial networks",
            "venue": "arXiv preprint arXiv:1612.03242,",
            "year": 2016
        },
        {
            "authors": [
                "Junbo Zhao",
                "Michael Mathieu",
                "Yann LeCun"
            ],
            "title": "Energy-based generative adversarial network",
            "venue": "arXiv preprint arXiv:1609.03126,",
            "year": 2016
        }
    ],
    "sections": [
        {
            "heading": "1 Introduction",
            "text": "Generative Adversarial Networks [7](GANs) are a class of methods for learning a data distribution pmodel(x) and realizing a model to sample from it. GANs are architectured around two functions: the generator G(z), which maps a sample z from a random uniform distribution to the data distribution, and the discriminator D(x) which determines if a sample x belongs to the data distribution. The generator and discriminator are typically learned jointly by alternating the training of D and G, based on game theory principles.\nGANs can generate very convincing images, sharper than ones produced by auto-encoders using pixel-wise losses. However, GANs still face many unsolved difficulties: in general they are notoriously difficult to train, even with many tricks applied [15, 16]. Correct hyper-parameter selection is critical. Controlling the image diversity of the generated samples is difficult. Balancing the convergence of the discriminator and of the generator is a challenge: frequently the discriminator wins too easily at the beginning of training [6]. GANs easily suffer from modal collapse, a failure mode in which just one image is learned [5]. Heuristic regularizers such as batch discrimination [16] and the repelling regularizer [21] have been proposed to alleviate this problem with varying degrees of success.\nIn this paper, we make the following contributions:\n\u2022 A GAN with a simple yet robust architecture, standard training procedure with fast and stable convergence.\n\u2022 An equilibrium concept that balances the power of the discriminator against the generator. \u2022 A new way to control the trade-off between image diversity and visual quality. \u2022 An approximate measure of convergence. To our knowledge the only other published mea-\nsure is from Wasserstein GAN [1] (WGAN), which will be discussed in the next section."
        },
        {
            "heading": "2 Related work",
            "text": "Deep Convolutional GANs [15](DCGANs) first introduced a convolutional architecture which led to improved visual quality. More recently, Energy Based GANs [21](EBGANs) were proposed\nar X\niv :1\n70 3.\n10 71\n7v 4\n[ cs\n.L G\n] 3\n1 M\nay 2\nas a class of GANs that aims to model the discriminator D(x) as an energy function. This variant converges more stably and is both easy to train and robust to hyper-parameter variations. The authors attribute some of these benefits to the larger number of targets in the discriminator. EBGAN likewise implements its discriminator as an auto-encoder with a per-pixel error.\nWhile earlier GAN variants lacked a measure of convergence, Wasserstein GANs [1] (WGANs) recently introduced a loss that also acts as a measure of convergence. In their implementation it comes at the expense of slow training, but with the benefit of stability and better mode coverage."
        },
        {
            "heading": "3 Proposed method",
            "text": "We use an auto-encoder as a discriminator as was first proposed in EBGAN [21]. While typical GANs try to match data distributions directly, our method aims to match auto-encoder loss distributions using a loss derived from the Wasserstein distance. This is done using a typical GAN objective with the addition of an equilibrium term to balance the discriminator and the generator. Our method has an easier training procedure and uses a simpler neural network architecture compared to typical GAN techniques."
        },
        {
            "heading": "3.1 Wasserstein distance lower bound for auto-encoders",
            "text": "We wish to study the effect of matching the distribution of the errors instead of matching the distribution of the samples directly. We first introduce the auto-encoder loss, then we compute a lower bound to the Wasserstein distance between the auto-encoder loss distributions of real and generated samples.\nWe first introduce L : RNx 7\u2192 R+the loss for training a pixel-wise autoencoder as:\nL(v) = |v \u2212D(v)|\u03b7 where  D : RNx 7\u2192 RNx is the autoencoder function. \u03b7 \u2208 {1, 2} is the target norm. v \u2208 RNx is a sample of dimension Nx.\nLet \u00b51,2 be two distributions of auto-encoder losses, let \u0393(\u00b51, \u00b52) be the set all of couplings of \u00b51 and \u00b52, and let m1,2 \u2208 R be their respective means. The Wasserstein distance can be expressed as:\nW1(\u00b51, \u00b52) = inf \u03b3\u2208\u0393(\u00b51,\u00b52) E(x1,x2)\u223c\u03b3 [|x1 \u2212 x2|]\nUsing Jensen\u2019s inequality, we can derive a lower bound to W1(\u00b51, \u00b52):\ninf E[|x1 \u2212 x2|] > inf |E[x1 \u2212 x2]| = |m1 \u2212m2| (1)\nIt is important to note that we are aiming to optimize a lower bound of the Wasserstein distance between auto-encoder loss distributions, not between sample distributions."
        },
        {
            "heading": "3.2 GAN objective",
            "text": "We design the discriminator to maximize equation 1 between auto-encoder losses. Let \u00b51 be the distribution of the loss L(x), where x are real samples. Let \u00b52 be the distribution of the loss L(G(z)), where G : RNz 7\u2192 RNx is the generator function and z \u2208 [\u22121, 1]Nz are uniform random samples of dimension Nz .\nSince m1,m2 \u2208 R+ there are only two possible solutions to maximizing |m1 \u2212m2|:\n(a)  W1(\u00b51, \u00b52) > m1 \u2212m2 m1 \u2192\u221e m2 \u2192 0\nor (b)  W1(\u00b51, \u00b52) > m2 \u2212m1 m1 \u2192 0 m2 \u2192\u221e\nWe select solution (b) for our objective since minimizing m1 leads naturally to auto-encoding the real images. Given the discriminator and generator parameters \u03b8D and \u03b8G, each updated by minimizing the losses LD and LG, we express the problem as the GAN objective, where zD and zG are samples from z:\n{ LD = L(x; \u03b8D)\u2212 L(G(zD; \u03b8G); \u03b8D) for \u03b8D LG = \u2212LD for \u03b8G\n(2)\nNote that in the following we use an abbreviated notation: G(\u00b7) = G(\u00b7, \u03b8G) and L(\u00b7) = L(\u00b7; \u03b8D). This equation, while similar to the one from WGAN [1], has two important differences: First we match distributions between losses, not between samples. And second, we do not explicitly require the discriminator to be K-Lipschitz since we are not using the Kantorovich and Rubinstein duality theorem [18].\nFor function approximations, in our case deep neural networks, we must also consider the representational capacities of each function G and D. This is determined both by the model implementing the function and the number of parameters. It is typically the case that G and D are not well balanced and the discriminatorD wins easily. To account for this situation we introduce an equilibrium concept."
        },
        {
            "heading": "3.3 Equilibrium",
            "text": "In practice it is crucial to maintain a balance between the generator and discriminator losses; we consider them to be at equilibrium when:\nE [L(x)] = E [L(G(z))] (3)\nIf we generate samples that cannot be distinguished by the discriminator from real ones, the distribution of their errors should be the same, including their expected error. This concept allows us to balance the effort allocated to the generator and discriminator so that neither wins over the other.\nWe can relax the equilibrium with the introduction of a new hyper-parameter \u03b3 \u2208 [0, 1] defined as\n\u03b3 = E [L(G(z))] E [L(x)]\n(4)\nIn our model, the discriminator has two competing goals: auto-encode real images and discriminate real from generated images. The \u03b3 term lets us balance these two goals. Lower values of \u03b3 lead to lower image diversity because the discriminator focuses more heavily on auto-encoding real images. We will refer to \u03b3 as the diversity ratio. There is a natural boundary for which images are sharp and have details."
        },
        {
            "heading": "3.4 Boundary Equilibrium GAN",
            "text": "The BEGAN objective is:\n LD = L(x)\u2212 kt.L(G(zD)) for \u03b8D LG = L(G(zG)) for \u03b8G kt+1 = kt + \u03bbk(\u03b3L(x)\u2212 L(G(zG))) for each training step t\nWe use Proportional Control Theory to maintain the equilibrium E [L(G(z))] = \u03b3E [L(x)]. This is implemented using a variable kt \u2208 [0, 1] to control how much emphasis is put on L(G(zD)) during gradient descent. We initialize k0 = 0. \u03bbk is the proportional gain for k; in machine learning terms, it is the learning rate for k. We used 0.001 in our experiments. In essence, this can be thought of as a form of closed-loop feedback control in which kt is adjusted at each step to maintain equation 4.\nIn early training stages, G tends to generate easy-to-reconstruct data for the auto-encoder since generated data is close to 0 and the real data distribution has not been learned accurately yet. This\nyields to L(x) > L(G(z)) early on and this is maintained for the whole training process by the equilibrium constraint.\nThe introductions of the approximation in equation 1 and \u03b3 in equation 4 have an impact on our modeling of the Wasserstein distance. Consequently, examination of samples generated from various \u03b3 values is of primary interest as will be shown in the results section.\nIn contrast to traditional GANs which require alternating training D and G, or pretraining D, our proposed method BEGAN requires neither to train stably. Adam [10] was used during training with the default hyper-parameters. \u03b8D and \u03b8G are updated independently based on their respective losses with separate Adam optimizers. We typically used a batch size of n = 16."
        },
        {
            "heading": "3.4.1 Convergence measure",
            "text": "Determining the convergence of GANs is generally a difficult task since the original formulation is defined as a zero-sum game. As a consequence, one loss goes up when the other goes down. The number of epochs or visual inspection are typically the only practical ways to get a sense of how training has progressed.\nWe derive a global measure of convergence by using the equilibrium concept: we can frame the convergence process as finding the closest reconstruction L(x) with the lowest absolute value of the instantaneous process error for the proportion control algorithm |\u03b3L(x)\u2212L(G(zG))|. This measure is formulated as the sum of these two terms:\nMglobal = L(x) + |\u03b3L(x)\u2212 L(G(zG))|\nThis measure can be used to determine when the network has reached its final state or if the model has collapsed."
        },
        {
            "heading": "3.5 Model architecture",
            "text": "The discriminatorD : RNx 7\u2192 RNx is a convolutional deep neural network architectured as an autoencoder. Nx = H \u00d7W \u00d7 C is shorthand for the dimensions of x where H,W,C are the height, width and colors. We use an auto-encoder with both a deep encoder and decoder. The intent is to be as simple as possible to avoid typical GAN tricks.\nThe structure is shown in figure 1. We used 3 \u00d7 3 convolutions with exponential linear units [4] (ELUs) applied at their outputs. Each layer is repeated a number of times (typically 2). We observed that more repetitions led to even better visual results. The convolution filters are increased linearly with each down-sampling. Down-sampling is implemented as sub-sampling with stride 2 and upsampling is done by nearest neighbor. At the boundary between the encoder and the decoder, the tensor of processed data is mapped via fully connected layers, not followed by any non-linearities,\nto and from an embedding state h \u2208 RNh where Nh is the dimension of the auto-encoder\u2019s hidden state.\nThe generator G : RNz 7\u2192 RNx uses the same architecture (though not the same weights) as the discriminator decoder. We made this choice only for simplicity. The input state is z \u2208 [\u22121, 1]Nz sampled uniformly."
        },
        {
            "heading": "3.5.1 Optional improvements",
            "text": "This simple architecture achieves high quality results and demonstrates the robustness of our technique.\nFurther, optional, refinements aid gradient propagation and produce yet sharper images. Taking inspiration from deep residual networks [8], we initialize the network using vanishing residuals: for successive same sized layers, the layer\u2019s input is combined with its output: inx+1 = carry\u00d7 inx + (1\u2212 carry)\u00d7 outx. In our experiments, we start with carry = 1 and progressively decrease it to 0 over 16000 steps (one epoch).\nWe also introduce skip connections [8, 17, 9] to help gradient propagation [3]. The first decoder tensor h0 is obtained from projecting h to an 8 \u00d7 8 \u00d7 n tensor. After each upsampling step, the output is concatenated with h0 upsampled to the same dimensions. This creates a skip connection between the hidden state and each successive upsampling layer of the decoder.\nWe did not explore other techniques typically used in GANs, such as batch normalization, dropout, transpose convolutions or exponential growth for convolution filters, though they might further improve upon these results."
        },
        {
            "heading": "4 Experiments",
            "text": ""
        },
        {
            "heading": "4.1 Setup",
            "text": "We trained our model using Adam with an initial learning rate of 0.0001, decaying by a factor of 2 when the measure of convergence stalls. Modal collapses or visual artifacts were observed sporadically with high initial learning rates, however simply reducing the learning rate was sufficient to avoid them. We trained models for varied resolutions from 32 to 256, adding or removing convolution layers to adjust for the image size, keeping a constant final down-sampled image size of 8\u00d7 8. We used Nh = Nz = 64 in most of our experiments with this dataset.\nOur biggest model for 128 \u00d7 128 images used a convolution with n = 128 filters and had a total of 17.3\u00d7 106 trainable parameters. Training time was about 2.5 days on four P100 GPUs. Smaller models of size 32\u00d7 32 could train in a few hours on a single GPU. We use a dataset of 360K celebrity face images for training in place of CelebA [12]. This dataset has a larger variety of facial poses, including rotations around the camera axis. These are more varied and potentially more difficult to model than the aligned faces from CelebA, presenting an interesting challenge. We preferred the use of faces as a visual estimator since humans excel at identifying flaws in faces."
        },
        {
            "heading": "4.2 Image diversity and quality",
            "text": "Figure 2b shows some representative samples drawn uniformly from z at resolutions of 128\u00d7 128. Higher resolution images, while maintaining coherency, tend to lose sharpness, but this may be improved upon with additional hyper-parameter explorations. To our knowledge these are the first anatomically coherent high-resolution results except for Stacked GANs [20] which has shown some promise for flowers and birds at up to 256\u00d7 256. We observe varied poses, expressions, genders, skin colors, light exposure, and facial hair. However we did not see glasses, we see few older people and there are more women than men. For comparison we also displayed some EBGAN [21] results in figure 2a. We must keep in mind that these are trained on different datasets so direct comparison is difficult.\nIn Figure 3, we compared the effect of varying \u03b3. The model appears well behaved, still maintaining a degree of image diversity across the range of values. At low values, the faces look overly uniform.\nVariety increases with \u03b3 but so do artifacts. Our observations seem to contradict those of [14] that diversity and quality were independent."
        },
        {
            "heading": "4.3 Space continuity",
            "text": "To estimate the modal coverage of our generator we take real images and find their corresponding zr embedding for the generator. This is done using Adam to find a value for zr that minimizes er = |xr \u2212 G(zr)|. Mapping to real images is not the goal of the model but it provides a way of testing its ability to generalize. By interpolating the zr embeddings between two real images, we verify that the model generalized the image contents rather than simply memorizing them.\nFigure 4c displays interpolations on zr between real images at 128 \u00d7 128 resolution; these images were not part of the training data. The first and last columns contain the real images to be represented and interpolated. The images immediately next to them are their corresponding approximations while the images in-between are the results of linear interpolation in zr. For comparison with the current state of the art for generative models, we included ALI [5] results at 64\u00d7 64 (figure 4a) and conditional PixelCNN [13] results at 32 \u00d7 32 (figure 4b) both trained on different data sets (higher resolutions were not available to us for these models). In addition figure 4d showcases interpolation between an image and its mirror.\nSample diversity, while not perfect, is convincing; the generated images look relatively close to the real ones. The interpolations show good continuity. On the first row, the hair transitions in a natural way and intermediate hairstyles are believable, showing good generalization. It is also worth noting that some features are not represented such as the cigarette in the left image. The second and last rows show simple rotations. While the rotations are smooth, we can see that profile pictures are not captured as well as camera facing ones. We assume this is due to profiles being less common in our dataset. Finally the mirror example demonstrates separation between identity and rotation. A surprisingly realistic camera-facing image is derived from a single profile image."
        },
        {
            "heading": "4.4 Convergence measure and image quality",
            "text": "The convergence measureMglobal was conjectured earlier to measure the convergence of the BEGAN model. As can be seen in figure 5 this measure correlates well with image fidelity. We can also\nsee from this plot that the model converges quickly, just as was originally reported for EBGANs. This seems to confirm the fast convergence property comes from pixel-wise losses."
        },
        {
            "heading": "4.5 Equilibrium for unbalanced networks",
            "text": "To test the robustness of the equilibrium balancing technique, we performed an experiment advantaging the discriminator over the generator, and vice versa. Figure 6 displays the results.\nBy maintaining the equilibrium the model remained stable and converged to meaningful results. The image quality suffered as expected with low dimensionality of h due to the reduced capacity of the discriminator. Surprisingly, reducing the dimensionality of z had relatively little effect on image diversity or quality.\n4.6 Numerical experiments\nTo measure quality and diversity numerically, we computed the inception score [16] on CIFAR-10 images. The inception score is a heuristic that has been used for GANs to measure single sample quality and diversity on the inception model. We train an unconditional version of our model and compare to previous unsupervised results. The goal is to generate a distribution that is representative of the original data.\nA comparison to similar works on models trained entirely unsupervised is shown in table 1. With the exception of Denoising Feature Matching [19] (DFM), our score is better than other GAN techniques that\ndirectly aim to match the data distribution. This seems to confirm experimentally that matching loss distributions of the auto-encoder is an effective indirect method of matching data distributions. DFM appears compatible with our method and combining them is a possible avenue for future work."
        },
        {
            "heading": "5 Conclusion",
            "text": "There are still many unexplored avenues. Does the discriminator have to be an auto-encoder? Having pixel-level feedback seems to greatly help convergence, however using an auto-encoder has its drawbacks: what latent space size is best for a dataset? When should noise be added to the input and how much? What impact would using other varieties of auto-encoders such Variational Auto-Encoders[11] (VAEs) have?\nMore fundamentally, we note that our objective bears a superficial resemblance to the WGAN [1] objective. Is the auto-encoder combined with the equilibrium concept fulfilling a similar bounding functionality as the K-Lipschitz constraint in the WGAN formulation?\nWe introduced BEGAN, a GAN that uses an auto-encoder as the discriminator. Using proportional control theory, we proposed a novel equilibrium method for balancing adversarial networks. We believe this method has many potential applications such as dynamically weighing regularization terms or other heterogeneous objectives. Using this equilibrium method, the network converges to diverse and visually pleasing images. This remains true at higher resolutions with trivial modifications. Training is stable, fast and robust to parameter changes. It does not require a complex alternating training procedure. Our approach provides at least partial solutions to some outstanding GAN problems such as measuring convergence, controlling distributional diversity and maintaining the equilibrium between the discriminator and the generator. While we could partially control the diversity of generator by influencing the discriminator, there is clearly still room for improvement."
        },
        {
            "heading": "Acknowledgements",
            "text": "We would like to thank Jay Han, Llion Jones and Ankur Parikh for their help with the manuscript, Jakob Uszkoreit for his constant support, Wenze Hu, Aaron Sarna and Florian Schroff for technical support. Special thanks to Grant Reaber for his in-depth feedback on Wasserstein distance computation."
        }
    ],
    "title": "BEGAN: Boundary Equilibrium Generative Adversarial Networks",
    "year": 2017
}