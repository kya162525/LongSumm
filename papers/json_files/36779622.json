{
    "abstractText": "We propose a simple neural architecture for natural language inference. Our approach uses attention to decompose the problem into subproblems that can be solved separately, thus making it trivially parallelizable. On the Stanford Natural Language Inference (SNLI) dataset, we obtain state-of-the-art results with almost an order of magnitude fewer parameters than previous work and without relying on any word-order information. Adding intra-sentence attention that takes a minimum amount of order into account yields further improvements.",
    "authors": [
        {
            "affiliations": [],
            "name": "Ankur P. Parikh"
        },
        {
            "affiliations": [],
            "name": "Oscar T\u00e4ckstr\u00f6m"
        },
        {
            "affiliations": [],
            "name": "Dipanjan Das"
        }
    ],
    "id": "SP:2cd8e8f510c89c7c18268e8ad51c061e459ad321",
    "references": [
        {
            "authors": [
                "Abadi et al.2015] Mart\u0131\u0301n Abadi",
                "Ashish Agarwal",
                "Paul Barham",
                "Eugene Brevdo",
                "Zhifeng Chen",
                "Craig Citro",
                "Greg S Corrado",
                "Andy Davis",
                "Jeffrey Dean",
                "Matthieu Devin"
            ],
            "title": "TensorFlow: Large-scale machine learning on heterogeneous systems",
            "year": 2015
        },
        {
            "authors": [
                "Andreas Vlachos",
                "Stephen Clark"
            ],
            "title": "Semantic parsing as machine translation",
            "venue": "In Proceedings of ACL",
            "year": 2013
        },
        {
            "authors": [
                "Kyunghyun Cho",
                "Yoshua Bengio"
            ],
            "title": "Neural machine translation by jointly learning to align and translate",
            "venue": "In Proceedings of ICLR",
            "year": 2015
        },
        {
            "authors": [
                "Bos",
                "Markert2005] Johan Bos",
                "Katja Markert"
            ],
            "title": "Recognising textual entailment with logical inference",
            "venue": "In Proceedings of EMNLP",
            "year": 2005
        },
        {
            "authors": [
                "Gabor Angeli",
                "Christopher Potts",
                "Christopher D. Manning"
            ],
            "title": "A large annotated corpus for learning natural language inference",
            "venue": "Proceedings of EMNLP",
            "year": 2015
        },
        {
            "authors": [
                "Jon Gauthier",
                "Abhinav Rastogi",
                "Raghav Gupta",
                "Christopher D. Manning",
                "Christopher Potts"
            ],
            "title": "A fast unified model for parsing and sentence understanding",
            "venue": "Proceedings of ACL",
            "year": 2016
        },
        {
            "authors": [
                "Chang et al.2010] Ming-Wei Chang",
                "Dan Goldwasser",
                "Dan Roth",
                "Vivek Srikumar"
            ],
            "title": "Discriminative learning over constrained latent representations",
            "venue": "In Proceedings of HLT-NAACL",
            "year": 2010
        },
        {
            "authors": [
                "Cheng et al.2016] Jianpeng Cheng",
                "Li Dong",
                "Mirella Lapata"
            ],
            "title": "Long short-term memory-networks for machine reading",
            "venue": "In Proceedings of EMNLP",
            "year": 2016
        },
        {
            "authors": [
                "Das",
                "Smith2009] Dipanjan Das",
                "Noah A. Smith"
            ],
            "title": "Paraphrase identification as probabilistic quasisynchronous recognition",
            "venue": "In Proceedings of ACLIJCNLP",
            "year": 2009
        },
        {
            "authors": [
                "Duchi et al.2011] John Duchi",
                "Elad Hazan",
                "Yoram Singer"
            ],
            "title": "Adaptive subgradient methods for online learning and stochastic optimization",
            "venue": "The Journal of Machine Learning Research,",
            "year": 2011
        },
        {
            "authors": [
                "Fader et al.2013] Anthony Fader",
                "Luke S Zettlemoyer",
                "Oren Etzioni"
            ],
            "title": "Paraphrase-driven learning for open question answering",
            "venue": "In Proceedings of ACL",
            "year": 2013
        },
        {
            "authors": [
                "Glorot et al.2011] Xavier Glorot",
                "Antoine Bordes",
                "Yoshua Bengio"
            ],
            "title": "Deep sparse rectifier neural networks",
            "venue": "In Proceedings of AISTATS",
            "year": 2011
        },
        {
            "authors": [
                "Andrew Y. Ng",
                "Christopher D. Manning"
            ],
            "title": "Robust textual inference via graph matching",
            "venue": "In Proceedings of HLTNAACL",
            "year": 2005
        },
        {
            "authors": [
                "Hickl",
                "Bensley2007] Andrew Hickl",
                "Jeremy Bensley"
            ],
            "title": "A discourse commitment-based framework",
            "year": 2007
        },
        {
            "authors": [
                "Hochreiter",
                "Schmidhuber1997] Sepp Hochreiter",
                "J\u00fcrgen Schmidhuber"
            ],
            "title": "Long short-term memory",
            "venue": "Neural computation,",
            "year": 1997
        },
        {
            "authors": [
                "Hu et al.2014] Baotian Hu",
                "Zhengdong Lu",
                "Hang Li",
                "Qingcai Chen"
            ],
            "title": "Convolutional neural network architectures for matching natural language sentences",
            "venue": "In Advances in NIPS",
            "year": 2014
        },
        {
            "authors": [
                "Philipp Koehn"
            ],
            "title": "Statistical machine translation",
            "year": 2009
        },
        {
            "authors": [
                "LeCun et al.1990] Y. LeCun",
                "B. Boser",
                "J.S. Denker",
                "D. Henderson",
                "R.E. Howard",
                "W. Hubbard",
                "L.D. Jackel"
            ],
            "title": "Handwritten digit recognition with a back-propagation network",
            "venue": "Advances in NIPS",
            "year": 1990
        },
        {
            "authors": [
                "MacCartney",
                "Manning2009] Bill MacCartney",
                "Christopher D. Manning"
            ],
            "title": "An extended model of natural logic",
            "venue": "In Proceedings of the IWCS",
            "year": 2009
        },
        {
            "authors": [
                "Trond Grenager",
                "Marie-Catherine de Marneffe",
                "Daniel Cer",
                "Christopher D Manning"
            ],
            "title": "Learning to recognize features of valid textual entailments",
            "venue": "Proceedings of HLT-NAACL",
            "year": 2006
        },
        {
            "authors": [
                "Michel Galley",
                "Christopher D Manning"
            ],
            "title": "A phrase-based alignment model for natural language inference",
            "venue": "In Proceedings of EMNLP",
            "year": 2008
        },
        {
            "authors": [
                "Marsi",
                "Krahmer2005] Erwin Marsi",
                "Emiel Krahmer"
            ],
            "title": "Classification of semantic relations by humans and machines",
            "venue": "In Proceedings of the ACL workshop on Empirical Modeling of Semantic Equivalence and Entailment",
            "year": 2005
        },
        {
            "authors": [
                "Mou et al.2015] Lili Mou",
                "Men Rui",
                "Ge Li",
                "Yan Xu",
                "Lu Zhang",
                "Rui Yan",
                "Zhi Jin"
            ],
            "title": "Natural language inference by tree-based convolution and heuristic matching",
            "venue": "In Proceedings of ACL (short papers)",
            "year": 2015
        },
        {
            "authors": [
                "Richard Socher",
                "Christopher D. Manning"
            ],
            "title": "GloVe: Global vectors for word representation",
            "venue": "In Proceedings of EMNLP",
            "year": 2014
        },
        {
            "authors": [
                "Edward Grefenstette",
                "Karl Moritz Hermann",
                "Tom\u00e1\u0161 Ko\u010disk\u1ef3",
                "Phil Blunsom"
            ],
            "title": "Reasoning about entailment with neural attention",
            "venue": "In Proceedings of ICLR",
            "year": 2016
        },
        {
            "authors": [
                "Geoffrey Hinton",
                "Alex Krizhevsky",
                "Ilya Sutskever",
                "Ruslan Salakhutdinov"
            ],
            "title": "Dropout: A simple way to prevent neural networks from overfitting",
            "venue": "The Journal of Machine Learning Research,",
            "year": 2014
        },
        {
            "authors": [],
            "title": "A brief history of natural logic",
            "venue": "College Publications",
            "year": 2008
        },
        {
            "authors": [
                "Vendrov et al.2015] Ivan Vendrov",
                "Ryan Kiros",
                "Sanja Fidler",
                "Raquel Urtasun"
            ],
            "title": "Order-embeddings of images and language",
            "venue": "In Proceedings of ICLR",
            "year": 2015
        },
        {
            "authors": [
                "Wang",
                "Jiang2016] Shuohang Wang",
                "Jing Jiang"
            ],
            "title": "Learning natural language inference with LSTM",
            "venue": "In Proceedings of NAACL",
            "year": 2016
        },
        {
            "authors": [
                "Yin et al.2016] Wenpeng Yin",
                "Hinrich Sch\u00fctze",
                "Bing Xiang",
                "Bowen Zhou"
            ],
            "title": "ABCNN: Attentionbased convolutional neural network for modeling sentence pairs",
            "venue": "In Transactions of the Association of Computational Linguistics",
            "year": 2016
        }
    ],
    "sections": [
        {
            "heading": "1 Introduction",
            "text": "Natural language inference (NLI) refers to the problem of determining entailment and contradiction relationships between a premise and a hypothesis. NLI is a central problem in language understanding (Katz, 1972; Bos and Markert, 2005; van Benthem, 2008; MacCartney and Manning, 2009) and recently the large SNLI corpus of 570K sentence pairs was created for this task (Bowman et al., 2015). We present a new model for NLI and leverage this corpus for comparison with prior work.\nA large body of work based on neural networks for text similarity tasks including NLI has been published in recent years (Hu et al., 2014; Rockta\u0308schel et al., 2016; Wang and Jiang, 2016; Yin et al., 2016, inter alia). The dominating trend in these models is to build complex, deep text representation models, for example, with convolutional networks (LeCun et al., 1990, CNNs henceforth) or long short-term memory networks (Hochreiter and Schmidhuber, 1997,\nLSTMs henceforth) with the goal of deeper sentence comprehension. While these approaches have yielded impressive results, they are often computationally very expensive, and result in models having millions of parameters (excluding embeddings).\nHere, we take a different approach, arguing that for natural language inference it can often suffice to simply align bits of local text substructure and then aggregate this information. For example, consider the following sentences:\n\u2022 Bob is in his room, but because of the thunder and lightning outside, he cannot sleep.\n\u2022 Bob is awake. \u2022 It is sunny outside.\nThe first sentence is complex in structure and it is challenging to construct a compact representation that expresses its entire meaning. However, it is fairly easy to conclude that the second sentence follows from the first one, by simply aligning Bob with Bob and cannot sleep with awake and recognizing that these are synonyms. Similarly, one can conclude that It is sunny outside contradicts the first sentence, by aligning thunder and lightning with sunny and recognizing that these are most likely incompatible.\nWe leverage this intuition to build a simpler and more lightweight approach to NLI within a neural framework; with considerably fewer parameters, our model outperforms more complex existing neural architectures. In contrast to existing approaches, our approach only relies on alignment and is fully computationally decomposable with respect to the input text. An overview of our approach is given in Figure 1. Given two sentences, where each word is repre-\nar X\niv :1\n60 6.\n01 93\n3v 2\n[ cs\n.C L\n] 2\n5 Se\np 20\nsented by an embedding vector, we first create a soft alignment matrix using neural attention (Bahdanau et al., 2015). We then use the (soft) alignment to decompose the task into subproblems that are solved separately. Finally, the results of these subproblems are merged to produce the final classification. In addition, we optionally apply intra-sentence attention (Cheng et al., 2016) to endow the model with a richer encoding of substructures prior to the alignment step.\nAsymptotically our approach does the same total work as a vanilla LSTM encoder, while being trivially parallelizable across sentence length, which can allow for considerable speedups in low-latency settings. Empirical results on the SNLI corpus show that our approach achieves state-of-the-art results, while using almost an order of magnitude fewer parameters compared to complex LSTM-based approaches."
        },
        {
            "heading": "2 Related Work",
            "text": "Our method is motivated by the central role played by alignment in machine translation (Koehn, 2009) and previous approaches to sentence similarity modeling (Haghighi et al., 2005; Das and Smith, 2009; Chang et al., 2010; Fader et al., 2013), natural language inference (Marsi and Krahmer, 2005; MacCartney et al., 2006; Hickl and Bensley, 2007; MacCartney et al., 2008), and semantic parsing (Andreas et al., 2013). The neural counterpart to alignment, attention (Bahdanau et al., 2015), which is a key part of our approach, was originally proposed and has been predominantly used in conjunction with LSTMs (Rockta\u0308schel et al., 2016; Wang and Jiang, 2016) and to a lesser extent with CNNs (Yin et al., 2016). In contrast, our use of attention is purely based on word embeddings and our method essentially consists of feed-forward networks that operate largely independently of word order."
        },
        {
            "heading": "3 Approach",
            "text": "Let a = (a1, . . . , a`a) and b = (b1, . . . , b`b) be the two input sentences of length `a and `b, respectively. We assume that each ai, bj \u2208 Rd is a word embedding vector of dimension d and that each sentence is prepended with a \u201cNULL\u201d token. Our training data comes in the form of labeled pairs {a(n),b(n),y(n)}Nn=1, where y(n) = (y\n(n) 1 , . . . , y (n) C ) is an indicator vector encoding the label and C is the number of output classes. At test\nH ( )+ +\u2026+=y\u0302\nin the\npark alice plays\nso m\neo ne\npl ay\nin g\nm us\nic\nou ts\nid e\nflute a solo G ( , )\nG ( , )\npark outside\nalice someone\nflute+ solo music\n\u2026\nG ( , )=\n=\n= flute music F ( , )\nFigure 1: Pictoral overview of the approach, showing the Attend (left), Compare (center) and Aggregate (right) steps.\ntime, we receive a pair of sentences (a,b) and our goal is to predict the correct label y.\nInput representation. Let a\u0304 = (a\u03041, . . . , a\u0304`a) and b\u0304 = (b\u03041, . . . , b\u0304`b) denote the input representation of each fragment that is fed to subsequent steps of the algorithm. The vanilla version of our model simply defines a\u0304 := a and b\u0304 := b. With this input representation, our model does not make use of word order. However, we discuss an extension using intrasentence attention in Section 3.4 that uses a minimal amount of sequence information.\nThe core model consists of the following three components (see Figure 1), which are trained jointly:\nAttend. First, soft-align the elements of a\u0304 and b\u0304 using a variant of neural attention (Bahdanau et al., 2015) and decompose the problem into the comparison of aligned subphrases.\nCompare. Second, separately compare each aligned subphrase to produce a set of vectors {v1,i}`ai=1 for a and {v2,j} `b j=1 for b. Each v1,i is a nonlinear combination of ai and its (softly) aligned subphrase in b (and analogously for v2,j).\nAggregate. Finally, aggregate the sets {v1,i}`ai=1 and {v2,j}`bj=1 from the previous step and use the result to predict the label y\u0302."
        },
        {
            "heading": "3.1 Attend",
            "text": "We first obtain unnormalized attention weights eij , computed by a function F \u2032, which decomposes as:\neij := F \u2032(a\u0304i, b\u0304j) := F (a\u0304i) TF (b\u0304j) . (1)\nThis decomposition avoids the quadratic complexity that would be associated with separately applying F \u2032 `a \u00d7 `b times. Instead, only `a + `b applications of F are needed. We take F to be a feed-forward neural network with ReLU activations (Glorot et al., 2011).\nThese attention weights are normalized as follows:\n\u03b2i := `b\u2211 j=1 exp(eij)\u2211`b k=1 exp(eik) b\u0304j ,\n\u03b1j := `a\u2211 i=1 exp(eij)\u2211`a k=1 exp(ekj) a\u0304i . (2)\nHere \u03b2i is the subphrase in b\u0304 that is (softly) aligned to a\u0304i and vice versa for \u03b1j ."
        },
        {
            "heading": "3.2 Compare",
            "text": "Next, we separately compare the aligned phrases {(a\u0304i, \u03b2i)}`ai=1 and {(b\u0304j , \u03b1j)} `b j=1 using a function G, which in this work is again a feed-forward network:\nv1,i := G([a\u0304i, \u03b2i]) \u2200i \u2208 [1, . . . , `a] , v2,j := G([b\u0304j , \u03b1j ]) \u2200j \u2208 [1, . . . , `b] . (3)\nwhere the brackets [\u00b7, \u00b7] denote concatenation. Note that since there are only a linear number of terms in this case, we do not need to apply a decomposition as was done in the previous step. Thus G can jointly take into account both a\u0304i, and \u03b2i."
        },
        {
            "heading": "3.3 Aggregate",
            "text": "We now have two sets of comparison vectors {v1,i}`ai=1 and {v2,j} `b j=1. We first aggregate over each set by summation:\nv1 = `a\u2211 i=1 v1,i , v2 = `b\u2211 j=1 v2,j . (4)\nand feed the result through a final classifier H , that is a feed forward network followed by a linear layer:\ny\u0302 = H([v1,v2]) , (5)\nwhere y\u0302 \u2208 RC represents the predicted (unnormalized) scores for each class and consequently the predicted class is given by y\u0302 = argmaxiy\u0302i.\nFor training, we use multi-class cross-entropy loss with dropout regularization (Srivastava et al., 2014):\nL(\u03b8F , \u03b8G, \u03b8H) = 1\nN N\u2211 n=1 C\u2211 c=1 y(n)c log exp(y\u0302c)\u2211C c\u2032=1 exp(y\u0302c\u2032) .\nHere \u03b8F , \u03b8G, \u03b8H denote the learnable parameters of the functions F, G and H, respectively."
        },
        {
            "heading": "3.4 Intra-Sentence Attention (Optional)",
            "text": "In the above model, the input representations are simple word embeddings. However, we can augment this input representation with intra-sentence attention to encode compositional relationships between words within each sentence, as proposed by Cheng et al. (2016). Similar to Eqs. 1 and 2, we define\nfij := Fintra(ai) TFintra(aj) , (6)\nwhere Fintra is a feed-forward network. We then create the self-aligned phrases\na\u2032i := `a\u2211 j=1 exp(fij + di\u2212j)\u2211`a k=1 exp(fik + di\u2212k) aj . (7)\nThe distance-sensitive bias terms di\u2212j \u2208 R provides the model with a minimal amount of sequence information, while remaining parallelizable. These terms are bucketed such that all distances greater than 10 words share the same bias. The input representation for subsequent steps is then defined as a\u0304i := [ai, a\u2032i] and analogously b\u0304i := [bi, b\u2032i]."
        },
        {
            "heading": "4 Computational Complexity",
            "text": "We now discuss the asymptotic complexity of our approach and how it offers a higher degree of parallelism than LSTM-based approaches. Recall that d denotes embedding dimension and ` means sentence length. For simplicity we assume that all hidden dimensions are d and that the complexity of matrix(d\u00d7 d)-vector(d\u00d7 1) multiplication is O(d2).\nA key assumption of our analysis is that ` < d, which we believe is reasonable and is true of the SNLI dataset (Bowman et al., 2015) where ` < 80, whereas recent LSTM-based approaches have used d \u2265 300. This assumption allows us to bound the complexity of computing the `2 attention weights.\nComplexity of LSTMs. The complexity of an LSTM cell is O(d2), resulting in a complexity of O(`d2) to encode the sentence. Adding attention as in Rockta\u0308schel et al. (2016) increases this complexity to O(`d2 + `2d).\nComplexity of our Approach. Application of a feed-forward network requires O(d2) steps. Thus, the Compare and Aggregate steps have complexity O(`d2) and O(d2) respectively. For the Attend step,\nF is evaluated O(`) times, giving a complexity of O(`d2). Each attention weight eij requires one dot product, resulting in a complexity of O(`2d).\nThus the total complexity of the model is O(`d2 + `2d), which is equal to that of an LSTM with attention. However, note that with the assumption that ` < d, this becomes O(`d2) which is the same complexity as a regular LSTM. Moreover, unlike the LSTM, our approach has the advantage of being parallelizable over `, which can be useful at test time."
        },
        {
            "heading": "5 Experiments",
            "text": "We evaluate our approach on the Stanford Natural Language Inference (SNLI) dataset (Bowman et al., 2015). Given a sentences pair (a,b), the task is to predict whether b is entailed by a, b contradicts a, or whether their relationship is neutral."
        },
        {
            "heading": "5.1 Implementation Details",
            "text": "The method was implemented in TensorFlow (Abadi et al., 2015).\nData preprocessing: Following Bowman et al. (2015), we remove examples labeled \u201c\u2013\u201d (no gold label) from the dataset, which leaves 549,367 pairs\nfor training, 9,842 for development, and 9,824 for testing. We use the tokenized sentences from the non-binary parse provided in the dataset and prepend each sentence with a \u201cNULL\u201d token. During training, each sentence was padded up to the maximum length of the batch for efficient training (the padding was explicitly masked out so as not to affect the objective/gradients). For efficient batching in TensorFlow, we semi-sorted the training data to first contain examples where both sentences had length less than 20, followed by those with length less than 50, and then the rest. This ensured that most training batches contained examples of similar length.\nEmbeddings: We use 300 dimensional GloVe embeddings (Pennington et al., 2014) to represent words. Each embedding vector was normalized to have `2 norm of 1 and projected down to 200 dimensions, a number determined via hyperparameter tuning. Out-of-vocabulary (OOV) words are hashed to one of 100 random embeddings each initialized to mean 0 and standard deviation 1. All embeddings remain fixed during training, but the projection matrix is trained. All other parameter weights (hidden layers etc.) were initialized from random Gaussians with mean 0 and standard deviation 0.01.\nEach hyperparameter setting was run on a single machine with 10 asynchronous gradient-update threads, using Adagrad (Duchi et al., 2011) for optimization with the default initial accumulator value of 0.1. Dropout regularization (Srivastava et al., 2014) was used for all ReLU layers, but not for the final linear layer. We additionally tuned the following hyperparameters and present their chosen values in\nparentheses: network size (2-layers, each with 200 neurons), batch size (4), 1 dropout ratio (0.2) and learning rate (0.05\u2013vanilla, 0.025\u2013intra-attention). All settings were run for 50 million steps (each step indicates one batch) but model parameters were saved frequently as training progressed and we chose the model that did best on the development set."
        },
        {
            "heading": "5.2 Results",
            "text": "Results in terms of 3-class accuracy are shown in Table 1. Our vanilla approach achieves state-of-theart results with almost an order of magnitude fewer parameters than the LSTMN of Cheng et al. (2016). Adding intra-sentence attention gives a considerable improvement of 0.5 percentage points over the existing state of the art. Table 2 gives a breakdown of accuracy on the development set showing that most of our gains stem from neutral, while most losses come from contradiction pairs.\nTable 3 shows some wins and losses. Examples AC are cases where both variants of our approach are correct while both SPINN-PI (Bowman et al., 2016) and the mLSTM (Wang and Jiang, 2016) are incorrect. In the first two cases, both sentences contain phrases that are either identical or highly lexically related (e.g. \u201cTwo kids\u201d and \u201cocean / beach\u201d) and our approach correctly favors neutral in these cases. In Example C, it is possible that relying on word-order may confuse SPINN-PI and the mLSTM due to how \u201cfountain\u201d is the object of a preposition in the first sentence but the subject of the second.\nThe second set of examples (D-F) are cases where\n116 or 32 also work well and are a bit more stable.\nour vanilla approach is incorrect but mLSTM and SPINN-PI are correct. Example F requires sequential information and neither variant of our approach can predict the correct class. Examples D-E are interesting however, since they don\u2019t require word order information, yet intra-attention seems to help. We suspect this may be because the word embeddings are not fine-grained enough for the algorithm to conclude that \u201cplay/watch\u201d is a contradiction, but intra-attention, by adding an extra layer of composition/nonlinearity to incorporate context, compensates for this.\nFinally, Examples G-I are cases that all methods get wrong. The first is actually representative of many examples in this category where there is one critical word that separates the two sentences (close vs open in this case) and goes unnoticed by the algorithms. Examples H requires inference about numbers and Example I needs sequence information."
        },
        {
            "heading": "6 Conclusion",
            "text": "We presented a simple attention-based approach to natural language inference that is trivially parallelizable. The approach outperforms considerably more complex neural methods aiming for text understanding. Our results suggest that, at least for this task, pairwise comparisons are relatively more important than global sentence-level representations."
        },
        {
            "heading": "Acknowledgements",
            "text": "We thank Slav Petrov, Tom Kwiatkowski, Yoon Kim, Erick Fonseca, Mark Neumann for useful discussion and Sam Bowman and Shuohang Wang for providing us their model outputs for error analysis."
        }
    ],
    "title": "A Decomposable Attention Model for Natural Language Inference",
    "year": 2016
}