{
    "abstractText": "The problem this paper is concerned with is that of unsupervised learning. Mainly, what does it mean to learn a probability distribution? The classical answer to this is to learn a probability density. This is often done by defining a parametric family of densities (P\u03b8)\u03b8\u2208Rd and finding the one that maximized the likelihood on our data: if we have real data examples {x}i=1, we would solve the problem",
    "authors": [
        {
            "affiliations": [],
            "name": "Martin Arjovsky"
        },
        {
            "affiliations": [],
            "name": "Soumith Chintala"
        },
        {
            "affiliations": [],
            "name": "L\u00e9on Bottou"
        }
    ],
    "id": "SP:2f85b7376769473d2bed56f855f115e23d727094",
    "references": [
        {
            "authors": [
                "Martin Arjovsky",
                "L\u00e9on Bottou"
            ],
            "title": "Towards principled methods for training generative adversarial networks",
            "venue": "In International Conference on Learning Representations,",
            "year": 2017
        },
        {
            "authors": [
                "Gintare Karolina Dziugaite",
                "Daniel M. Roy",
                "Zoubin Ghahramani"
            ],
            "title": "Training generative neural networks via maximum mean discrepancy optimization",
            "venue": "CoRR, abs/1505.03906,",
            "year": 2015
        },
        {
            "authors": [
                "Aude Genevay",
                "Marco Cuturi",
                "Gabriel Peyr\u00e9",
                "Francis Bach"
            ],
            "title": "Stochastic optimization for large-scale optimal transport",
            "venue": "Advances in Neural Information Processing Systems",
            "year": 2016
        },
        {
            "authors": [
                "Ian J. Goodfellow",
                "Jean Pouget-Abadie",
                "Mehdi Mirza",
                "Bing Xu",
                "David Warde- Farley",
                "Sherjil Ozair",
                "Aaron Courville",
                "Yoshua Bengio"
            ],
            "title": "Generative adversarial nets",
            "venue": "In Advances in Neural Information Processing Systems",
            "year": 2014
        },
        {
            "authors": [
                "Arthur Gretton",
                "Karsten M. Borgwardt",
                "Malte J. Rasch",
                "Bernhard Sch\u00f6lkopf",
                "Alexander Smola"
            ],
            "title": "A kernel two-sample test",
            "venue": "J. Mach. Learn. Res.,",
            "year": 2012
        },
        {
            "authors": [
                "Ferenc Huszar"
            ],
            "title": "How (not) to train your generative model: Scheduled sampling, likelihood",
            "venue": "adversary? CoRR,",
            "year": 2015
        },
        {
            "authors": [
                "Shizuo Kakutani"
            ],
            "title": "Concrete representation of abstract (m)-spaces (a characterization of the space of continuous functions)",
            "venue": "Annals of Mathematics,",
            "year": 1941
        },
        {
            "authors": [
                "Diederik P. Kingma",
                "Jimmy Ba"
            ],
            "title": "Adam: A method for stochastic optimization",
            "venue": "CoRR, abs/1412.6980,",
            "year": 2014
        },
        {
            "authors": [
                "Diederik P. Kingma",
                "Max Welling"
            ],
            "title": "Auto-encoding variational bayes",
            "venue": "CoRR, abs/1312.6114,",
            "year": 2013
        },
        {
            "authors": [
                "Yujia Li",
                "Kevin Swersky",
                "Rich Zemel"
            ],
            "title": "Generative moment matching networks",
            "venue": "In Proceedings of the 32nd International Conference on Machine Learning",
            "year": 2015
        },
        {
            "authors": [
                "Paul Milgrom",
                "Ilya Segal"
            ],
            "title": "Envelope theorems for arbitrary choice",
            "venue": "sets. Econometrica,",
            "year": 2002
        },
        {
            "authors": [
                "Volodymyr Mnih",
                "Adri\u00e0 Puigdom\u00e8nech Badia",
                "Mehdi Mirza",
                "Alex Graves",
                "Timothy P. Lillicrap",
                "Tim Harley",
                "David Silver",
                "Koray Kavukcuoglu"
            ],
            "title": "Asynchronous methods for deep reinforcement learning",
            "venue": "In Proceedings of the 33nd International Conference on Machine Learning,",
            "year": 2016
        },
        {
            "authors": [
                "Gr\u00e9goire Montavon",
                "Klaus-Robert M\u00fcller",
                "Marco Cuturi"
            ],
            "title": "Wasserstein training of restricted boltzmann machines",
            "venue": "Advances in Neural Information Processing Systems",
            "year": 2016
        },
        {
            "authors": [
                "Alfred M\u00fcller"
            ],
            "title": "Integral probability metrics and their generating classes of functions",
            "venue": "Advances in Applied Probability,",
            "year": 1997
        },
        {
            "authors": [
                "Radford M. Neal"
            ],
            "title": "Annealed importance sampling",
            "venue": "Statistics and Computing,",
            "year": 2001
        },
        {
            "authors": [
                "Sebastian Nowozin",
                "Botond Cseke",
                "Ryota Tomioka"
            ],
            "title": "f-gan: Training generative neural samplers using variational divergence minimization",
            "year": 2016
        },
        {
            "authors": [
                "Alec Radford",
                "Luke Metz",
                "Soumith Chintala"
            ],
            "title": "Unsupervised representation learning with deep convolutional generative adversarial networks",
            "venue": "CoRR, abs/1511.06434,",
            "year": 2015
        },
        {
            "authors": [
                "Aaditya Ramdas",
                "Sashank J. Reddi",
                "Barnabas Poczos",
                "Aarti Singh",
                "Larry Wasserman"
            ],
            "title": "On the high-dimensional power of linear-time kernel two-sample testing under mean-difference",
            "venue": "alternatives. Corr,",
            "year": 2014
        },
        {
            "authors": [
                "Dougal J Sutherland",
                "Hsiao-Yu Tung",
                "Heiko Strathmann",
                "Soumyajit De",
                "Aaditya Ramdas",
                "Alex Smola",
                "Arthur Gretton"
            ],
            "title": "Generative models and model criticism via optimized maximum mean discrepancy",
            "venue": "In International Conference on Learning Representations,",
            "year": 2017
        },
        {
            "authors": [
                "T. Tieleman",
                "G. Hinton"
            ],
            "title": "Lecture 6.5\u2014RmsProp: Divide the gradient by a running average of its recent magnitude",
            "venue": "COURSERA: Neural Networks for Machine Learning,",
            "year": 2012
        },
        {
            "authors": [
                "C\u00e9dric Villani"
            ],
            "title": "Optimal Transport: Old and New",
            "venue": "Grundlehren der mathematischen Wissenschaften. Springer, Berlin,",
            "year": 2009
        },
        {
            "authors": [
                "Yuhuai Wu",
                "Yuri Burda",
                "Ruslan Salakhutdinov",
                "Roger B. Grosse"
            ],
            "title": "On the quantitative analysis of decoder-based generative models",
            "year": 2016
        },
        {
            "authors": [
                "Fisher Yu",
                "Yinda Zhang",
                "Shuran Song",
                "Ari Seff",
                "Jianxiong Xiao"
            ],
            "title": "LSUN: Construction of a large-scale image dataset using deep learning with humans",
            "venue": "in the loop. Corr,",
            "year": 2015
        }
    ],
    "sections": [
        {
            "text": "Wasserstein GAN\nMartin Arjovsky1, Soumith Chintala2, and Le\u0301on Bottou1,2\n1Courant Institute of Mathematical Sciences 2Facebook AI Research"
        },
        {
            "heading": "1 Introduction",
            "text": "The problem this paper is concerned with is that of unsupervised learning. Mainly, what does it mean to learn a probability distribution? The classical answer to this is to learn a probability density. This is often done by defining a parametric family of densities (P\u03b8)\u03b8\u2208Rd and finding the one that maximized the likelihood on our data: if we have real data examples {x(i)}mi=1, we would solve the problem\nmax \u03b8\u2208Rd\n1\nm m\u2211 i=1 logP\u03b8(x (i))\nIf the real data distribution Pr admits a density and P\u03b8 is the distribution of the parametrized density P\u03b8, then, asymptotically, this amounts to minimizing the Kullback-Leibler divergence KL(Pr\u2016P\u03b8).\nFor this to make sense, we need the model density P\u03b8 to exist. This is not the case in the rather common situation where we are dealing with distributions supported by low dimensional manifolds. It is then unlikely that the model manifold and the true distribution\u2019s support have a non-negligible intersection (see [1]), and this means that the KL distance is not defined (or simply infinite).\nThe typical remedy is to add a noise term to the model distribution. This is why virtually all generative models described in the classical machine learning literature include a noise component. In the simplest case, one assumes a Gaussian noise with relatively high bandwidth in order to cover all the examples. It is well known, for instance, that in the case of image generation models, this noise degrades the quality of the samples and makes them blurry. For example, we can see in the recent paper [23] that the optimal standard deviation of the noise added to the model when maximizing likelihood is around 0.1 to each pixel in a generated image, when the pixels were already normalized to be in the range [0, 1]. This is a very high amount of noise, so much that when papers report the samples of their models, they don\u2019t add the noise term on which they report likelihood numbers. In other words, the added noise term is clearly incorrect for the problem, but is needed to make the maximum likelihood approach work.\nar X\niv :1\n70 1.\n07 87\n5v 3\n[ st\nat .M\nL ]\n6 D\nec 2\n01 7\nRather than estimating the density of Pr which may not exist, we can define a random variable Z with a fixed distribution p(z) and pass it through a parametric function g\u03b8 : Z \u2192 X (typically a neural network of some kind) that directly generates samples following a certain distribution P\u03b8. By varying \u03b8, we can change this distribution and make it close to the real data distribution Pr. This is useful in two ways. First of all, unlike densities, this approach can represent distributions confined to a low dimensional manifold. Second, the ability to easily generate samples is often more useful than knowing the numerical value of the density (for example in image superresolution or semantic segmentation when considering the conditional distribution of the output image given the input image). In general, it is computationally difficult to generate samples given an arbitrary high dimensional density [16].\nVariational Auto-Encoders (VAEs) [9] and Generative Adversarial Networks (GANs) [4] are well known examples of this approach. Because VAEs focus on the approximate likelihood of the examples, they share the limitation of the standard models and need to fiddle with additional noise terms. GANs offer much more flexibility in the definition of the objective function, including Jensen-Shannon [4], and all f -divergences [17] as well as some exotic combinations [6]. On the other hand, training GANs is well known for being delicate and unstable, for reasons theoretically investigated in [1].\nIn this paper, we direct our attention on the various ways to measure how close the model distribution and the real distribution are, or equivalently, on the various ways to define a distance or divergence \u03c1(P\u03b8,Pr). The most fundamental difference between such distances is their impact on the convergence of sequences of probability distributions. A sequence of distributions (Pt)t\u2208N converges if and only if there is a distribution P\u221e such that \u03c1(Pt,P\u221e) tends to zero, something that depends on how exactly the distance \u03c1 is defined. Informally, a distance \u03c1 induces a weaker topology when it makes it easier for a sequence of distribution to converge.1 Section 2 clarifies how popular probability distances differ in that respect. In order to optimize the parameter \u03b8, it is of course desirable to define our model distribution P\u03b8 in a manner that makes the mapping \u03b8 7\u2192 P\u03b8 continuous. Continuity means that when a sequence of parameters \u03b8t converges to \u03b8, the distributions P\u03b8t also converge to P\u03b8. However, it is essential to remember that the notion of the convergence of the distributions P\u03b8t depends on the way we compute the distance between distributions. The weaker this distance, the easier it is to define a continuous mapping from \u03b8-space to P\u03b8-space, since it\u2019s easier for the distributions to converge. The main reason we care about the mapping \u03b8 7\u2192 P\u03b8 to be continuous is as follows. If \u03c1 is our notion of distance between two distributions, we would like to have a loss function \u03b8 7\u2192 \u03c1(P\u03b8,Pr) that is continuous, and this is equivalent to having the mapping \u03b8 7\u2192 P\u03b8 be continuous when using the distance between distributions \u03c1.\n1More exactly, the topology induced by \u03c1 is weaker than that induced by \u03c1\u2032 when the set of convergent sequences under \u03c1 is a superset of that under \u03c1\u2032.\nThe contributions of this paper are:\n\u2022 In Section 2, we provide a comprehensive theoretical analysis of how the Earth Mover (EM) distance behaves in comparison to popular probability distances and divergences used in the context of learning distributions.\n\u2022 In Section 3, we define a form of GAN called Wasserstein-GAN that minimizes a reasonable and efficient approximation of the EM distance, and we theoretically show that the corresponding optimization problem is sound.\n\u2022 In Section 4, we empirically show that WGANs cure the main training problems of GANs. In particular, training WGANs does not require maintaining a careful balance in training of the discriminator and the generator, and does not require a careful design of the network architecture either. The mode dropping phenomenon that is typical in GANs is also drastically reduced. One of the most compelling practical benefits of WGANs is the ability to continuously estimate the EM distance by training the discriminator to optimality. Plotting these learning curves is not only useful for debugging and hyperparameter searches, but also correlate remarkably well with the observed sample quality."
        },
        {
            "heading": "2 Different Distances",
            "text": "We now introduce our notation. Let X be a compact metric set (such as the space of images [0, 1]d) and let \u03a3 denote the set of all the Borel subsets of X . Let Prob(X ) denote the space of probability measures defined on X . We can now define elementary distances and divergences between two distributions Pr,Pg \u2208 Prob(X ):\n\u2022 The Total Variation (TV) distance\n\u03b4(Pr,Pg) = sup A\u2208\u03a3 |Pr(A)\u2212 Pg(A)| .\n\u2022 The Kullback-Leibler (KL) divergence\nKL(Pr\u2016Pg) = \u222b log ( Pr(x)\nPg(x)\n) Pr(x)d\u00b5(x) ,\nwhere both Pr and Pg are assumed to be absolutely continuous, and therefore admit densities, with respect to a same measure \u00b5 defined on X .2 The KL divergence is famously assymetric and possibly infinite when there are points such that Pg(x) = 0 and Pr(x) > 0.\n2Recall that a probability distribution Pr \u2208 Prob(X ) admits a density pr(x) with respect to \u00b5, that is, \u2200A \u2208 \u03a3, Pr(A) = \u222b A Pr(x)d\u00b5(x), if and only it is absolutely continuous with respect to \u00b5, that is, \u2200A \u2208 \u03a3, \u00b5(A) = 0 \u21d2 Pr(A) = 0 .\n\u2022 The Jensen-Shannon (JS) divergence\nJS(Pr,Pg) = KL(Pr\u2016Pm) +KL(Pg\u2016Pm) ,\nwhere Pm is the mixture (Pr + Pg)/2. This divergence is symmetrical and always defined because we can choose \u00b5 = Pm.\n\u2022 The Earth-Mover (EM) distance or Wasserstein-1\nW (Pr,Pg) = inf \u03b3\u2208\u03a0(Pr,Pg)\nE(x,y)\u223c\u03b3 [ \u2016x\u2212 y\u2016 ] , (1)\nwhere \u03a0(Pr,Pg) denotes the set of all joint distributions \u03b3(x, y) whose marginals are respectively Pr and Pg. Intuitively, \u03b3(x, y) indicates how much \u201cmass\u201d must be transported from x to y in order to transform the distributions Pr into the distribution Pg. The EM distance then is the \u201ccost\u201d of the optimal transport plan.\nThe following example illustrates how apparently simple sequences of probability distributions converge under the EM distance but do not converge under the other distances and divergences defined above.\nExample 1 (Learning parallel lines). Let Z \u223c U [0, 1] the uniform distribution on the unit interval. Let P0 be the distribution of (0, Z) \u2208 R2 (a 0 on the x-axis and the random variable Z on the y-axis), uniform on a straight vertical line passing through the origin. Now let g\u03b8(z) = (\u03b8, z) with \u03b8 a single real parameter. It is easy to see that in this case,\n\u2022 W (P0,P\u03b8) = |\u03b8|,\n\u2022 JS(P0,P\u03b8) = { log 2 if \u03b8 6= 0 , 0 if \u03b8 = 0 ,\n\u2022 KL(P\u03b8\u2016P0) = KL(P0\u2016P\u03b8) = { +\u221e if \u03b8 6= 0 , 0 if \u03b8 = 0 ,\n\u2022 and \u03b4(P0,P\u03b8) = { 1 if \u03b8 6= 0 , 0 if \u03b8 = 0 .\nWhen \u03b8t \u2192 0, the sequence (P\u03b8t)t\u2208N converges to P0 under the EM distance, but does not converge at all under either the JS, KL, reverse KL, or TV divergences. Figure 1 illustrates this for the case of the EM and JS distances.\nExample 1 gives us a case where we can learn a probability distribution over a low dimensional manifold by doing gradient descent on the EM distance. This cannot be done with the other distances and divergences because the resulting loss function is not even continuous. Although this simple example features distributions with disjoint supports, the same conclusion holds when the supports have a non empty\nintersection contained in a set of measure zero. This happens to be the case when two low dimensional manifolds intersect in general position [1].\nSince the Wasserstein distance is much weaker than the JS distance3, we can now ask whether W (Pr,P\u03b8) is a continuous loss function on \u03b8 under mild assumptions. This, and more, is true, as we now state and prove.\nTheorem 1. Let Pr be a fixed distribution over X . Let Z be a random variable (e.g Gaussian) over another space Z. Let g : Z \u00d7 Rd \u2192 X be a function, that will be denoted g\u03b8(z) with z the first coordinate and \u03b8 the second. Let P\u03b8 denote the distribution of g\u03b8(Z). Then,\n1. If g is continuous in \u03b8, so is W (Pr,P\u03b8).\n2. If g is locally Lipschitz and satisfies regularity assumption 1, then W (Pr,P\u03b8) is continuous everywhere, and differentiable almost everywhere.\n3. Statements 1-2 are false for the Jensen-Shannon divergence JS(Pr,P\u03b8) and all the KLs.\nProof. See Appendix C\nThe following corollary tells us that learning by minimizing the EM distance makes sense (at least in theory) with neural networks.\nCorollary 1. Let g\u03b8 be any feedforward neural network 4 parameterized by \u03b8, and p(z) a prior over z such that Ez\u223cp(z)[\u2016z\u2016] < \u221e (e.g. Gaussian, uniform, etc.). 3 The argument for why this happens, and indeed how we arrived to the idea that Wasserstein is what we should really be optimizing is displayed in Appendix A. We strongly encourage the interested reader who is not afraid of the mathematics to go through it.\n4By a feedforward neural network we mean a function composed by affine transformations and pointwise nonlinearities which are smooth Lipschitz functions (such as the sigmoid, tanh, elu, softplus, etc). Note: the statement is also true for rectifier nonlinearities but the proof is more technical (even though very similar) so we omit it.\nThen assumption 1 is satisfied and therefore W (Pr,P\u03b8) is continuous everywhere and differentiable almost everywhere.\nProof. See Appendix C\nAll this shows that EM is a much more sensible cost function for our problem than at least the Jensen-Shannon divergence. The following theorem describes the relative strength of the topologies induced by these distances and divergences, with KL the strongest, followed by JS and TV, and EM the weakest.\nTheorem 2. Let P be a distribution on a compact space X and (Pn)n\u2208N be a sequence of distributions on X . Then, considering all limits as n\u2192\u221e,\n1. The following statements are equivalent\n\u2022 \u03b4(Pn,P)\u2192 0 with \u03b4 the total variation distance. \u2022 JS(Pn,P)\u2192 0 with JS the Jensen-Shannon divergence.\n2. The following statements are equivalent\n\u2022 W (Pn,P)\u2192 0. \u2022 Pn D\u2212\u2192 P where D\u2212\u2192 represents convergence in distribution for random\nvariables.\n3. KL(Pn\u2016P)\u2192 0 or KL(P\u2016Pn)\u2192 0 imply the statements in (1).\n4. The statements in (1) imply the statements in (2).\nProof. See Appendix C\nThis highlights the fact that the KL, JS, and TV distances are not sensible cost functions when learning distributions supported by low dimensional manifolds. However the EM distance is sensible in that setup. This obviously leads us to the next section where we introduce a practical approximation of optimizing the EM distance."
        },
        {
            "heading": "3 Wasserstein GAN",
            "text": "Again, Theorem 2 points to the fact that W (Pr,P\u03b8) might have nicer properties when optimized than JS(Pr,P\u03b8). However, the infimum in (1) is highly intractable. On the other hand, the Kantorovich-Rubinstein duality [22] tells us that\nW (Pr,P\u03b8) = sup \u2016f\u2016L\u22641 Ex\u223cPr [f(x)]\u2212 Ex\u223cP\u03b8 [f(x)] (2)\nwhere the supremum is over all the 1-Lipschitz functions f : X \u2192 R. Note that if we replace \u2016f\u2016L \u2264 1 for \u2016f\u2016L \u2264 K (consider K-Lipschitz for some constant K), then we end up with K \u00b7W (Pr,Pg). Therefore, if we have a parameterized family of\nfunctions {fw}w\u2208W that are all K-Lipschitz for some K, we could consider solving the problem\nmax w\u2208W Ex\u223cPr [fw(x)]\u2212 Ez\u223cp(z)[fw(g\u03b8(z)] (3)\nand if the supremum in (2) is attained for some w \u2208 W (a pretty strong assumption akin to what\u2019s assumed when proving consistency of an estimator), this process would yield a calculation of W (Pr,P\u03b8) up to a multiplicative constant. Furthermore, we could consider differentiating W (Pr,P\u03b8) (again, up to a constant) by back-proping through equation (2) via estimating Ez\u223cp(z)[\u2207\u03b8fw(g\u03b8(z))]. While this is all intuition, we now prove that this process is principled under the optimality assumption.\nTheorem 3. Let Pr be any distribution. Let P\u03b8 be the distribution of g\u03b8(Z) with Z a random variable with density p and g\u03b8 a function satisfying assumption 1. Then, there is a solution f : X \u2192 R to the problem\nmax \u2016f\u2016L\u22641 Ex\u223cPr [f(x)]\u2212 Ex\u223cP\u03b8 [f(x)]\nand we have \u2207\u03b8W (Pr,P\u03b8) = \u2212Ez\u223cp(z)[\u2207\u03b8f(g\u03b8(z))]\nwhen both terms are well-defined.\nProof. See Appendix C\nNow comes the question of finding the function f that solves the maximization problem in equation (2). To roughly approximate this, something that we can do is train a neural network parameterized with weights w lying in a compact space W and then backprop through Ez\u223cp(z)[\u2207\u03b8fw(g\u03b8(z))], as we would do with a typical GAN. Note that the fact that W is compact implies that all the functions fw will be K-Lipschitz for some K that only depends onW and not the individual weights, therefore approximating (2) up to an irrelevant scaling factor and the capacity of the \u2018critic\u2019 fw. In order to have parameters w lie in a compact space, something simple we can do is clamp the weights to a fixed box (say W = [\u22120.01, 0.01]l) after each gradient update. The Wasserstein Generative Adversarial Network (WGAN) procedure is described in Algorithm 1.\nWeight clipping is a clearly terrible way to enforce a Lipschitz constraint. If the clipping parameter is large, then it can take a long time for any weights to reach their limit, thereby making it harder to train the critic till optimality. If the clipping is small, this can easily lead to vanishing gradients when the number of layers is big, or batch normalization is not used (such as in RNNs). We experimented with simple variants (such as projecting the weights to a sphere) with little difference, and we stuck with weight clipping due to its simplicity and already good performance. However, we do leave the topic of enforcing Lipschitz constraints in a neural network setting for further investigation, and we actively encourage interested researchers to improve on this method.\nAlgorithm 1 WGAN, our proposed algorithm. All experiments in the paper used the default values \u03b1 = 0.00005, c = 0.01, m = 64, ncritic = 5.\nRequire: : \u03b1, the learning rate. c, the clipping parameter. m, the batch size. ncritic, the number of iterations of the critic per generator iteration. Require: : w0, initial critic parameters. \u03b80, initial generator\u2019s parameters. 1: while \u03b8 has not converged do 2: for t = 0, ..., ncritic do 3: Sample {x(i)}mi=1 \u223c Pr a batch from the real data. 4: Sample {z(i)}mi=1 \u223c p(z) a batch of prior samples. 5: gw \u2190 \u2207w [ 1 m \u2211m i=1 fw(x (i))\u2212 1m \u2211m i=1 fw(g\u03b8(z (i))) ]\n6: w \u2190 w + \u03b1 \u00b7 RMSProp(w, gw) 7: w \u2190 clip(w,\u2212c, c) 8: end for 9: Sample {z(i)}mi=1 \u223c p(z) a batch of prior samples.\n10: g\u03b8 \u2190 \u2212\u2207\u03b8 1m \u2211m i=1 fw(g\u03b8(z\n(i))) 11: \u03b8 \u2190 \u03b8 \u2212 \u03b1 \u00b7 RMSProp(\u03b8, g\u03b8) 12: end while\nThe fact that the EM distance is continuous and differentiable a.e. means that we can (and should) train the critic till optimality. The argument is simple, the more we train the critic, the more reliable gradient of the Wasserstein we get, which is actually useful by the fact that Wasserstein is differentiable almost everywhere. For the JS, as the discriminator gets better the gradients get more reliable but the true gradient is 0 since the JS is locally saturated and we get vanishing gradients, as can be seen in Figure 1 of this paper and Theorem 2.4 of [1]. In Figure 2 we show a proof of concept of this, where we train a GAN discriminator and a WGAN critic till optimality. The discriminator learns very quickly to distinguish between fake and real, and as expected provides no reliable gradient information. The critic, however, can\u2019t saturate, and converges to a linear function that gives remarkably clean gradients everywhere. The fact that we constrain the weights limits the possible growth of the function to be at most linear in different parts of the space, forcing the optimal critic to have this behaviour.\nPerhaps more importantly, the fact that we can train the critic till optimality makes it impossible to collapse modes when we do. This is due to the fact that mode collapse comes from the fact that the optimal generator for a fixed discriminator is a sum of deltas on the points the discriminator assigns the highest values, as observed by [4] and highlighted in [11].\nIn the following section we display the practical benefits of our new algorithm, and we provide an in-depth comparison of its behaviour and that of traditional GANs."
        },
        {
            "heading": "4 Empirical Results",
            "text": "We run experiments on image generation using our Wasserstein-GAN algorithm and show that there are significant practical benefits to using it over the formulation used in standard GANs.\nWe claim two main benefits:\n\u2022 a meaningful loss metric that correlates with the generator\u2019s convergence and sample quality\n\u2022 improved stability of the optimization process"
        },
        {
            "heading": "4.1 Experimental Procedure",
            "text": "We run experiments on image generation. The target distribution to learn is the LSUN-Bedrooms dataset [24] \u2013 a collection of natural images of indoor bedrooms. Our baseline comparison is DCGAN [18], a GAN with a convolutional architecture trained with the standard GAN procedure using the \u2212 logD trick [4]. The generated samples are 3-channel images of 64x64 pixels in size. We use the hyper-parameters specified in Algorithm 1 for all of our experiments."
        },
        {
            "heading": "4.2 Meaningful loss metric",
            "text": "Because the WGAN algorithm attempts to train the critic f (lines 2\u20138 in Algorithm 1) relatively well before each generator update (line 10 in Algorithm 1), the loss function at this point is an estimate of the EM distance, up to constant factors related to the way we constrain the Lipschitz constant of f .\nOur first experiment illustrates how this estimate correlates well with the quality of the generated samples. Besides the convolutional DCGAN architecture, we also ran experiments where we replace the generator or both the generator and the critic by 4-layer ReLU-MLP with 512 hidden units.\nFigure 3 plots the evolution of the WGAN estimate (3) of the EM distance during WGAN training for all three architectures. The plots clearly show that these curves correlate well with the visual quality of the generated samples.\nTo our knowledge, this is the first time in GAN literature that such a property is shown, where the loss of the GAN shows properties of convergence. This property is extremely useful when doing research in adversarial networks as one does not need\nto stare at the generated samples to figure out failure modes and to gain information on which models are doing better over others.\nHowever, we do not claim that this is a new method to quantitatively evaluate generative models yet. The constant scaling factor that depends on the critic\u2019s architecture means it\u2019s hard to compare models with different critics. Even more, in practice the fact that the critic doesn\u2019t have infinite capacity makes it hard to know just how close to the EM distance our estimate really is. This being said, we have succesfully used the loss metric to validate our experiments repeatedly and without failure, and we see this as a huge improvement in training GANs which previously had no such facility.\nIn contrast, Figure 4 plots the evolution of the GAN estimate of the JS distance during GAN training. More precisely, during GAN training, the discriminator is trained to maximize\nL(D, g\u03b8) = Ex\u223cPr [logD(x)] + Ex\u223cP\u03b8 [log(1\u2212D(x))]\nwhich is is a lower bound of 2JS(Pr,P\u03b8)\u22122 log 2. In the figure, we plot the quantity 1 2L(D, g\u03b8) + log 2, which is a lower bound of the JS distance.\nThis quantity clearly correlates poorly the sample quality. Note also that the\nJS estimate usually stays constant or goes up instead of going down. In fact it often remains very close to log 2 \u2248 0.69 which is the highest value taken by the JS distance. In other words, the JS distance saturates, the discriminator has zero loss, and the generated samples are in some cases meaningful (DCGAN generator, top right plot) and in other cases collapse to a single nonsensical image [4]. This last phenomenon has been theoretically explained in [1] and highlighted in [11].\nWhen using the \u2212 logD trick [4], the discriminator loss and the generator loss are different. Figure 8 in Appendix E reports the same plots for GAN training, but using the generator loss instead of the discriminator loss. This does not change the conclusions.\nFinally, as a negative result, we report that WGAN training becomes unstable at times when one uses a momentum based optimizer such as Adam [8] (with \u03b21 > 0) on the critic, or when one uses high learning rates. Since the loss for the critic is nonstationary, momentum based methods seemed to perform worse. We identified momentum as a potential cause because, as the loss blew up and samples got worse, the cosine between the Adam step and the gradient usually turned negative. The only places where this cosine was negative was in these situations of instability. We therefore switched to RMSProp [21] which is known to perform well even on very nonstationary problems [13]."
        },
        {
            "heading": "4.3 Improved stability",
            "text": "One of the benefits of WGAN is that it allows us to train the critic till optimality. When the critic is trained to completion, it simply provides a loss to the generator that we can train as any other neural network. This tells us that we no longer need to balance generator and discriminator\u2019s capacity properly. The better the critic, the higher quality the gradients we use to train the generator.\nWe observe that WGANs are much more robust than GANs when one varies the architectural choices for the generator. We illustrate this by running experiments on three generator architectures: (1) a convolutional DCGAN generator, (2) a convolutional DCGAN generator without batch normalization and with a constant number of filters, and (3) a 4-layer ReLU-MLP with 512 hidden units. The last two are known to perform very poorly with GANs. We keep the convolutional DCGAN architecture for the WGAN critic or the GAN discriminator.\nFigures 5, 6, and 7 show samples generated for these three architectures using both the WGAN and GAN algorithms. We refer the reader to Appendix F for full sheets of generated samples. Samples were not cherry-picked.\nIn no experiment did we see evidence of mode collapse for the WGAN algorithm."
        },
        {
            "heading": "5 Related Work",
            "text": "There\u2019s been a number of works on the so called Integral Probability Metrics (IPMs) [15]. Given F a set of functions from X to R, we can define\ndF (Pr,P\u03b8) = sup f\u2208F Ex\u223cPr [f(x)]\u2212 Ex\u223cP\u03b8 [f(x)] (4)\nas an integral probability metric associated with the function class F . It is easily verified that if for every f \u2208 F we have \u2212f \u2208 F (such as all examples we\u2019ll consider), then dF is nonnegative, satisfies the triangular inequality, and is symmetric. Thus, dF is a pseudometric over Prob(X ).\nWhile IPMs might seem to share a similar formula, as we will see different classes of functions can yeald to radically different metrics.\n\u2022 By the Kantorovich-Rubinstein duality [22], we know thatW (Pr,P\u03b8) = dF (Pr,P\u03b8)\nwhen F is the set of 1-Lipschitz functions. Furthermore, if F is the set of KLipschitz functions, we get K \u00b7W (Pr,P\u03b8) = dF (Pr,P\u03b8).\n\u2022 When F is the set of all measurable functions bounded between -1 and 1 (or all continuous functions between -1 and 1), we retrieve dF (Pr,P\u03b8) = \u03b4(Pr,P\u03b8) the total variation distance [15]. This already tells us that going from 1-Lipschitz to 1-Bounded functions drastically changes the topology of the space, and the regularity of dF (Pr,P\u03b8) as a loss function (as by Theorems 1 and 2).\n\u2022 Energy-based GANs (EBGANs) [25] can be thought of as the generative approach to the total variation distance. This connection is stated and proven in depth in Appendix D. At the core of the connection is that the discriminator will play the role of f maximizing equation (4) while its only restriction is being between 0 and m for some constant m. This will yeald the same behaviour as being restricted to be between \u22121 and 1 up to a constant scaling factor irrelevant to optimization. Thus, when the discriminator approaches optimality the cost for the generator will aproximate the total variation distance \u03b4(Pr,P\u03b8). Since the total variation distance displays the same regularity as the JS, it can be seen that EBGANs will suffer from the same problems of classical GANs regarding not being able to train the discriminator till optimality and thus limiting itself to very imperfect gradients.\n\u2022 Maximum Mean Discrepancy (MMD) [5] is a specific case of integral probability metrics when F = {f \u2208 H : \u2016f\u2016\u221e \u2264 1} for H some Reproducing Kernel Hilbert Space (RKHS) associated with a given kernel k : X \u00d7 X \u2192 R. As proved on [5] we know that MMD is a proper metric and not only a pseudometric when the kernel is universal. In the specific case whereH = L2(X ,m) for m the normalized Lebesgue measure on X , we know that {f \u2208 Cb(X ), \u2016f\u2016\u221e \u2264 1} will be contained in F , and therefore dF (Pr,P\u03b8) \u2264 \u03b4(Pr,P\u03b8) so the regularity of the MMD distance as a loss function will be at least as bad as the one of the total variation. Nevertheless this is a very extreme case, since we would need a very powerful kernel to approximate the whole L2. However, even Gaussian kernels are able to detect tiny noise patterns as recently evidenced by [20]. This points to the fact that especially with low bandwidth kernels, the distance might be close to a saturating regime similar as with total variation or the JS. This obviously doesn\u2019t need to be the case for every kernel, and figuring out how and which different MMDs are closer to Wasserstein or total variation distances is an interesting topic of research.\nThe great aspect of MMD is that via the kernel trick there is no need to train a separate network to maximize equation (4) for the ball of a RKHS. However, this has the disadvantage that evaluating the MMD distance has computational cost that grows quadratically with the amount of samples used to estimate the expectations in (4). This last point makes MMD have limited scalability, and is sometimes inapplicable to many real life applications because of it. There are estimates with linear computational cost for the MMD\n[5] which in a lot of cases makes MMD very useful, but they also have worse sample complexity.\n\u2022 Generative Moment Matching Networks (GMMNs) [10, 2] are the generative counterpart of MMD. By backproping through the kernelized formula for equation (4), they directly optimize dMMD(Pr,P\u03b8) (the IPM when F is as in the previous item). As mentioned, this has the advantage of not requiring a separate network to approximately maximize equation (4). However, GMMNs have enjoyed limited applicability. Partial explanations for their unsuccess are the quadratic cost as a function of the number of samples and vanishing gradients for low-bandwidth kernels. Furthermore, it may be possible that some kernels used in practice are unsuitable for capturing very complex distances in high dimensional sample spaces such as natural images. This is properly justified by the fact that [19] shows that for the typical Gaussian MMD test to be reliable (as in it\u2019s power as a statistical test approaching 1), we need the number of samples to grow linearly with the number of dimensions. Since the MMD computational cost grows quadratically with the number of samples in the batch used to estimate equation (4), this makes the cost of having a reliable estimator grow quadratically with the number of dimensions, which makes it very inapplicable for high dimensional problems. Indeed, for something as standard as 64x64 images, we would need minibatches of size at least 4096 (without taking into account the constants in the bounds of [19] which would make this number substantially larger) and a total cost per iteration of 40962, over 5 orders of magnitude more than a GAN iteration when using the standard batch size of 64.\nThat being said, these numbers can be a bit unfair to the MMD, in the sense that we are comparing empirical sample complexity of GANs with the theoretical sample complexity of MMDs, which tends to be worse. However, in the original GMMN paper [10] they indeed used a minibatch of size 1000, much larger than the standard 32 or 64 (even when this incurred in quadratic computational cost). While estimates that have linear computational cost as a function of the number of samples exist [5], they have worse sample complexity, and to the best of our knowledge they haven\u2019t been yet applied in a generative context such as in GMMNs.\nOn another great line of research, the recent work of [14] has explored the use of Wasserstein distances in the context of learning for Restricted Boltzmann Machines for discrete spaces. The motivations at a first glance might seem quite different, since the manifold setting is restricted to continuous spaces and in finite discrete spaces the weak and strong topologies (the ones of W and JS respectively) coincide. However, in the end there is more in commmon than not about our motivations. We both want to compare distributions in a way that leverages the geometry of the underlying space, and Wasserstein allows us to do exactly that.\nFinally, the work of [3] shows new algorithms for calculating Wasserstein distances between different distributions. We believe this direction is quite important, and perhaps could lead to new ways of evaluating generative models."
        },
        {
            "heading": "6 Conclusion",
            "text": "We introduced an algorithm that we deemed WGAN, an alternative to traditional GAN training. In this new model, we showed that we can improve the stability of learning, get rid of problems like mode collapse, and provide meaningful learning curves useful for debugging and hyperparameter searches. Furthermore, we showed that the corresponding optimization problem is sound, and provided extensive theoretical work highlighting the deep connections to other distances between distributions."
        },
        {
            "heading": "Acknowledgments",
            "text": "We would like to thank Mohamed Ishmael Belghazi, Emily Denton, Ian Goodfellow, Ishaan Gulrajani, Alex Lamb, David Lopez-Paz, Eric Martin, Maxime Oquab, Aditya Ramesh, Ronan Riochet, Uri Shalit, Pablo Sprechmann, Arthur Szlam, Ruohan Wang, for helpful comments and advice."
        },
        {
            "heading": "A Why Wasserstein is indeed weak",
            "text": "We now introduce our notation. Let X \u2286 Rd be a compact set (such as [0, 1]d the space of images). We define Prob(X ) to be the space of probability measures over X . We note\nCb(X ) = {f : X \u2192 R, f is continuous and bounded}\nNote that if f \u2208 Cb(X ), we can define \u2016f\u2016\u221e = maxx\u2208X |f(x)|, since f is bounded. With this norm, the space (Cb(X ), \u2016 \u00b7 \u2016\u221e) is a normed vector space. As for any normed vector space, we can define its dual\nCb(X )\u2217 = {\u03c6 : Cb(X )\u2192 R, \u03c6 is linear and continuous}\nand give it the dual norm \u2016\u03c6\u2016 = supf\u2208Cb(X ),\u2016f\u2016\u221e\u22641 |\u03c6(f)|. With this definitions, (Cb(X )\u2217, \u2016 \u00b7 \u2016) is another normed space. Now let \u00b5 be a signed measure over X , and let us define the total variation distance\n\u2016\u00b5\u2016TV = sup A\u2286X |\u00b5(A)|\nwhere the supremum is taken all Borel sets in X . Since the total variation is a norm, then if we have Pr and P\u03b8 two probability distributions over X ,\n\u03b4(Pr,P\u03b8) := \u2016Pr \u2212 P\u03b8\u2016TV\nis a distance in Prob(X ) (called the total variation distance). We can consider\n\u03a6 : (Prob(X ), \u03b4)\u2192 (Cb(X )\u2217, \u2016 \u00b7 \u2016)\nwhere \u03a6(P)(f) := Ex\u223cP[f(x)] is a linear function over Cb(X ). The Riesz Representation theorem ([7], Theorem 10) tells us that \u03a6 is an isometric immersion. This tells us that we can effectively consider Prob(X ) with the total variation distance as a subset of Cb(X )\u2217 with the norm distance. Thus, just to accentuate it one more time, the total variation over Prob(X ) is exactly the norm distance over Cb(X )\u2217.\nLet us stop for a second and analyze what all this technicality meant. The main thing to carry is that we introduced a distance \u03b4 over probability distributions. When looked as a distance over a subset of Cb(X )\u2217, this distance gives the norm topology. The norm topology is very strong. Therefore, we can expect that not many functions \u03b8 7\u2192 P\u03b8 will be continuous when measuring distances between distributions with \u03b4. As we will show later in Theorem 2, \u03b4 gives the same topology as the Jensen-Shannon divergence, pointing to the fact that the JS is a very strong distance, and is thus more propense to give a discontinuous loss function.\nNow, all dual spaces (such as Cb(X )\u2217 and thus Prob(X )) have a strong topology (induced by the norm), and a weak* topology. As the name suggests, the weak* topology is much weaker than the strong topology. In the case of Prob(X ), the strong topology is given by the total variation distance, and the weak* topology is given by the Wasserstein distance (among others) [22]."
        },
        {
            "heading": "B Assumption definitions",
            "text": "Assumption 1. Let g : Z\u00d7Rd \u2192 X be locally Lipschitz between finite dimensional vector spaces. We will denote g\u03b8(z) it\u2019s evaluation on coordinates (z, \u03b8). We say that g satisfies assumption 1 for a certain probability distribution p over Z if there are local Lipschitz constants L(\u03b8, z) such that\nEz\u223cp[L(\u03b8, z)] < +\u221e"
        },
        {
            "heading": "C Proofs of things",
            "text": "Proof of Theorem 1. Let \u03b8 and \u03b8\u2032 be two parameter vectors in Rd. Then, we will first attempt to bound W (P\u03b8,P\u03b8\u2032), from where the theorem will come easily. The main element of the proof is the use of the coupling \u03b3, the distribution of the joint (g\u03b8(Z), g\u03b8\u2032(Z)), which clearly has \u03b3 \u2208 \u03a0(P\u03b8,P\u03b8\u2032).\nBy the definition of the Wasserstein distance, we have W (P\u03b8,P\u03b8\u2032) \u2264 \u222b X\u00d7X \u2016x\u2212 y\u2016 d\u03b3\n= E(x,y)\u223c\u03b3 [\u2016x\u2212 y\u2016] = Ez[\u2016g\u03b8(z)\u2212 g\u03b8\u2032(z)\u2016]\nIf g is continuous in \u03b8, then g\u03b8(z) \u2192\u03b8\u2192\u03b8\u2032 g\u03b8\u2032(z), so \u2016g\u03b8 \u2212 g\u03b8\u2032\u2016 \u2192 0 pointwise as functions of z. Since X is compact, the distance of any two elements in it has to be uniformly bounded by some constant M , and therefore \u2016g\u03b8(z)\u2212 g\u03b8\u2032(z)\u2016 \u2264M for all \u03b8 and z uniformly. By the bounded convergence theorem, we therefore have\nW (P\u03b8,P\u03b8\u2032) \u2264 Ez[\u2016g\u03b8(z)\u2212 g\u03b8\u2032(z)\u2016]\u2192\u03b8\u2192\u03b8\u2032 0\nFinally, we have that\n|W (Pr,P\u03b8)\u2212W (Pr,P\u03b8\u2032)| \u2264W (P\u03b8,P\u03b8\u2032)\u2192\u03b8\u2192\u03b8\u2032 0\nproving the continuity of W (Pr,P\u03b8). Now let g be locally Lipschitz. Then, for a given pair (\u03b8, z) there is a constant L(\u03b8, z) and an open set U such that (\u03b8, z) \u2208 U , such that for every (\u03b8\u2032, z\u2032) \u2208 U we have\n\u2016g\u03b8(z)\u2212 g\u2032\u03b8(z\u2032)\u2016 \u2264 L(\u03b8, z)(\u2016\u03b8 \u2212 \u03b8\u2032\u2016+ \u2016z \u2212 z\u2032\u2016) By taking expectations and z\u2032 = z we\nEz[\u2016g\u03b8(z)\u2212 g\u03b8\u2032(z)\u2016] \u2264 \u2016\u03b8 \u2212 \u03b8\u2032\u2016Ez[L(\u03b8, z)]\nwhenever (\u03b8\u2032, z) \u2208 U . Therefore, we can define U\u03b8 = {\u03b8\u2032|(\u03b8\u2032, z) \u2208 U}. It\u2019s easy to see that since U was open, U\u03b8 is as well. Furthermore, by assumption 1, we can define L(\u03b8) = Ez[L(\u03b8, z)] and achieve\n|W (Pr,P\u03b8)\u2212W (Pr,P\u03b8\u2032)| \u2264W (P\u03b8,P\u03b8\u2032) \u2264 L(\u03b8)\u2016\u03b8 \u2212 \u03b8\u2032\u2016\nfor all \u03b8\u2032 \u2208 U\u03b8, meaning that W (Pr,P\u03b8) is locally Lipschitz. This obviously implies that W (Pr,P\u03b8) is everywhere continuous, and by Radamacher\u2019s theorem we know it has to be differentiable almost everywhere.\nThe counterexample for item 3 of the Theorem is indeed Example 1.\nProof of Corollary 1. We begin with the case of smooth nonlinearities. Since g is C1 as a function of (\u03b8, z) then for any fixed (\u03b8, z) we have L(\u03b8, Z) \u2264 \u2016\u2207\u03b8,xg\u03b8(z)\u2016+ is an acceptable local Lipschitz constant for all > 0. Therefore, it suffices to prove\nEz\u223cp(z)[\u2016\u2207\u03b8,zg\u03b8(z)\u2016] < +\u221e\nIf H is the number of layers we know that \u2207zg\u03b8(z) = \u220fH k=1WkDk where Wk are the weight matrices and Dk is are the diagonal Jacobians of the nonlinearities. Let fi:j be the application of layers i to j inclusively (e.g. g\u03b8 = f1:H). Then,\n\u2207Wkg\u03b8(z) = ((\u220fH i=k+1WiDi ) Dk ) f1:k\u22121(z). We recall that if L is the Lipschitz\nconstant of the nonlinearity, then \u2016Di\u2016 \u2264 L and \u2016f1:k\u22121(z)\u2016 \u2264 \u2016z\u2016Lk\u22121 \u220fk\u22121 i=1 Wi. Putting this together,\n\u2016\u2207z,\u03b8g\u03b8(z)\u2016 \u2264 \u2016 H\u220f i=1 WiDi\u2016+ H\u2211 k=1 \u2016\n(( H\u220f\ni=k+1\nWiDi ) Dk ) f1:k\u22121(z)\u2016\n\u2264 LH K\u220f i=H \u2016Wi\u2016+ H\u2211 k=1 \u2016z\u2016LH ( k\u22121\u220f i=1 \u2016Wi\u2016 )( H\u220f i=k+1 \u2016Wi\u2016 )\nIf C1(\u03b8) = L H (\u220fH i=1 \u2016Wi\u2016 ) and C2(\u03b8) = \u2211H k=1 L H (\u220fk\u22121 i=1 \u2016Wi\u2016 )(\u220fH i=k+1 \u2016Wi\u2016 ) then Ez\u223cp(z)[\u2016\u2207\u03b8,zg\u03b8(z)\u2016] \u2264 C1(\u03b8) + C2(\u03b8)Ez\u223cp(z)[\u2016z\u2016] < +\u221e\nfinishing the proof\nProof of Theorem 2.\n1. \u2022 (\u03b4(Pn,P) \u2192 0 \u21d2 JS(Pn,P) \u2192 0) \u2014 Let Pm be the mixture distribution Pm = 12Pn + 1 2P (note that Pm depends on n). It is easily\nverified that \u03b4(Pm,Pn) \u2264 \u03b4(Pn,P), and in particular this tends to 0 (as does \u03b4(Pm,P)). We now show this for completeness. Let \u00b5 be a signed measure, we define \u2016\u00b5\u2016TV = supA\u2286X |\u00b5(A)|. for all Borel sets A. In this case,\n\u03b4(Pm,Pn) = \u2016Pm \u2212 Pn\u2016TV\n= \u20161 2 P + 1 2 Pn \u2212 Pn\u2016TV = 1\n2 \u2016P\u2212 Pn\u2016TV\n= 1\n2 \u03b4(Pn,P) \u2264 \u03b4(Pn,P)\nLet fn = dPn dPm be the Radon-Nykodim derivative between Pn and the mixture. Note that by construction for every Borel set A we have Pn(A) \u2264 2Pm(A). If A = {fn > 3} then we get\nPn(A) = \u222b A fn dPm \u2265 3Pm(A)\nwhich implies Pm(A) = 0. This means that fn is bounded by 3 Pm(and therefore Pn and P)-almost everywhere. We could have done this for any constant larger than 2 but for our purposes 3 will sufice. Let > 0 fixed, and An = {fn > 1 + }. Then,\nPn(An) = \u222b An fn dPm \u2265 (1 + )Pm(An)\nTherefore,\nPm(An) \u2264 Pn(An)\u2212 Pm(An) \u2264 |Pn(An)\u2212 Pm(An)| \u2264 \u03b4(Pn,Pm) \u2264 \u03b4(Pn,P).\nWhich implies Pm(Am) \u2264 1 \u03b4(Pn,P). Furthermore,\nPn(An) \u2264 Pm(An) + |Pn(An)\u2212 Pm(An)|\n\u2264 1 \u03b4(Pn,P) + \u03b4(Pn,Pm)\n\u2264 1 \u03b4(Pn,P) + \u03b4(Pn,P)\n\u2264 ( 1 + 1 ) \u03b4(Pn,P)\nWe now can see that KL(Pn\u2016Pm) = \u222b log(fn) dPn\n\u2264 log(1 + ) + \u222b An log(fn) dPn \u2264 log(1 + ) + log(3)Pn(An)\n\u2264 log(1 + ) + log(3) ( 1 + 1 ) \u03b4(Pn,P)\nTaking limsup we get 0 \u2264 lim supKL(Pn\u2016Pm) \u2264 log(1 + ) for all > 0, which means KL(Pn\u2016Pm)\u2192 0. In the same way, we can define gn =\ndP dPm , and\n2Pm({gn > 3}) \u2265 P({gn > 3}) \u2265 3Pm({gn > 3})\nmeaning that Pm({gn > 3}) = 0 and therefore gn is bounded by 3 almost everywhere for Pn,Pm and P. With the same calculation, Bn = {gn > 1 + } and\nP(Bn) = \u222b Bn gn dPm \u2265 (1 + )Pm(Bn)\nso Pm(Bn) \u2264 1 \u03b4(P,Pm) \u2192 0, and therefore P(Bn) \u2192 0. We can now show\nKL(P\u2016Pm) = \u222b log(gn) dP\n\u2264 log(1 + ) + \u222b Bn log(gn) dP \u2264 log(1 + ) + log(3)P(Bn)\nso we achieve 0 \u2264 lim supKL(P\u2016Pm) \u2264 log(1+ ) and then KL(P\u2016Pm)\u2192 0. Finally, we conclude\nJS(Pn,P) = 1\n2 KL(Pn\u2016Pm) +\n1 2 KL(P\u2016Pm)\u2192 0\n\u2022 (JS(Pn,P) \u2192 0 \u21d2 \u03b4(Pn,P) \u2192 0) \u2014 by a simple application of the triangular and Pinsker\u2019s inequalities we get\n\u03b4(Pn,P) \u2264 \u03b4(Pn,Pm) + \u03b4(P,Pm) \u2264 \u221a 1\n2 KL(Pn\u2016Pm) +\n\u221a 1\n2 KL(P\u2016Pm) \u2264 2 \u221a JS(Pn,P)\u2192 0\n2. This is a long known fact that W metrizes the weak* topology of (C(X ), \u2016 \u00b7 \u2016\u221e) on Prob(X ), and by definition this is the topology of convergence in distribution. A proof of this can be found (for example) in [22].\n3. This is a straightforward application of Pinsker\u2019s inequality \u03b4(Pn,P) \u2264 \u221a 1\n2 KL(Pn\u2016P)\u2192 0 \u03b4(P,Pn) \u2264 \u221a 1\n2 KL(P\u2016Pn)\u2192 0\n4. This is trivial by recalling the fact that \u03b4 and W give the strong and weak* topologies on the dual of (C(X ), \u2016 \u00b7 \u2016\u221e) when restricted to Prob(X ).\nProof of Theorem 3. Let us define\nV (f\u0303 , \u03b8) = Ex\u223cPr [f\u0303(x)]\u2212 Ex\u223cP\u03b8 [f\u0303(x)] = Ex\u223cPr [f\u0303(x)]\u2212 Ez\u223cp(z)[f\u0303(g\u03b8(z))]\nwhere f\u0303 lies in F = {f\u0303 : X \u2192 R , f\u0303 \u2208 Cb(X ), \u2016f\u0303\u2016L \u2264 1} and \u03b8 \u2208 Rd. Since X is compact, we know by the Kantorovich-Rubenstein duality [22] that there is an f \u2208 F that attains the value\nW (Pr,P\u03b8) = sup f\u0303\u2208F V (f\u0303 , \u03b8) = V (f, \u03b8)\nLet us define X\u2217(\u03b8) = {f \u2208 F : V (f, \u03b8) = W (Pr,P\u03b8)}. By the above point we know then that X\u2217(\u03b8) is non-empty. We know that by a simple envelope theorem ([12], Theorem 1) that \u2207\u03b8W (Pr,P\u03b8) = \u2207\u03b8V (f, \u03b8) for any f \u2208 X\u2217(\u03b8) when both terms are well-defined.\nLet f \u2208 X\u2217(\u03b8), which we knows exists since X\u2217(\u03b8) is non-empty for all \u03b8. Then, we get\n\u2207\u03b8W (Pr,P\u03b8) = \u2207\u03b8V (f, \u03b8) = \u2207\u03b8[Ex\u223cPr [f(x)]\u2212 Ez\u223cp(z)[f(g\u03b8(z))] = \u2212\u2207\u03b8Ez\u223cp(z)[f(g\u03b8(z))]\nunder the condition that the first and last terms are well-defined. The rest of the proof will be dedicated to show that\n\u2212\u2207\u03b8Ez\u223cp(z)[f(g\u03b8(z))] = \u2212Ez\u223cp(z)[\u2207\u03b8f(g\u03b8(z))] (5)\nwhen the right hand side is defined. For the reader who is not interested in such technicalities, he or she can skip the rest of the proof.\nSince f \u2208 F , we know that it is 1-Lipschitz. Furthermore, g\u03b8(z) is locally Lipschitz as a function of (\u03b8, z). Therefore, f(g\u03b8(z)) is locally Lipschitz on (\u03b8, z) with constants L(\u03b8, z) (the same ones as g). By Radamacher\u2019s Theorem, f(g\u03b8(z)) has to be differentiable almost everywhere for (\u03b8, z) jointly. Rewriting this, the set A = {(\u03b8, z) : f \u25e6 g is not differentiable} has measure 0. By Fubini\u2019s Theorem, this implies that for almost every \u03b8 the section A\u03b8 = {z : (\u03b8, z) \u2208 A} has measure 0. Let\u2019s now fix a \u03b80 such that the measure of A\u03b80 is null (such as when the right hand side of equation (5) is well defined). For this \u03b80 we have \u2207\u03b8f(g\u03b8(z))|\u03b80 is well-defined for almost any z, and since p(z) has a density, it is defined p(z)-a.e. By assumption 1 we know that\nEz\u223cp(z)[\u2016\u2207\u03b8f(g\u03b8(z))|\u03b80\u2016] \u2264 Ez\u223cp(z)[L(\u03b80, z)] < +\u221e\nso Ez\u223cp(z)[\u2207\u03b8f(g\u03b8(z))|\u03b80 ] is well-defined for almost every \u03b80. Now, we can see\nEz\u223cp(z)[f(g\u03b8(z))]\u2212 Ez\u223cp(z)[f(g\u03b80(z))]\u2212 \u3008(\u03b8 \u2212 \u03b80),Ez\u223cp(z)[\u2207\u03b8f(g\u03b8(z))|\u03b80 ]\u3009 \u2016\u03b8 \u2212 \u03b80\u2016 (6)\n= Ez\u223cp(z) [ f(g\u03b8(z))\u2212 f(g\u03b80(z))\u2212 \u3008(\u03b8 \u2212 \u03b80),\u2207\u03b8f(g\u03b8(z))|\u03b80\u3009\n\u2016\u03b8 \u2212 \u03b80\u2016\n]\nBy differentiability, the term inside the integral converges p(z)-a.e. to 0 as \u03b8 \u2192 \u03b80. Furthermore,\n\u2016f(g\u03b8(z))\u2212 f(g\u03b80(z))\u2212 \u3008(\u03b8 \u2212 \u03b80),\u2207\u03b8f(g\u03b8(z))|\u03b80\u3009 \u2016\u03b8 \u2212 \u03b80\u2016 \u2016\n\u2264 \u2016\u03b8 \u2212 \u03b80\u2016L(\u03b80, z) + \u2016\u03b8 \u2212 \u03b80\u2016\u2016\u2207\u03b8f(g\u03b8(z))|\u03b80\u2016 \u2016\u03b8 \u2212 \u03b80\u2016\n\u2264 2L(\u03b80, z)\nand since Ez\u223cp(z)[2L(\u03b80, z)] < +\u221e by assumption 1, we get by dominated convergence that Equation 6 converges to 0 as \u03b8 \u2192 \u03b80 so\n\u2207\u03b8Ez\u223cp(z)[f(g\u03b8(z))] = Ez\u223cp(z)[\u2207\u03b8f(g\u03b8(z))]\nfor almost every \u03b8, and in particular when the right hand side is well defined. Note that the mere existance of the left hand side (meaning the differentiability a.e. of Ez\u223cp(z)[f(g\u03b8(z))]) had to be proven, which we just did."
        },
        {
            "heading": "D Energy-based GANs optimize total variation",
            "text": "In this appendix we show that under an optimal discriminator, energy-based GANs (EBGANs) [25] optimize the total variation distance between the real and generated distributions.\nEnergy-based GANs are trained in a similar fashion to GANs, only under a different loss function. They have a discriminator D who tries to minimize\nLD(D, g\u03b8) = Ex\u223cPr [D(x)] + Ez\u223cp(z)[[m\u2212D(g\u03b8(z))]+]\nfor some m > 0 and [x]+ = max(0, x) and a generator network g\u03b8 that\u2019s trained to minimize\nLG(D, g\u03b8) = Ez\u223cp(z)[D(g\u03b8(z))]\u2212 Ex\u223cPr [D(x)]\nVery importantly, D is constrained to be non-negative, since otherwise the trivial solution for D would be to set everything to arbitrarily low values. The original EBGAN paper used only Ez\u223cp(z)[D(g\u03b8(z))] for the loss of the generator, but this is obviously equivalent to our definition since the term Ex\u223cPr [D(x)] does not dependent on \u03b8 for a fixed discriminator (such as when backproping to the generator in EBGAN training) and thus minimizing one or the other is equivalent.\nWe say that a measurable function D\u2217 : X \u2192 [0,+\u221e) is optimal for g\u03b8 (or P\u03b8) if LD(D\n\u2217, g\u03b8) \u2264 LD(D, g\u03b8) for all other measurable functions D. We show that such a discriminator always exists for any two distributions Pr and P\u03b8, and that under such a discriminator, LG(D\n\u2217, g\u03b8) is proportional to \u03b4(Pr,P\u03b8). As a simple corollary, we get the fact that LG(D\n\u2217, g\u03b8) attains its minimum value if and only if \u03b4(Pr,P\u03b8) is at its minimum value, which is 0, and Pr = P\u03b8 (Theorems 1-2 of [25]).\nTheorem 4. Let Pr be a the real data distribution over a compact space X . Let g\u03b8 : Z \u2192 X be a measurable function (such as any neural network). Then, an optimal discriminator D\u2217 exists for Pr and P\u03b8, and\nLG(D \u2217, g\u03b8) =\nm 2 \u03b4(Pr,P\u03b8)\nProof. First, we prove that there exists an optimal discriminator. Let D : X \u2192 [0,+\u221e) be a measurable function, then D\u2032(x) := min(D(x),m) is also a measurable function, and LD(D\n\u2032, g\u03b8) \u2264 LD(D, g\u03b8). Therefore, a function D\u2217 : X \u2192 [0,+\u221e) is optimal if and only if D\u2217\u2032 is. Furthermore, it is optimal if and only if LD(D\n\u2217, g\u03b8) \u2264 LD(D, g\u03b8) for all D : X \u2192 [0,m]. We are then interested to see if there\u2019s an optimal discriminator for the problem min0\u2264D(x)\u2264m LD(D, g\u03b8).\nNote now that if 0 \u2264 D(x) \u2264 m we have\nLD(D, g\u03b8) = Ex\u223cPr [D(x)] + Ez\u223cp(z)[[m\u2212D(g\u03b8(z))]+] = Ex\u223cPr [D(x)] + Ez\u223cp(z)[m\u2212D(g\u03b8(z))] = m+ Ex\u223cPr [D(x)]\u2212 Ez\u223cp(z)[D(g\u03b8(z))] = m+ Ex\u223cPr [D(x)]\u2212 Ex\u223cP\u03b8 [D(x)]\nTherefore, we know that\ninf 0\u2264D(x)\u2264m LD(D, g\u03b8) = m+ inf 0\u2264D(x)\u2264m Ex\u223cPr [D(x)]\u2212 Ex\u223cP\u03b8 [D(x)]\n= m+ inf \u2212m2 \u2264D(x)\u2264 m 2 Ex\u223cPr [D(x)]\u2212 Ex\u223cP\u03b8 [D(x)] = m+ m\n2 inf \u22121\u2264f(x)\u22641 Ex\u223cPr [f(x)]\u2212 Ex\u223cP\u03b8 [f(x)]\nThe interesting part is that\ninf \u22121\u2264f(x)\u22641 Ex\u223cPr [f(x)]\u2212 Ex\u223cP\u03b8 [f(x)] = \u2212\u03b4(Pr,P\u03b8) (7)\nand there is an f\u2217 : X \u2192 [\u22121, 1] such that Ex\u223cPr [f\u2217(x)]\u2212Ex\u223cP\u03b8 [f\u2217(x)] = \u2212\u03b4(Pr,P\u03b8). This is a long known fact, found for example in [22], but we prove it later for completeness. In that case, we define D\u2217(x) = m2 f\n\u2217(x) + m2 . We then have 0 \u2264 D(x) \u2264 m and\nLD(D \u2217, g\u03b8) = m+ Ex\u223cPr [D\u2217(x)]\u2212 Ex\u223cP\u03b8 [D\u2217(x)]\n= m+ m\n2 Ex\u223cPr [D\u2217(x)]\u2212 Ex\u223cP\u03b8 [f\u2217(x)]\n= m\u2212 m 2 \u03b4(Pr,P\u03b8) = inf 0\u2264D(x)\u2264m LD(D, g\u03b8)\nThis shows that D\u2217 is optimal and LD(D \u2217, g\u03b8) = m\u2212 m2 \u03b4(Pr,P\u03b8). Furthermore,\nLG(D \u2217, g\u03b8) = Ez\u223cp(z)[D\u2217(g\u03b8(z))]\u2212 Ex\u223cPr [D\u2217(x)]\n= \u2212LD(D\u2217, g\u03b8) +m = m\n2 \u03b4(Pr,Pg)\nconcluding the proof. For completeness, we now show a proof for equation (7) and the existence of said f\u2217 that attains the value of the infimum. Take \u00b5 = Pr \u2212 P\u03b8, which is a signed measure, and (P,Q) its Hahn decomposition. Then, we can define f\u2217 := 1Q \u2212 1P . By construction, then\nEEx\u223cPr [f \u2217(x)]\u2212 Ex\u223cP\u03b8 [f\u2217(x)] =\n\u222b f\u2217 d\u00b5 = \u00b5(Q)\u2212 \u00b5(P )\n= \u2212(\u00b5(P )\u2212 \u00b5(Q)) = \u2212\u2016\u00b5\u2016TV = \u2212\u2016Pr \u2212 P\u03b8\u2016TV = \u2212\u03b4(Pr,P\u03b8)\nFurthermore, if f is bounded between -1 and 1, we get |Ex\u223cPr [f(x)]\u2212 Ex\u223cP\u03b8 [f(x)]| = | \u222b f dPr \u2212 \u222b f dP\u03b8|\n= | \u222b f d\u00b5|\n\u2264 \u222b |f |d|\u00b5| \u2264 \u222b 1 d|\u00b5|\n= |\u00b5|(X ) = \u2016\u00b5\u2016TV = \u03b4(Pr,P\u03b8)\nSince \u03b4 is positive, we can conclude Ex\u223cPr [f(x)]\u2212 Ex\u223cP\u03b8 [f(x)] \u2265 \u2212\u03b4(Pr,P\u03b8)."
        },
        {
            "heading": "E Generator\u2019s cost during normal GAN training",
            "text": "F Sheets of samples"
        }
    ],
    "title": "Wasserstein GAN",
    "year": 2017
}