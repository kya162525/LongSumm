{
    "abstractText": "Most successful information extraction systems operate with access to a large collection of documents. In this work, we explore the task of acquiring and incorporating external evidence to improve extraction accuracy in domains where the amount of training data is scarce. This process entails issuing search queries, extraction from new sources and reconciliation of extracted values, which are repeated until sufficient evidence is collected. We approach the problem using a reinforcement learning framework where our model learns to select optimal actions based on contextual information. We employ a deep Qnetwork, trained to optimize a reward function that reflects extraction accuracy while penalizing extra effort. Our experiments on two databases \u2013 of shooting incidents, and food adulteration cases \u2013 demonstrate that our system significantly outperforms traditional extractors and a competitive meta-classifier baseline.1",
    "authors": [
        {
            "affiliations": [],
            "name": "Karthik Narasimhan"
        },
        {
            "affiliations": [],
            "name": "Adam Yala"
        },
        {
            "affiliations": [],
            "name": "Regina Barzilay"
        }
    ],
    "id": "SP:29ad7f29e9a4a013c04a6932e14d5c261c3ce694",
    "references": [
        {
            "authors": [
                "Agichtein",
                "Gravano2000] Eugene Agichtein",
                "Luis Gravano"
            ],
            "title": "Snowball: Extracting relations from large plain-text collections",
            "venue": "In Proceedings of the fifth ACM conference on Digital libraries,",
            "year": 2000
        },
        {
            "authors": [
                "Banko et al.2002] Michele Banko",
                "Eric Brill",
                "Susan Dumais",
                "Jimmy Lin"
            ],
            "title": "Askmsr: Question answering using the worldwide web",
            "venue": "In Proceedings of 2002 AAAI Spring Symposium on Mining Answers from Texts and Knowledge Bases,",
            "year": 2002
        },
        {
            "authors": [
                "Bejan",
                "Sanda Harabagiu"
            ],
            "title": "Unsupervised event coreference resolution",
            "venue": "Computational Linguistics,",
            "year": 2014
        },
        {
            "authors": [
                "Chieu",
                "Ng2002] Hai Leong Chieu",
                "Hwee Tou Ng"
            ],
            "title": "A maximum entropy approach to information extraction from semi-structured and free text",
            "venue": "In Proceedings of AAAI",
            "year": 2002
        },
        {
            "authors": [
                "Culotta",
                "McCallum2004] Aron Culotta",
                "Andrew McCallum"
            ],
            "title": "Confidence estimation for information extraction",
            "venue": "In Proceedings of HLT-NAACL",
            "year": 2004
        },
        {
            "authors": [
                "Durrett",
                "Klein2014] Greg Durrett",
                "Dan Klein"
            ],
            "title": "A joint model for entity analysis: Coreference",
            "venue": "typing, and linking. Transactions of the Association for Computational Linguistics,",
            "year": 2014
        },
        {
            "authors": [
                "Etzioni et al.2011] Oren Etzioni",
                "Anthony Fader",
                "Janara Christensen",
                "Stephen Soderland",
                "Mausam Mausam"
            ],
            "title": "Open information extraction: The second generation",
            "venue": "In IJCAI,",
            "year": 2011
        },
        {
            "authors": [
                "Fader et al.2011] Anthony Fader",
                "Stephen Soderland",
                "Oren Etzioni"
            ],
            "title": "Identifying relations for open information extraction",
            "venue": "In Proceedings of the Conference on Empirical Methods in Natural Language Processing,",
            "year": 2011
        },
        {
            "authors": [
                "Gardner et al.2014] Matt Gardner",
                "Partha Talukdar",
                "Jayant Krishnamurthy",
                "Tom Mitchell"
            ],
            "title": "Incorporating vector space similarity in random walk inference over knowledge bases",
            "venue": "In Proceedings of the 2014 Conference on Empirical Methods in Natural",
            "year": 2014
        },
        {
            "authors": [
                "Guu et al.2015] Kelvin Guu",
                "John Miller",
                "Percy Liang"
            ],
            "title": "Traversing knowledge graphs in vector space",
            "venue": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,",
            "year": 2015
        },
        {
            "authors": [
                "Han et al.2011] Xianpei Han",
                "Le Sun",
                "Jun Zhao"
            ],
            "title": "Collective entity linking in web text: a graphbased method",
            "venue": "In Proceedings of the 34th international ACM SIGIR conference on Research and development in Information Retrieval,",
            "year": 2011
        },
        {
            "authors": [
                "He et al.2015] Ji He",
                "Jianshu Chen",
                "Xiaodong He",
                "Jianfeng Gao",
                "Lihong Li",
                "Li Deng",
                "Mari Ostendorf"
            ],
            "title": "Deep reinforcement learning with an action space defined by natural language. arXiv preprint arXiv:1511.04636",
            "year": 2015
        },
        {
            "authors": [
                "Ji",
                "Grishman2011] Heng Ji",
                "Ralph Grishman"
            ],
            "title": "Knowledge base population: Successful approaches and challenges",
            "venue": "In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies - Volume",
            "year": 2011
        },
        {
            "authors": [
                "Kanani",
                "McCallum2012] Pallika H Kanani",
                "Andrew K McCallum"
            ],
            "title": "Selecting actions for resource-bounded information extraction using reinforcement learning",
            "venue": "In Proceedings of the fifth ACM international conference on Web search and data min-",
            "year": 2012
        },
        {
            "authors": [
                "Lee et al.2012] Heeyoung Lee",
                "Marta Recasens",
                "Angel Chang",
                "Mihai Surdeanu",
                "Dan Jurafsky"
            ],
            "title": "Joint entity and event coreference resolution across documents",
            "venue": "In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Pro-",
            "year": 2012
        },
        {
            "authors": [
                "Mann",
                "Yarowsky2005] Gideon S Mann",
                "David Yarowsky"
            ],
            "title": "Multi-field information extraction and cross-document fusion",
            "venue": "In Proceedings of the 43rd annual meeting on association for computational linguistics,",
            "year": 2005
        },
        {
            "authors": [
                "len King",
                "Dharshan Kumaran",
                "Daan Wierstra",
                "Shane Legg",
                "Demis Hassabis"
            ],
            "title": "Human-level control through deep reinforcement learning",
            "venue": "Nature,",
            "year": 2015
        },
        {
            "authors": [
                "Tejas Kulkarni",
                "Regina Barzilay"
            ],
            "title": "Language understanding for text-based games using deep reinforcement learning",
            "venue": "In Proceedings of the Conference on Empirical Methods in Natural Language",
            "year": 2015
        },
        {
            "authors": [
                "Benjamin Roth",
                "Andrew McCallum"
            ],
            "title": "Compositional vector space models for knowledge base completion",
            "venue": "In Proceedings of the 53rd Annual Meeting of the Association",
            "year": 2015
        },
        {
            "authors": [
                "Danqi Chen",
                "Christopher D Manning",
                "Andrew Ng"
            ],
            "title": "Reasoning with neural tensor networks for knowledge base completion",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2013
        },
        {
            "authors": [
                "David McClosky",
                "Julie Tibshirani",
                "John Bauer",
                "Angel X Chang",
                "Valentin I Spitkovsky",
                "Christopher D Manning"
            ],
            "title": "A simple distant supervision approach for the tac-kbp slot filling task",
            "venue": "Proceedings of Text Analy-",
            "year": 2010
        },
        {
            "authors": [
                "Sutton",
                "Barto1998] Richard S Sutton",
                "Andrew G Barto"
            ],
            "title": "Introduction to reinforcement learning",
            "year": 1998
        },
        {
            "authors": [
                "Tieleman",
                "Hinton2012] Tijmen Tieleman",
                "Geoffrey Hinton"
            ],
            "title": "Lecture 6.5-rmsprop: Divide the gradient by a running average of its recent magnitude",
            "venue": "COURSERA: Neural Networks for Machine Learning,",
            "year": 2012
        },
        {
            "authors": [
                "West et al.2014] Robert West",
                "Evgeniy Gabrilovich",
                "Kevin Murphy",
                "Shaohua Sun",
                "Rahul Gupta",
                "Dekang Lin"
            ],
            "title": "Knowledge base completion via search-based question answering",
            "venue": "In Proceedings of the 23rd international conference on World wide web,",
            "year": 2014
        },
        {
            "authors": [
                "Wu",
                "Weld2010] Fei Wu",
                "Daniel S Weld"
            ],
            "title": "Open information extraction using wikipedia",
            "venue": "In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics,",
            "year": 2010
        },
        {
            "authors": [
                "Yang et al.2014] Bishan Yang",
                "Wen-tau Yih",
                "Xiaodong He",
                "Jianfeng Gao",
                "Li Deng"
            ],
            "title": "Embedding entities and relations for learning and inference in knowledge bases",
            "venue": "arXiv preprint arXiv:1412.6575",
            "year": 2014
        }
    ],
    "sections": [
        {
            "heading": "1 Introduction",
            "text": "In many realistic domains, information extraction (IE) systems require exceedingly large amounts of annotated data to deliver high performance. Increases in training data size enable models to handle robustly the multitude of linguistic expressions that convey the same semantic relation. Consider, for instance, an IE system that aims to identify entities such as the perpetrator and the number of vic-\n1Code is available at http://people.csail.mit. edu/karthikn/rl-ie/\ntims in a shooting incident (Figure 1). The document does not explicitly mention the shooter (Scott Westerhuis), but instead refers to him as a suicide victim. Extraction of the number of fatally shot victims is similarly difficult, as the system needs to infer that \"A couple and four children\" means six people. Even a large annotated training set may not provide sufficient coverage to capture such challenging cases.\nIn this paper, we explore an alternative approach for boosting extraction accuracy, when a large training corpus is not available. Instead, the proposed method utilizes external information sources to resolve ambiguities inherent in text interpretation. Specifically, our strategy is to find other documents that contain the information sought, expressed in a form that a basic extractor can \"understand\". For instance, Figure 2 shows two other articles describing the same event, wherein the entities of interest \u2013 the number of people killed and the name of the\nar X\niv :1\n60 3.\n07 95\n4v 3\n[ cs\n.C L\n] 2\n7 Se\np 20\nshooter \u2013 are expressed explicitly. Processing such stereotypical phrasing is easier for most extraction systems, compared to analyzing the original source document. This approach is particularly suitable for extracting information from news where a typical event is covered by multiple news outlets.\nThe challenges, however, lie in (1) performing event coreference (i.e. retrieving suitable articles describing the same incident) and (2) reconciling the entities extracted from these different documents. Querying the web (using the source article\u2019s title for instance) often retrieves documents about other incidents with a tangential relation to the original story. For example, the query \u201c4 adults, 1 teenager shot in west Baltimore 3 april 2015\u201d yields only two relevant articles among the top twenty results on Bing search, while returning other shooting events at the same location. Moreover, the values extracted from these different sources require resolution since some of them might be inaccurate.\nOne solution to this problem would be to perform a single search to retrieve articles on the same event and then reconcile values extracted from them (say, using a meta-classifier). However, if the confidence of the new set of values is still low, we might wish to perform further queries. Thus, the problem is inherently sequential, requiring alternating phases of querying to retrieve articles and integrating the extracted values.\nWe address these challenges using a Reinforcement Learning (RL) approach that combines query formulation, extraction from new sources, and value reconciliation. To effectively select among possible\nactions, our state representation encodes information about the current and new entity values along with the similarity between the source article and the newly retrieved document. The model learns to select good actions for both article retrieval and value reconciliation in order to optimize the reward function, which reflects extraction accuracy and includes penalties for extra moves. We train the RL agent using a Deep Q-Network (DQN) (Mnih et al., 2015) that is used to predict both querying and reconciliation choices simultaneously. While we use a maximum entropy model as the base extractor, this framework can be inherently applied to other extraction algorithms.\nWe evaluate our system on two datasets where available training data is inherently limited. The first dataset is constructed from a publicly available database of mass shootings in the United States. The database is populated by volunteers and includes the source articles. The second dataset is derived from a FoodShield database of illegal food adulterations. Our experiments demonstrate that the final RL model outperforms basic extractors as well as a meta-classifier baseline in both domains. For instance, in the Shootings domain, the average accuracy improvement over the meta-classifier is 7%."
        },
        {
            "heading": "2 Related Work",
            "text": "Open Information Extraction Existing work in open IE has used external sources from the web to improve extraction accuracy and coverage (Agichtein and Gravano, 2000; Etzioni et al., 2011; Fader et al., 2011; Wu and Weld, 2010). Such research has focused on identifying multiple instances of the same relation, independent of the context in which this information appears. In contrast, our goal is to extract information from additional sources about a specific event described in a source article. Therefore, the novel challenge of our task resides in performing event coreference (Lee et al., 2012; Bejan and Harabagiu, 2014) (i.e identifying other sources describing the same event) while simultaneously reconciling extracted information. Moreover, relations typically considered by open IE systems have significantly higher coverage in online documents than a specific incident described in a few news sources. Hence, we require a different\nmechanism for finding and reconciling online information.\nEntity linking, multi-document extraction and event coreference Our work also relates to the task of multi-document information extraction, where the goal is to connect different mentions of the same entity across input documents (Mann and Yarowsky, 2005; Han et al., 2011; Durrett and Klein, 2014). Since this setup already includes multiple input documents, the model is not required to look for additional sources or decide on their relevance. Also, while the set of input documents overlap in terms of entities mentioned, they do not necessarily describe the same event. Given these differences in setup, the challenges and opportunities of the two tasks are distinct.\nKnowledge Base Completion and Online Search Recent work has explored several techniques to perform Knowledge Base Completion (KBC) such as vector space models and graph traversal (Socher et al., 2013; Yang et al., 2014; Gardner et al., 2014; Neelakantan et al., 2015; Guu et al., 2015). Though our work also aims at increasing extraction recall for a database, traditional KBC approaches do not require searching for additional sources of information. West et al. (2014) explore query reformulation in the context of KBC. Using existing search logs, they learn how to formulate effective queries for different types of database entries. Once query learning is completed, the model employs several selected queries, and then aggregates the results based on retrieval ranking. This approach is complementary to the proposed method, and can be combined with our approach if search logs are available.\nKanani and McCallum (2012) also combine search and information extraction. In their task of faculty directory completion, the system has to find documents from which to extract desired information. They employ reinforcement learning to address computational bottlenecks, by minimizing the number of queries, document downloads and extraction action. The extraction accuracy is not part of this optimization, since the baseline IE system achieves high performance on the relations of interest. Hence, given different design goals, the two RL formulations are very different. Our approach is also close in spirit to the AskMSR system (Banko et al., 2002)\nwhich aims at using information redundancy on the web to better answer questions. Though our goal is similar, we learn to query and consolidate the different sources of information instead of using predefined rules. Several slot-filling methods have experimented with query formulation over web-based corpora to populate knowledge bases (Surdeanu et al., 2010; Ji and Grishman, 2011)."
        },
        {
            "heading": "3 Framework",
            "text": "We model the information extraction task as a markov decision process (MDP), where the model learns to utilize external sources to improve upon extractions from a source article (see Figure 3). The MDP framework allows us to dynamically incorporate entity predictions while also providing flexibility to choose the type of articles to extract from. At each step, the system has to reconcile extracted values from a related article (enew) with the current set of values (ecur), and decide on the next query for retrieving more articles.\nWe represent the MDP as a tuple \u3008S,A, T,R\u3009, where S = {s} is the space of all possible states, A = {a = (d, q)} is the set of all actions, R(s, a) is the reward function, and T (s\u2032|s, a) is the transition function. We describe these in detail below.\nStates The state s in our MDP consists of the extractor\u2019s confidence in predicted entity values, the context from which the values are extracted and the similarity between the new document and the original one. We represent the state as a continuous realvalued vector (Figure 3) incorporating these pieces of information: 1. Confidence scores of current and newly extracted\nentity values. 2. One-hot encoding of matches between current\nand new values. 3. Unigram/tf-idf counts2 of context words. These\nare words that occur in the neighborhood of the entity values in a document (e.g. the words which, left, people and wounded in the phrase \u201cwhich left 5 people wounded\u201d). 4. tf-idf similarity between the original article and the new article.\n2Counts are computed on the documents used to train the basic extraction system.\nActions At each step, the agent is required to take two actions - a reconciliation decision d and a query choice q. The decision d on the newly extracted values can be one of the following types: (1) accept a specific entity\u2019s value (one action per entity)3, (2) accept all entity values, (3) reject all values or (4) stop. In cases 1-3, the agent continues to inspect more articles, while the episode ends if a stop action (4) is chosen. The current values and confidence scores are simply updated with the accepted values and the corresponding confidences.4 The choice q is used to choose the next query from a set of automatically generated alternatives (details below) in order to retrieve the next article.\nRewards The reward function is chosen to maximize the final extraction accuracy while minimizing the number of queries. The accuracy component is calculated using the difference between the accuracy of the current and the previous set of entity values:\nR(s, a) = \u2211\nentity j\nAcc(ejcur)\u2212 Acc(ejprev)\nThere is a negative reward per step to penalize the agent for longer episodes.\n3No entity-specific features are used for action selection. 4We also experiment with other forms of value reconcilia-\ntion. See Section 5 for details.\nQueries The queries are based on automatically generated templates, created using the title of an article along with words5 most likely to co-occur with each entity type in the training data. Table 1 provides some examples \u2013 for instance, the second template contains words such as arrested and identified which often appear around the name of the shooter.\nWe use a search engine to query the web for articles on the same event as the source article and retrieve the top k links per query.6 Documents that are more than a month older than the original article are filtered out of the search results.\nTransitions Each episode starts off with a single source article xi from which an initial set of entity\n5Stop words, numeric terms and proper nouns are filtered. 6We use k=20 in our experiments.\nvalues are extracted. The subsequent steps in the episode involve the extra articles, downloaded using different types of query formulations based on the source article. A single transition in the episode consists of the agent being given the state s containing information about the current and new set of values (extracted from a single article) using which the next action a = (d, q) is chosen. The transition function T (s\u2032|s, a) incorporates the reconciliation decision d from the agent in state s along with the values from the next article retrieved using query q and produces the next state s\u2032. The episode stops whenever d is a stop decision.\nAlgorithm 1 details the entire MDP framework for the training phase. During the test phase, each source article is handled only once in a single episode (lines 8-23).\nAlgorithm 1 MDP framework for Information Extraction (Training Phase)\n1: Initialize set of original articles X 2: for xi \u2208 X do 3: for each query template T q do 4: Download articles with query T q(xi) 5: Queue retrieved articles in Y qi 6: for epoch = 1,M do 7: for i = 1, |X| do //episode 8: Extract entities e0 from xi 9: ecur \u2190 e0\n10: q\u2190 0, r\u2190 0 //query type, reward 11: while Y qi not empty do 12: Pop next article y from Y qi 13: Extract entities enew from y 14: Compute tf-idf similarity Z(xi, y) 15: Compute context vector C(y) 16: Form state s using ecur, enew, Z(xi, y)\nand C(y) 17: Send (s, r) to agent 18: Get decision d, query q from agent 19: if q == \u201cend_episode\u201d then break 20: eprev \u2190 ecur 21: ecur \u2190 Reconcile(ecur, enew, d) 22: r \u2190\u2211entity j Acc(ejcur)\u2212 Acc(ejprev) 23: Send (send, r) to agent"
        },
        {
            "heading": "4 Reinforcement Learning for Information Extraction",
            "text": "In order to learn a good policy for an agent, we utilize the paradigm of reinforcement learning (RL).\nThe MDP described in the previous section can be viewed in terms of a sequence of transitions (s, a, r, s\u2032). The agent typically utilizes a stateaction value function Q(s, a) to determine which action a to perform in state s. A commonly used technique for learning an optimal value function is Q-learning (Watkins and Dayan, 1992), in which the agent iteratively updates Q(s, a) using the rewards obtained from episodes. The updates are derived from the recursive Bellman equation (Sutton and Barto, 1998) for the optimal Q:\nQi+1(s, a) = E[r + \u03b3max a\u2032\nQi(s \u2032, a\u2032) | s, a]\nHere, r = R(s, a) is the reward and \u03b3 is a factor discounting the value of future rewards and the expectation is taken over all transitions involving state s and action a.\nSince our problem involves a continuous state space S, we use a deep Q-network (DQN) (Mnih et al., 2015) as a function approximator Q(s, a) \u2248 Q(s, a; \u03b8). The DQN, in which the Q-function is approximated using a deep neural network, has been shown to learn better value functions than linear approximators (Narasimhan et al., 2015; He et al., 2015) and can capture non-linear interactions between the different pieces of information in our state.\nWe use a DQN consisting of two linear layers (20 hidden units each) followed by rectified linear units (ReLU), along with two separate output layers.7 The network takes the continuous state vector s as input and predicts Q(s, d) and Q(s, q) for reconciliation decisions d and query choices q simultaneously using the different output layers (see Supplementary material for the model architecture).\nParameter Learning The parameters \u03b8 of the DQN are learnt using stochastic gradient descent with RMSprop (Tieleman and Hinton, 2012). Each parameter update aims to close the gap between the Q(st, at; \u03b8) predicted by the DQN and the expected Q-value from the Bellman equation, rt + \u03b3maxaQ(st+1, a; \u03b8). Following Mnih et al. (2015), we make use of a (separate) target Qnetwork to calculate the expected Q-value, in order\n7We did not observe significant differences with additional linear layers or the choice of non-linearity (Sigmoid/ReLU).\nAlgorithm 2 Training Procedure for DQN agent with -greedy exploration\n1: Initialize experience memory D 2: Initialize parameters \u03b8 randomly 3: for episode = 1,M do 4: Initialize environment and get start state s1 5: for t = 1, N do 6: if random() < then 7: Select a random action at 8: else 9: Compute Q(st, a) for all actions a\n10: Select at = argmax Q(st, a) 11: Execute action at and observe reward rt and\nnew state st+1 12: Store transition (st, at, rt, st+1) in D 13: Sample random mini batch of transitions\n(sj , aj , rj , sj+1) from D 14: yj = { rj , if sj+1 is terminal rj + \u03b3 maxa\u2032 Q(sj+1, a\u2032; \u03b8t), else 15: Perform gradient descent step on the loss L(\u03b8) = (yj \u2212Q(sj , aj ; \u03b8))2 16: if st+1 == send then break\nto have \u2018stable updates\u2019. The target Q-network is periodically updated with the current parameters \u03b8. We also make use of an experience replay memory D to store transitions. To perform updates, we sample a batch of transitions (s\u0302, a\u0302, s\u0302\u2032, r) at random from D and minimize the loss function8:\nL(\u03b8) = Es\u0302,a\u0302[(y \u2212Q(s\u0302, a\u0302; \u03b8))2]\nwhere y = r + \u03b3maxa\u2032 Q(s\u0302\u2032, a\u2032; \u03b8t) is the target Qvalue. The learning updates are made every training step using the following gradients:\n\u2207\u03b8L(\u03b8) = Es\u0302,a\u0302[2(y \u2212Q(s\u0302, a\u0302; \u03b8))\u2207\u03b8Q(s\u0302, a\u0302; \u03b8)]\nAlgorithm 2 details the DQN training procedure."
        },
        {
            "heading": "5 Experimental Setup",
            "text": "Data We perform experiments on two different datasets. For the first set, we collected data from the Gun Violence archive,9 a website tracking shootings in the United States. The data contains a news article on each shooting and annotations for (1) the name of the shooter, (2) the number of people killed, (3) the number of people wounded, and (4) the city where\n8The expectation is over the transitions sampled uniformly at random from D.\n9www.shootingtracker.com/Main_Page\nthe incident took place. We consider these as the entities of interest, to be extracted from the articles. The second dataset we use is the Foodshield EMA database10 documenting adulteration incidents since 1980. This data contains annotations for (1) the affected food product, (2) the adulterant and (3) the location of the incident. Both datasets are classic examples where the number of recorded incidents is insufficient for large-scale IE systems to leverage.\nFor each source article in the above databases, we download extra articles (top 20 links) using the Bing Search API11 with different automatically generated queries. We use only the source articles from the train portion to learn the parameters of the base extractor. The entire train set with downloaded articles is used to train the DQN agent and the metaclassifier baseline (described below). All parameters are tuned on the dev set. For the final results, we train the models on the combined train and dev sets and use the entire test set (source + downloaded articles) to evaluate. Table 2 provides data statistics.\nExtraction model We use a maximum entropy classifier as the base extraction system, since it provides flexibility to capture various local context features and has been shown to perform well for information extraction (Chieu and Ng, 2002). The classifier is used to tag each word in a document as one of the entity types or not (e.g. {ShooterName, NumKilled, NumWounded, City, Other} in the Shootings domain). Then, for each tag except Other, we choose the mode of the values to obtain the set of entity extractions from the article.12 Features used in the classifier are provided in the Supplementary material.\nThe features and context window c = 4 of neighboring words are tuned to maximize performance on a dev set. We also experimented with a conditional random field (CRF) (with the same features) for the sequence tagging (Culotta and McCallum, 2004)\n10www.foodshield.org/member/login/ 11www.bing.com/toolbox/bingsearchapi 12We normalize numerical words (e.g. \"one\" to \"1\") before\ntaking the mode.\nbut obtained worse empirical performance (see Section 6). The parameters of the base extraction model are not changed during training of the RL model.\nEvaluation We evaluate the extracted entity values against the gold annotations and report the corpus-level average accuracy on each entity type. For entities like ShooterName, the annotations (and the news articles) often contain multiple names (first and last) in various combinations, so we consider retrieving either name as a successful extraction. For all other entities, we look for exact matches.\nBaselines We explore 4 types of baselines: Basic extractors: We use the CRF and the Maxent classifier mentioned previously. Aggregation systems: We examine two systems that perform different types of value reconciliation. The first model (Confidence) chooses entity values with the highest confidence score assigned by the base extractor. The second system (Majority) takes a majority vote over all values extracted from these articles. Both methods filter new entity values using a threshold \u03c4 on the cosine similarity over the tf-idf representations of the source and new articles.\nMeta-classifer: To demonstrate the importance of modeling the problem in the RL framework, we consider a meta-classifier baseline. The classifier operates over the same input state space and produces the same set of reconciliation decisions {d} as the DQN. For training, we use the original source article for each event along with a related downloaded article to compute the state. If the downloaded article has the correct value and the original one does not, we label it as a positive example for that entity class. If multiple such entity classes exist, we create several training instances with appropriate labels, and if none exist, we use the label corresponding to the reject all action. For each test event, the classifier is used to provide decisions for all the downloaded articles and the final extraction is performed by aggregating the value predictions using the Confidence-based scheme described above.\nOracle: Finally, we also have an ORACLE score which is computed assuming perfect reconciliation and querying decisions on top of the Maxent base extractor. This helps us analyze the contribution of the RL system in isolation of the inherent limitations of the base extractor.\nRL models We perform experiments using three variants of RL agents \u2013 (1) RL-Basic, which performs only reconciliation decisions13, (2) RL-Query, which takes only query decisions with the reconciliation strategy fixed (similar to Kanani and McCallum (2012)), and (3) RL-Extract, our full system incorporating both reconciliation and query decisions.\nWe train the models for 10000 steps every epoch using the Maxent classifier as the base extractor, and evaluate on the entire test set every epoch. The final accuracies reported are averaged over 3 independent runs; each run\u2019s score is averaged over 20 epochs after 100 epochs of training. The penalty per step is set to -0.001. For the DQN, we use the dev set to tune all parameters. We used a replay memory D of size 500k, and a discount (\u03b3) of 0.8. We set the learning rate to 2.5E\u22125. The in -greedy exploration is annealed from 1 to 0.1 over 500k transitions. The target-Q network is updated every 5k steps."
        },
        {
            "heading": "6 Results",
            "text": "Performance Table 3 demonstrates that our system (RL-Extract) obtains a substantial gain in accuracy over the basic extractors on all entity types over both domains. For instance, RL-Extract is 11.4% more accurate than the basic Maxent extractor on City and 7.1% better on NumKilled, while also achieving gains of more than 5% on the other entities on the Shootings domain. The gains on the Adulteration dataset are also significant, up to a 11.5% increase on the Location entity.\nWe can also observe that simple aggregation schemes like the Confidence and Majority baselines don\u2019t handle the complexity of the task well. RL-Extract outperforms these by 7.2% on Shootings and 5% on Adulteration averaged over all entities. Further, the importance of sequential decisionmaking is established by RL-Extract performing significantly better than the meta-classifier (7.0% on Shootings over all entities). This is also due to the fact that the meta-classifier aggregates over the entire set of extra documents, including the long tail of noisy, irrelevant documents. Finally, we see the advantage of enabling the RL system to select queries as our full model RL-Extract obtains significant im-\n13Articles are presented to the agent in a round-robin fashion from the different query lists.\nprovements over RL-Basic on both domains. The full model also outperforms RL-Query, demonstrating the importance of performing both query selection and reconciliation in a joint fashion.\nFigure 4 shows the learning curve of the agent by measuring reward on the test set after each training epoch. The reward improves gradually and the accuracy on each entity increases simultaneously. Table 4 provides some examples where our model is able to extract the right values when the baseline fails. One can see that in most cases this is due to the model making use of articles with prototypical language or articles containing the entities in readily extractable form.\nAnalysis We also analyze the importance of different reconciliation schemes, rewards and contextvectors in RL-Extract on the Shootings domain (Table 5). In addition to simple replacement (Re-\nplace), we also experiment with using Confidence and Majority-based reconciliation schemes for RLExtract. We observe that the Replace scheme performs much better than the others (2-6% on all entities) and believe this is because it provides the agent with more flexibility in choosing the final values.\nFrom the same table, we see that using the tfidf counts of context words as part of the state provides better performance than using no context or using simple unigram counts. In terms of reward structure, providing rewards after each step is empirically found to be significantly better (>10% on average) compared to a single delayed reward per episode. The last column shows the average number of steps per episode \u2013 the values range from 6.8 to 10.0 steps for the different schemes. The best system (RL-Extract with Replace, tf-idf and step-based rewards) uses 9.4 steps per episode."
        },
        {
            "heading": "7 Conclusions",
            "text": "In this paper, we explore the task of acquiring and incorporating external evidence to improve information extraction accuracy for domains with limited access to training data. This process comprises issuing search queries, extraction from new sources and reconciliation of extracted values, repeated until sufficient evidence is obtained. We use a reinforcement learning framework and learn optimal action sequences to maximize extraction accuracy while penalizing extra effort. We show that our model, trained as a deep Q-network, outperforms traditional extractors by 7.2% and 5% on average on two different domains, respectively. We also demonstrate the\nimportance of sequential decision-making by comparing our model to a meta-classifier operating on the same space, obtaining up to a 7% gain."
        },
        {
            "heading": "Acknowledgements",
            "text": "We thank David Alvarez, Tao Lei and Ramya Ramakrishnan for helpful discussions and feedback, and the members of the MIT NLP group and the anonymous reviewers for their insightful comments. We also gratefully acknowledge support from a Google faculty award."
        },
        {
            "heading": "1 Framework and Model",
            "text": "Table 1 lists examples of features used in our Maxent classifier. Figure 1 illustrates the architecture of our DQN model.\nFeatures: isMaleName, isFemaleName isCapital, isLongWord, isShortWord isDigit, containsDigit, isNumberWord isOrdinalWord isFullCity, isPartialCity\nTable 1: Examples of unigram features used in Maximum Entropy classifier. The same features are also calculated for neighboring words in the surrounding context.\nReLU\nLinear\nLinear\nLinear\nReLU\nLinear\ns\nQ(s, q)Q(s, d)\nFigure 1: DQN architecture\nar X\niv :1\n60 3.\n07 95\n4v 3\n[ cs\n.C L\n] 2\n7 Se\np 20\n16"
        }
    ],
    "title": "Improving Information Extraction by Acquiring External Evidence with Reinforcement Learning",
    "year": 2016
}