{
    "abstractText": "Word evolution refers to the changing meanings and associations of words throughout time, as a byproduct of human language evolution. By studying word evolution, we can infer social trends and language constructs over different periods of human history. However, traditional techniques such as word representation learning do not adequately capture the evolving language structure and vocabulary. In this paper, we develop a dynamic statistical model to learn time-aware word vector representation. We propose a model that simultaneously learns time-aware embeddings and solves the resulting \u201calignment problem\u201d. This model is trained on a crawled NYTimes dataset. Additionally, we develop multiple intuitive evaluation strategies of temporal word embeddings. Our qualitative and quantitative tests indicate that our method not only reliably captures this evolution over time, but also consistently outperforms state-of-the-art temporal embedding approaches on both semantic accuracy and alignment quality. ACM Reference Format: Zijun Yao, Yifan Sun, Weicong Ding, Nikhil Rao, and Hui Xiong. 2018. Dynamic Word Embeddings for Evolving Semantic Discovery. In WSDM 2018: The Eleventh ACM International Conference on Web Search and Data Mining, February 5\u20139, 2018, Marina Del Rey, CA, USA. ACM, New York, NY, USA, 9 pages. https://doi.org/10.1145/3159652.3159703",
    "authors": [
        {
            "affiliations": [],
            "name": "Zijun Yao"
        },
        {
            "affiliations": [],
            "name": "Yifan Sun"
        },
        {
            "affiliations": [],
            "name": "Weicong Ding"
        },
        {
            "affiliations": [],
            "name": "Nikhil Rao"
        },
        {
            "affiliations": [],
            "name": "Hui Xiong"
        }
    ],
    "id": "SP:ffa952b637e03bcae13b38e13ce5cf73c6f24e59",
    "references": [
        {
            "authors": [
                "James Allan",
                "Rahul Gupta",
                "Vikas Khandelwal"
            ],
            "title": "Temporal summaries of new topics",
            "venue": "In Proceedings of the 24th annual international ACM SIGIR conference on Research and development in information retrieval",
            "year": 2001
        },
        {
            "authors": [
                "Sanjeev Arora",
                "Yuanzhi Li",
                "Yingyu Liang",
                "Tengyu Ma",
                "Andrej Risteski"
            ],
            "title": "Rand-walk: A latent variable model approach to word embeddings",
            "year": 2015
        },
        {
            "authors": [
                "Marco Baroni",
                "Georgiana Dinu",
                "Germ\u00e1n Kruszewski"
            ],
            "title": "Don\u2019t count, predict! A systematic comparison of context-counting vs. context-predicting semantic vectors",
            "venue": "In ACL",
            "year": 2014
        },
        {
            "authors": [
                "Pierpaolo Basile",
                "Annalina Caputo",
                "Giovanni Semeraro"
            ],
            "title": "Analysing word meaning over time by exploiting temporal random indexing",
            "venue": "In First Italian Conference on Computational Linguistics CLiC-it",
            "year": 2014
        },
        {
            "authors": [
                "Yoshua Bengio",
                "R\u00e9jean Ducharme",
                "Pascal Vincent",
                "Christian Jauvin"
            ],
            "title": "A Neural Probabilistic Language Model",
            "venue": "Journal of Machine Learning Research",
            "year": 2003
        },
        {
            "authors": [
                "David M Blei",
                "John D Lafferty"
            ],
            "title": "Dynamic topic models",
            "venue": "In Proceedings of the 23rd international conference on Machine learning",
            "year": 2006
        },
        {
            "authors": [
                "Hyunyoung Choi",
                "Hal Varian"
            ],
            "title": "Predicting the present with Google Trends",
            "venue": "Economic Record 88,",
            "year": 2012
        },
        {
            "authors": [
                "Ronan Collobert",
                "Jason Weston"
            ],
            "title": "A unified architecture for natural language processing: Deep neural networks with multitask learning",
            "venue": "In Proceedings of the 25th international conference on Machine learning",
            "year": 2008
        },
        {
            "authors": [
                "Scott Deerwester",
                "Susan T Dumais",
                "George W Furnas",
                "Thomas K Landauer",
                "Richard Harshman"
            ],
            "title": "Indexing by latent semantic analysis",
            "venue": "Journal of the American society for information science 41,",
            "year": 1990
        },
        {
            "authors": [
                "Kristina Gulordava",
                "Marco Baroni"
            ],
            "title": "A distributional similarity approach to the detection of semantic change in the Google Books Ngram corpus",
            "venue": "In Proceedings of the GEMS 2011 Workshop on GEometrical Models of Natural Language Semantics. Association for Computational Linguistics,",
            "year": 2011
        },
        {
            "authors": [
                "William L Hamilton",
                "Jure Leskovec",
                "Dan Jurafsky"
            ],
            "title": "Diachronic Word Embeddings Reveal Statistical Laws of Semantic Change",
            "year": 2016
        },
        {
            "authors": [
                "Gerhard Heyer",
                "Florian Holz",
                "Sven Teresniak"
            ],
            "title": "Change of Topics over Time-Tracking Topics by their Change of Meaning",
            "venue": "KDIR",
            "year": 2009
        },
        {
            "authors": [
                "Yoon Kim",
                "Yi-I Chiu",
                "Kentaro Hanaki",
                "Darshan Hegde",
                "Slav Petrov"
            ],
            "title": "Temporal analysis of language through neural language models",
            "year": 2014
        },
        {
            "authors": [
                "Vivek Kulkarni",
                "Rami Al-Rfou",
                "Bryan Perozzi",
                "Steven Skiena"
            ],
            "title": "Statistically significant detection of linguistic change",
            "venue": "In Proceedings of the 24th International Conference on World Wide Web",
            "year": 2015
        },
        {
            "authors": [
                "Omer Levy",
                "Yoav Goldberg"
            ],
            "title": "Neural word embedding as implicit matrix factorization",
            "venue": "In Advances in neural information processing systems",
            "year": 2014
        },
        {
            "authors": [
                "Omer Levy",
                "Yoav Goldberg",
                "Ido Dagan"
            ],
            "title": "Improving distributional similarity with lessons learned from word embeddings",
            "venue": "Transactions of the Association for Computational Linguistics",
            "year": 2015
        },
        {
            "authors": [
                "Xuanyi Liao",
                "Guang Cheng"
            ],
            "title": "Analysing the Semantic Change Based on Word Embedding",
            "venue": "In International Conference on Computer Processing of Oriental Languages",
            "year": 2016
        },
        {
            "authors": [
                "Kevin Lund",
                "Curt Burgess"
            ],
            "title": "Producing high-dimensional semantic spaces from lexical co-occurrence",
            "venue": "Behavior Research Methods, Instruments, & Computers 28,",
            "year": 1996
        },
        {
            "authors": [
                "Guy Merchant"
            ],
            "title": "Teenagers in cyberspace: An investigation of language use and language change in internet chatrooms",
            "venue": "Journal of Research in Reading 24,",
            "year": 2001
        },
        {
            "authors": [
                "Rada Mihalcea",
                "Vivi Nastase"
            ],
            "title": "Word epoch disambiguation: Finding how words change over time. In Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics: Short Papers-Volume 2. Association for Computational Linguistics, 259\u2013263",
            "year": 2012
        },
        {
            "authors": [
                "Tomas Mikolov",
                "Kai Chen",
                "Greg Corrado",
                "Jeffrey Dean"
            ],
            "title": "Efficient estimation of word representations in vector space",
            "year": 2013
        },
        {
            "authors": [
                "Tomas Mikolov",
                "Ilya Sutskever",
                "Kai Chen",
                "Greg S Corrado",
                "Jeff Dean"
            ],
            "title": "Distributed representations of words and phrases and their compositionality",
            "venue": "In Advances in neural information processing systems",
            "year": 2013
        },
        {
            "authors": [
                "Sunny Mitra",
                "Ritwik Mitra",
                "Martin Riedl",
                "Chris Biemann",
                "Animesh Mukherjee",
                "Pawan Goyal"
            ],
            "title": "That\u2019s sick dude!: Automatic identification of word sense change across different timescales",
            "year": 2014
        },
        {
            "authors": [
                "Jeffrey Pennington",
                "Richard Socher",
                "Christopher D Manning"
            ],
            "title": "Glove: Global Vectors for Word Representation",
            "venue": "In EMNLP,",
            "year": 2014
        },
        {
            "authors": [
                "James Petterson",
                "Wray Buntine",
                "Shravan M Narayanamurthy",
                "Tib\u00e9rio S Caetano",
                "Alex J Smola"
            ],
            "title": "Word features for latent dirichlet allocation",
            "venue": "In Advances in Neural Information Processing Systems",
            "year": 2010
        },
        {
            "authors": [
                "Michael JD Powell"
            ],
            "title": "On search directions for minimization algorithms",
            "venue": "Mathematical Programming 4,",
            "year": 1973
        },
        {
            "authors": [
                "Nikhil Rao",
                "Hsiang-Fu Yu",
                "Pradeep K Ravikumar",
                "Inderjit S Dhillon"
            ],
            "title": "Collaborative filtering with graph information: Consistency and scalable methods",
            "venue": "In Advances in neural information processing systems",
            "year": 2015
        },
        {
            "authors": [
                "Eyal Sagi",
                "Stefan Kaufmann",
                "Brady Clark"
            ],
            "title": "Tracing semantic change with latent semantic analysis. Current methods in historical semantics",
            "year": 2011
        },
        {
            "authors": [
                "Diane J Schiano",
                "Coreena P Chen",
                "Ellen Isaacs",
                "Jeremy Ginsberg",
                "Unnur Gretarsdottir",
                "Megan Huddleston"
            ],
            "title": "Teen use of messaging media",
            "venue": "In CHI\u201902 extended abstracts on Human factors in computing systems",
            "year": 2002
        },
        {
            "authors": [
                "Ruben Sipos",
                "Adith Swaminathan",
                "Pannaga Shivaswamy",
                "Thorsten Joachims"
            ],
            "title": "Temporal corpus summarization using submodular word coverage",
            "venue": "In Proceedings of the 21st ACM international conference on Information and knowledge management",
            "year": 2012
        },
        {
            "authors": [
                "Sali A Tagliamonte",
                "Derek Denis"
            ],
            "title": "Linguistic ruin? LOL! Instant messaging and teen language",
            "venue": "American speech 83,",
            "year": 2008
        },
        {
            "authors": [
                "Xuri Tang",
                "Weiguang Qu",
                "Xiaohe Chen"
            ],
            "title": "Semantic change computation: A successive approach",
            "venue": "World Wide Web 19,",
            "year": 2016
        },
        {
            "authors": [
                "Xuerui Wang",
                "Andrew McCallum"
            ],
            "title": "Topics over time: a non-Markov continuous-time model of topical trends",
            "venue": "In Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining",
            "year": 2006
        },
        {
            "authors": [
                "Derry Tanti Wijaya",
                "Reyyan Yeniterzi"
            ],
            "title": "Understanding semantic change of words over centuries",
            "venue": "In Proceedings of the 2011 international workshop on DETecting and Exploiting Cultural diversiTy on the social web",
            "year": 2011
        },
        {
            "authors": [
                "Stephen J Wright"
            ],
            "title": "Coordinate descent algorithms",
            "venue": "Mathematical Programming 151,",
            "year": 2015
        },
        {
            "authors": [
                "Hsiang-Fu Yu",
                "Cho-Jui Hsieh",
                "Si Si",
                "Inderjit Dhillon"
            ],
            "title": "Scalable coordinate descent approaches to parallel matrix factorization for recommender systems",
            "venue": "In 12th IEEE International Conference on Data Mining (ICDM)",
            "year": 2012
        },
        {
            "authors": [
                "Yating Zhang",
                "Adam Jatowt",
                "Sourav S Bhowmick",
                "Katsumi Tanaka"
            ],
            "title": "The Past is Not a Foreign Country: Detecting Semantically Similar Terms across Time",
            "venue": "IEEE Transactions on Knowledge and Data Engineering 28,",
            "year": 2016
        }
    ],
    "sections": [
        {
            "heading": "1 INTRODUCTION",
            "text": "Human language is an evolving construct, with word semantic associations changing over time. For example, apple which was traditionally only associated with fruits, is now also associated with a technology company. Similarly, the association of names of famous personalities (e.g., trump) changes with a change in their roles. For this reason, understanding and tracking word evolution is useful for time-aware knowledge extraction tasks (e.g., public sentiment analysis), and other applications in text mining. To this end, we aim to learn word embeddings with a temporal bent, for capturing time-aware meanings of words.\nWord embeddings aim to represent words with low-dimensional vectors, where words with similar semantics are geometrically\nPermission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. WSDM 2018, February 5\u20139, 2018, Marina Del Rey, CA, USA \u00a9 2018 Association for Computing Machinery. ACM ISBN 978-1-4503-5581-0/18/02. . . $15.00 https://doi.org/10.1145/3159652.3159703\ncloser (e.g. red and blue are closer than red and squirrel). Classic word embedding techniques started in the 90s and relied on statistical approaches [9, 20]. Later, neural network approaches [5], as well as recent advances such as word2vec [24, 25] and GloVE [27] have greatly improved the performance of word representation learning. However, these techniques usually do not consider temporal factors, and assume that the word is static across time.\nIn this paper, we are interested in computing time-aware embedding of words. Specifically, each word in a different time frame (e.g., years) is represented by a different vector. From these embeddings, we have a better notion of \u201cdistance\u201d (the cosine distance between word embedding vectors), and by looking at word \u201cneighborhoods\u201d (defined through this distance), we can better understand word associations as well as word meanings, as they evolve over time.\nFor instance, by locating the embeddings of personality names such as trump\u2019s closest words, we can see that he can be associated with the trajectory : real estate\u2192 television\u2192 republican. Similarly, the trajectory of apple travels from the neighborhood of strawberry, mango to that of iphone, ipad.\nA key practical issue of learning different word embeddings for different time periods is alignment. Specifically, most cost functions for training are invariant to rotations, as a byproduct, the learned embeddings across time may not be placed in the same latent space. We call this the alignment problem, which is an issue in general if embeddings are learned independently for each time slice.\nUnlike traditional methods, literature on learning temporal word embedding is relatively short: [12, 15, 19, 40]. In general, the approaches in these works follow a similar two-step pattern: first compute static word embeddings in each time slice separately, then find a way to align the word embeddings across time slices. To achieve alignment, [15] finds a linear transformation of words between any two time slices by solving a d-dimensional least squares problem of k nearest neighbor words (where d is the embedding dimension). Additionally, [40] also use the linear transformation approach between a base and target time slices, and computes the linear transformation using anchor words, which does not change meaning between the two time slices. This method requires the prior knowledge of words that are in fact static, which involves additional expert supervision. Finally, [12] imposes the transformation to be orthogonal, and solves a d-dimensional Procrustes problem between every two adjacent time slices.\nOur main novelty in this paper is to learn the word embeddings across time jointly, thus obviating the need to solve a separate alignment problem. Specifically, we propose to learn temporal embeddings in all time slices concurrently, and apply regularization\nar X\niv :1\n70 3.\n00 60\n7v 2\n[ cs\n.C L\n] 1\n3 Fe\nb 20\n18\nterms to smooth embedding changes across time. There are three main advantages to this proposed joint modeling approach:\n\u2022 First, this can be seen as an improvement over traditional, \u201csingle-time\u201d methods such as word2vec. \u2022 Second, our experimental results suggest that enforcing alignment through regularization yields better results than two-step methods. \u2022 Third, we can share information across time slices for the majority of vocabulary. As a result, our method is robust against data sparsity \u2013 we can afford to have time slices where some words are rarely present, or even missing. This is a crucial practical advantage offered by our method.\nSince our model requires embeddings across all time slices to be learned at the same time, it can be computationally challenging. To mitigate this, we employ a block coordinate descent method which can handle large vocabulary sizes through decomposition.\nIn experimental study, we learn temporal embeddings of words from The New York Times articles between 1990 and 2016. In contrast, previous temporal word embedding works have focused on time-stamped novels and magazine collections (such as Google N-Gram and COHA). However, news corpora are naturally advantageous to studying language evolution through the lens of current events. In addition, it allows us to work with a corpus that maintains consistency in narrative style and grammar, as opposed to Facebook and Twitter posts. For evaluating our embeddings, we develop both qualitative and quantitative metrics.\nQualitatively, we illustrate the advantages of temporal embeddings for evolving semantics discovery by 1) plotting word vector trajectories to find evolving meanings and associations, 2) using alignment through time to identify associated words across time, and 3) looking at norms as a representative of concept popularity.\nQuantitatively, we first use semantic topics extracted from Sections (e.g., Technology,World News) of news articles as ground truth to evaluate the semantic accuracy of temporal embeddings. Additionally, we provide two testsets to evaluate cross-time alignment quality: one consists of known changing roles (e.g., U.S. presidents), determined objectively, and one of concept replacements (e.g., compact disk to mp3), determined more subjectively. The experimental results show the effectiveness of our proposed model and demonstrate substantial improvements against baseline methods.\nThe rest of this paper is organized as follows. In Section 2, we present the proposed model for temporal embedding learning, and in Section 3, we describe a scalable algorithm to train it. In Section 4, we describe the news corpus dataset and setup details of experiments. We perform qualitative evaluations in Section 5. Finally, we quantitatively compare our embeddings against other state-of-the-art temporal embeddings in Section 6."
        },
        {
            "heading": "2 METHODOLOGY",
            "text": "We now set up our temporal word embedding model. We consider a text corpus collected across time. These kinds of corpora such as news article collections with published dates or social media discussion with time-stamps are ubiquitous. Formally, we denote by D = (D1, . . . ,DT ) our text corpus where each Dt , t = 1, . . .T , is the corpus of all documents in the t-th time slice. Without loss of generality, we assume the time slices are ordered chronologically.\nThe length of these time slices can be on the order of months, years, or decades. Moreover, the length of all the time slices could be different. We consider an overall vocabulary V = {w1, . . . ,wV } of size V . We note that the vocabulary V consists of words present in the corpus at any point in time, and thus it is possible for some w \u2208 V to not appear at all in some Dt . This includes emerging words and dying words that are typical in real-world news corpora.\nGiven such a time-tagged corpus, our goal is to find a dense, low-dimensional vector representation uw (t) \u2208 Rd , d \u226a V for each word w \u2208 V and each time period t = 1, . . . ,T . We denote by uw the static embedding for wordw (for example, learned via word2vec), and d is the embedding dimension (typically 50 \u2264 d \u2264 200). Compactly, we denote byU (t) (of size V \u00d7 d) the embedding matrix of all words whose i-th row corresponds to the embedding vector of i-th word uwi (t)."
        },
        {
            "heading": "2.1 Time-agnostic word embeddings",
            "text": "A fundamental observation in static word embedding literature is that semantically similar words often have similar neighboring words in a corpus [10]. This is the idea behind learning dense low-dimensional word representations both traditionally [5, 9, 20] and recently [24, 27]. In several of these methods, the neighboring structure is captured by the frequencies by which pairs of words co-occur within a small local window.\nWe compute the V \u00d7 V pointwise mutual information (PMI) matrix specific to a corpus D, whosew, c-th entry is:\nPMI(D,L)w,c = log ( #(w, c) \u00b7 |D| #(w) \u00b7 #(c) ) , (1)\nwhere #(w, c) counts the number of times that words w and c cooccur within a window of size L in corpusD , and #(w), #(c) counts the number of occurrences of words w and c in D. |D| is total number of word tokens in the corpus. L is typically around 5 to 10; we set L = 5 throughout this paper.\nThe key idea behind both word2vec [24] and GloVE [27] is to find embedding vectors uw and uc such that for anyw, c combination,\nuTwuc \u2248 PMI(D,L)w,c , (2) where each uw has length d \u226a V . While both [24] and [27] offer highly scalable algorithms such as negative sampling to do this implicitly, [17] shows that these are equivalent to low-rank factorization of PMI(D,L) 1. Our approach is primarily motivated by this observation. We note that though the PMI matrices are of size V \u00d7V , in real-world datasets it is typically sparse as observed in [27], for which efficient factorization methods exist [39]."
        },
        {
            "heading": "2.2 Temporal word embeddings",
            "text": "A natural extension of the static word embedding intuition is to use this matrix factorization technique on each time sliceDt separately. Specifically, for each time slice t , we define the w, c-th entry of positive PMI matrix (PPMI(t ,L)) as 2\nPPMI(t ,L)w,c = max{PMI(Dt ,L)w,c , 0}. := Y (t). (3) 1with a constant shift that can be zero. 2We consider the PPMI rather than the PMI because when #(w,c )\u00b7|D|#(w )\u00b7#(c ) is very small, taking the log results in large negative values and is thus extremely unstable. Since for most significantly related pairsw and c the log argument is > 1, thresholding it in this way will not affect the solution significantly, but will offer much better numerical stability. This approach is not unique to us; [17] also factorizes the PPMI.\nThe temporal word embeddingsU (t) must satisfy U (t)U (t)T \u2248 PPMI(t ,L). (4)\nOne way to find such U (t) is for each t , factorizing PPMI(t ,L) by either using an eigenvalue method or solving a matrix factorization problem iteratively. The Alignment Problem: Imposing (4) is not sufficient for a unique embedding, since the solutions are invariant under rotation; that is, for any d \u00d7 d orthogonal matrix R, we have the embedding U\u0302 (t) = U (t)R , the approximation error in (4) is the same since\nU\u0302 (t)U\u0302 (t)T = U (t)RRTU (t)T = U (t)U (t)T . For this reason, it is important to enforce alignment; if wordw did not semantically shift from t to t + 1, then we additionally require uw (t) \u2248 uw (t + 1).\nTo do this, [12, 15] propose two-step procedures; first, they factorize each Y (t) separately, and afterwards enforce alignment using local linear mapping [15] or solving an orthogonal procrustes problem [12]. Note that in these methods, aligningU (t) toU (t \u2032) assumes that we desire U (t) \u2248 U (t \u2032). If we only pick t \u2032 = t + 1 (as done in [12]), this assumption is reasonable because between any two years, only a few words experience semantic shift, emergence, or death. However, this becomes problematic ifU (t) was a result of a time period with extremely sparse data (and hence poorly learned); all subsequent year embeddings and previous year embeddings will be poorly aligned."
        },
        {
            "heading": "2.3 Our model",
            "text": "We propose finding temporal word embeddings as the solution of the following joint optimization problem:\nmin U (1), . . .,U (T ) 1 2 T\u2211 t=1 \u2225Y (t ) \u2212U (t )U (t )T \u22252F (5)\n+ \u03bb 2 T\u2211 t=1 \u2225U (t ) \u22252F + \u03c4 2 T\u2211 t=2 \u2225U (t \u2212 1) \u2212U (t ) \u22252F ,\nwhere Y (t) = PPMI(t ,L) and \u03bb,\u03c4 > 0. Here the penalty term \u2225U (t)\u22252F enforces the low-rank data-fidelity as widely adopted in previous literature. The key smoothing term \u2225U (t \u2212 1) \u2212 U (t)\u22252F encourages the word embeddings to be aligned. The parameter \u03c4 controls how fast we allow the embeddings to change; \u03c4 = 0 enforces no alignment, and picking \u03c4 \u2192 \u221e converges to a static embedding with U (1) = U (2) = . . . = U (T ). Note that the methods of [12, 15] can be viewed as suboptimal solutions of (5), in that they optimize for each term separately. For one, while the strategies in [15] and [12] enforce alignment pairwise, we enforce alignment across all time slices; that is, the final aligned solution U (t) is influenced by not only U (t \u2212 1) and U (t + 1), but every other embedding as well. This avoids the propagation of alignment errors caused by a specific time frame\u2019s subsampling. Additionally, consider an extreme case in which wordw is absent from Dt but has similar meaning in both t \u2212 1 and t + 1. Directly applying any matrix factorization technique to each time point would enforce uw (t) \u2248 0. However, for the right choice of \u03c4 , the solution uw (t) to (5) will be close to uw (t \u2212 1) and uw (t + 1). Overall, our method achieves high fidelity embeddings with a much smaller corpus, and in particular, in Section 6, we demonstrate that our embeddings are robust against sudden undersampling of specific time slices."
        },
        {
            "heading": "3 OPTIMIZATION",
            "text": "Akey challenge in solving (5) is that for largeV andT , onemight not be able to fit all the PPMI matrices Y (1), . . . ,Y (T ) in memory, even though Y (t) is sparse. Therefore, for scalability, an obvious solution is to first decompose the objective across time, using alternating minimization to solve forU (t) at each step:\nmin U (t ) f (U (t ))\ufe37 \ufe38\ufe38 \ufe37 1 2 \u2225Y (t ) \u2212U (t )U (t )T \u22252F + \u03bb 2 \u2225U (t ) \u22252F (6)\n+ \u03c4 2 ( \u2225U (t \u2212 1) \u2212U (t ) \u22252F + \u2225U (t ) \u2212U (t + 1) \u2225 2 F ) for a specific t . Note that f (U (t)) is quartic inU (t), and thus even if we only solve for a fixed t , (6) cannot be minimized analytically. Thus, our only option is to solve (6) iteratively using a fast firstorder method such as gradient descent. The gradient of the first term alone is given by\n\u2207f (U (t)) = \u22122Y (t)U (t) + 2U (t)U (t)TU (t). (7) Each gradient computation is of the order O(nnz(Y (t))d + d2V ) (which is then nested in iteratively optimizing U (t) for each t ).3 In practical applications,V is in the order of ten-thousands to hundredthousands, and T is in the order of tens to hundreds.\nLet us instead look at a slightly relaxed problem of minimizing\nmin U (t ),W (t ) 1 2 T\u2211 t=1 \u2225Y (t ) \u2212U (t )W (t )T \u22252F + \u03b3 2 T\u2211 t=1 \u2225U (t ) \u2212W (t ) \u22252F (8)\n+ \u03bb 2 T\u2211 t=1 \u2225U (t ) \u22252F + \u03c4 2 T\u2211 t=2 \u2225U (t \u2212 1) \u2212U (t ) \u22252F\n+ \u03bb 2 T\u2211 t=1 \u2225W (t ) \u22252F + \u03c4 2 T\u2211 t=2 \u2225W (t \u2212 1) \u2212W (t ) \u22252F ,\nwhere variables W (t), t = 1, . . . ,T are introduced to break the symmetry of factorizing Y (t). Now, minimizing for eachU (t) (and equivalentlyW (t)) is just the solution of a ridge regression problem, and can be solved in one step by setting the gradient of the objective of (8) to 0, i.e.U (t)A = B where\nA =W (t)TW (t) + (\u03b3 + \u03bb + 2\u03c4 )I , B = Y (t)W (t) + \u03b3W (t)+\u03c4 (U (t \u2212 1) +U (t + 1))\nfor t = 2, . . . ,T \u2212 1, and constants adjusted for t = 0,T . Forming A and B requires O(Vd2 + nnz(Y (t))d), and solving U (t)A = B can be done in O(d3) computations, in one step. This can be further decomposed to row-by-row blocks of size b, by minimizing over a row block of U (t) at a time, which reduces the complexity of forming A and B to O(bd2 + nnz(Y (t)[: b, :])d), i.e.independent of V . This allows scaling for very large V , as only one row block of Y (t) must be loaded at a time.\nBlock coordinate descent vs. stochastic gradient descent: Themethod described here is commonly referred to as block coordinate descent (BCD) because it minimizes with respect to a single block (U (t) or W (t)) at a time, and the block size can be made even smaller (a few rows of U (t) orW (t)) to maintain scalability. The main appeal of BCD is scalability [39]; however, a main drawback is lack of convergence guarantees, even in the case of convex optimization [29]. 3nnz(\u00b7) is the number of nonzeros in the matrix.\nIn practice, however, BCD is highly successful and has been used in many applications [38]. Another choice of optimization is stochastic gradient descent (SGD), which decomposes the objective as a sum of smaller terms. For example, the first term of (8) can be written as a sum of terms, each using only one row of Y (t):\nf (U (t)) = V\u2211 i=1 \u2225Y (t)[i, :] \u2212 ui (t)TW (t)\u22252F . (9)\nThe complexity at first glance is smaller than that of BCD; however, SGD comes with the well-documented issues of slow progress and hard-to-tune step sizes, and in practice, can be much slower for matrix factorization applications [30, 39]. However, we point out that the choice of the optimization method is agnostic to our model; anything that successfully solves (5) should lead to an equally successful embedding."
        },
        {
            "heading": "4 EXPERIMENTAL DATASET AND SETUP",
            "text": "In this section we describe the specific procedure used to generate embeddings for the next two sections. News article dataset: First, we crawl a total of 99,872 articles from the New York Times, published between January 1990 and July 2016.4 In addition to the text, we also collected metadata including title, author, release date, and section label (e.g., Business, Sports, Technology); in total, there are 59 such sections. We use yearly time slices, dividing the corpus into T = 27 partitions. After removing rare words (fewer than 200 occurrences in all articles across time) and stop words, our vocabulary consists of V = 20, 936 unique words. We then compute a co-occurrence matrix for each time slice t with a window size L = 5, which is then used to compute the PPMI matrix as outlined in (3). All the embedding methods that we compared against are trained on this same dataset. Training details for our algorithm: We perform a grid search to find the best regularization and optimization parameters. As a result of our search, we obtain \u03bb = 10, \u03c4 = \u03b3 = 50, and run for 5 epochs (5 complete pass over all time slices, and all rows and columns ofY (t)). Interestingly, setting \u03bb = 0 also yielded good results, but required more iterations to converge. The block variable is one matrix (U (t) or V (t) for a specific t ). Distance metric: All distances between two words are calculated by the cosine similarity between embedding vectors: 4The data is available at: https://sites.google.com/site/zijunyaorutgers/.\nsimilarity(a,b) = cosine(ua ,ub ) = uTaub\n\u2225ua \u22252 \u00b7 \u2225ub \u22252 , (10)\nwhere ua and ub are the embeddings of words a and b."
        },
        {
            "heading": "5 QUALITATIVE EVALUATION",
            "text": "The embeddings we learn reveal interesting patterns in the shift of word semantics, cross-time semantic analogy, and popularity trends of concepts from the news corpus."
        },
        {
            "heading": "5.1 Trajectory visualization",
            "text": "The trajectory of a word in the (properly aligned) embedded space provides tools to understand the shift in meanings of words over time. This can help broader applications, such as capturing and quantifying linguistic evolution, characterizing brands and people, and analyzing emerging association between certain words.\nFigure 1 shows the trajectories of a set of example words. We plot the 2-D t-SNE projection of each word\u2019s temporal embedding across time. We also plot the closest words to the target word from each time slice. We pick four words of interest: apple and amazon as emerging corporate names while originally referring to a fruit and a rainforest, and obama and trump as people with changing professional roles.\nIn all cases, the embeddings illustrate significant semantic shifts of the words of interest during this 27-year time frame. We see apple shift from a fruit and dessert ingredient to space of technology. Interestingly, there is a spike in 1994 in the trajectory, when Apple led a short tide of discussion because of the replacement of the CEO and a collaboration with IBM; then the association shifted back to neighborhood of fruit and dessert until the recovery by Steve Jobs in early 2000s. Similarly, amazon shifts from a forest to an e-commerce company, finally landing in 2016 as a content creation and online-streaming provider due to the popularity of its Prime Video service. The US president names, obama and trump, are most telling, shifting from their pre-presidential lives (Obama as a civil rights attorney and university professor; Trump as a real estate developer and TV celebrity) to the political sphere. Overall, Figure 1 demonstrates that first, our temporal word embeddings can well capture the semantic shifts of words across time, and second, our model provides high alignment quality in that same-meaning words across different years have geometrically close embeddings, without having to solve a separate optimization problem for alignment."
        },
        {
            "heading": "5.2 Equivalence searching",
            "text": "Another key advantage of word alignment is the ability to find conceptually \u201cequivalent\u201d items or people over time. We provide examples in the field of technology, official roles, and sports professionals. In this type of test, we create a query consisting of a word-year pair that is particularly the representative of that word in that year, and look for other word-year pairs in its vicinity, for different years.\nTable 1 lists the closest words (top-1) of each year to the query vector. For visualization purpose we lump semantically similar words together. For example, the first column shows that iphone in 2012 is closely associated with smartphones in recent years, but is close to words such as desktop and macintosh in the 90\u2019s; interestingly, telephone never appears, suggesting the iPhone serves people more as a portable computer than a calling device. As another example, by looking at the trajectory of twitter, we see the evolution of news sources, from TV & radio news broadcasts in the 90s to chatrooms, websites, and emails in the early 2000s, blogs in the late 2000s, and finally tweets today. The last example is fairly obvious; mp3 represents the main form of which music is consumed in 2000, replacing disk and stereo in 1990s ( cassette also appears in top-3) and is later replaced by online streaming. We can see a one-year spike of Napster which was shut down because of copyright infringement5, and later a new streaming service - iTunes.\nNext, we use embeddings to identify people in political roles. Table 2 attempts to discover who is the U.S. president6 andNewYork City mayor7 of the time, using as query obama in 2016 and blasio in 2015. For president, only the closest word from each year is listed, and is always correct (accounting for the election years). For mayor, the top-1 closet word is shown unless it is mayor, in which case the second word is shown. We can see that both the roles of US president and NYC mayor have been well searched for different\n5Napster ended its streaming service in 2001, so our equivalence is captured 2 years late; this delay could be because though the event happened in 2001, the legal ramifications were analyzed heavily in subsequent years. 6All data was scraped about half a year before Donald Trump was elected as U.S. president in 2016. 7We intentionally choose New York City because it is the most heavily discussed city in the New York Times."
        },
        {
            "heading": "2015 (role as mayor of New York City (NYC)). The stars indicate incorrect answers.",
            "text": "persons in their terms of service. We see that the embedding for the President is consistent, and for the most part, so is that of the mayor of NYC. In 2011, cuomo is also partially relevant since he was the governor of NY state. We did not find any relevant words in query NYC mayor in year 2006.\nFinally, we search for equivalences in sports, repeating the experiment for the ATP rank 1 male tennis player as shown in Table 3. In the case of president and mayor, we are heavily assisted by the fact that they are commonly referred to by a title: \u201cPresident Obama\u201d and \u201cMayor de Blasio\u201d. Tennis champions, on the other hand, are not referred by titles. Still, a surprising number of correct champions appear as the closest words, and all the names are those of famous tennis players for the given time period. A more exhaustive empirical study of alignment quality is provided in Section 6."
        },
        {
            "heading": "5.3 Popularity determination",
            "text": "It has often been observed that word embeddings computed by factorizing PMI matrices have norms that grow with word frequency [2, 27]. These word vector norms across time can be viewed as a\ntime series for detecting the trending concepts (e.g., sudden semantic shifts or emergences) behind words, with more robustness than word frequency.\nFigures 2 and 3 illustrate the comparison between embedding norm and frequency for determining concept popularity per year, determined by key words in the New York Times corpus. Generally, comparing to frequencies which are much more sporadic and noisy, we note that the norm of our embeddings encourages smoothness and normalization while being indicative of the periods when the corresponding words were making news rounds. In Figure 2, the embedding norms display nearly even 4-year humps corresponding to each president\u2019s term. In every term, the name of each current president becomes a trending concept which plays an important role in the information structure at the time. Two interesting observations can be gleaned. First, since Hillary Clinton continuously served as Secretary of State during 2009-2013, the popularity of clinton was preserved; however it was still not as popular as president obama. Second, because of the presidential campaign, trump in 2016 has a rising popularity that greatly surpasses that of his former role as a business man, and eventually surpasses his opponent clinton in terms of news coverage.\nIn Figure 3, we can see smooth rises and falls of temporary phenomena (the enron scandal and qaeda rises). For qaeda, we see that there is a jump in 2001, and then it remains steady with a small decline. In contrast, enron shows a sharper decline, as despite its temporal hype, it did not linger in the news long. Note also the stability of using norms to track popularity over frequency, which spikes for enron above qaeda, although 9/11 was far more news-prevalent than the corporation\u2019s scandalous decline. For the basketball star pippen, although his publicity (e.g., frequency) was relatively fewer than business terms, his popularity is still recognized by the enhancement in vector norm. For another term isis, we can see that it begins to replace qaeda as the \u201ctrending terrorist organization\u201d in news media."
        },
        {
            "heading": "6 QUANTITATIVE EVALUATION",
            "text": "In this section, we empirically evaluate our proposed Dynamic Word2Vec model (DW2V) against other temporal word embedding methods.8 In all cases, we set the embedding dimension to d = 50. We have the following baselines: \u2022 Static-Word2Vec (SW2V): the standard word2vec embeddings [25], trained on the entire corpus and ignoring time information. \u2022 Transformed-Word2Vec (TW2V) [15]: the embeddings U (t) are first trained separately by factorizing PPMI matrix for each year t , and then transformed by optimizing a linear transformation matrix which minimizes the distance between uw (t) and uw (t \u2032) for the k = 30 nearest words\u2019 embeddings to the querying wordw . \u2022 Aligned-Word2Vec (AW2V) [12]: the embeddingsU (t) are first trained by factorizing the PPMI matrix for each year t , and then aligned by searching for the best othornormal transformation betweenU (t) andU (t + 1)."
        },
        {
            "heading": "6.1 Semantic similarity",
            "text": "One of the most important properties of a word embedding is how accurately it carries the meaning of words. Therefore, we develop a test to see if words can be categorized by meaning based on embeddings. The news articles we collected are tagged with their \u201csections\u201d such as Business, Sports. This information can be used to determine temporal word meanings. It is important to note that this information is not used in the word embedding learning. For example, we see that amazon occurs 41% of the time in World in 1995, associating strongly with the rainforest (not part of the USA), and 50% of the time in Technology in 2012, associating strongly with e-commerce. We thus use this to establish a ground truth of word category, by identifying words in years that are exceptionally numerous in one particular news section. That is, if a word is extremely frequent in a particular section, we associate that word with that section and use that as ground truth. We select the 11\n8The testsets are available at: https://sites.google.com/site/zijunyaorutgers/.\nmost popular and discriminative sections9 of the New York Times, and for each section s and each wordw in year t , we compute its percentage p of occurrences in each section. To avoid duplicated word-time-section < w, t , s > triplets, for a particularw and s we only keep the year of the largest strength, and additionally filter away any triplet with strength less than p = 35%. Note that a random uniform distribution of words would result in it appearing about 9% of the time in each section, and our threshold is about 4 times that quantity. We do this to say with sufficient confidence that such associations can be treated as ground truth.\nTo limit the size differences among categories, for every section s with more than 200 qualified triplets, we keep the top-200 words by strength. In total, this results in 1888 triplets across 11 sections, where every word-year pair is strongly associated with a section as its true category.\nWe then apply spherical k-means, which uses cosine similarity between embeddings as the distance function for clustering, with K = 10, 15, and 20 clusters. We use two metrics to evaluate the clustering results: \u2022 Normalized Mutual Information (NMI), defined as\nNMI (L,C) = I (L;C)[H (L) + H (C)]/2 , (11)\nwhere L represents the set of labels and C the set of clusters. I (L;C) denotes the sum of mutual information between any cluster ci and any label lj , and H (L) and H (C) the entropy for labels and clusters, respectively. This metric evaluates the purity of clustering results from an information-theoretic perspective.\n\u2022 F\u03b2 -measure (F\u03b2 ), defined as\nF\u03b2 = (\u03b22 + 1)PR \u03b22P + R , (12)\nwhere P = T PT P+F P denotes the precision and R = T P T P+FN denotes the recall. (TP/FP = true/false positive, TN/FN = true/false negative.) As an alternative method to evaluate clustering, we can view every pair of words as a series of decisions. Pick any two (w, t) pairs. If they are clustered together and additionally have the same section label, this is a correct decision; otherwise, the clustering performed a wrong decision. The metric F\u03b2 measures accuracy as the (\u03b2-weighted) harmonic mean of the precision and\n9Arts, Business, Fashion & Style, Health, Home & Garden, Real Estate, Science, Sports, Technology, U.S., World.\nTables 4 and 5 show the clustering evaluation. We can see that our proposed DW2V consistently outperforms other baselines for all values of K . These results show two advantages. First, the word semantic shift has been captured by the temporal embeddings (for example, by correlating correctly with the section label of amazon, which changes from World to Technology). Second, since embeddings of words of all years are used for clustering, a good clustering result indicates good alignment across years. We can also see that AW2V also performs well, as it also applies alignment between adjacent time slices for all words. However, TW2V does not perform well as others, suggesting that aligning locally (only a few words) is not sufficient for high alignment quality."
        },
        {
            "heading": "6.2 Alignment quality",
            "text": "We now more directly evaluate alignment quality, i.e. the property that the semantic distribution in temporal embedding space should be consistent over time. For example, if a word such as estate or republican does not change much throughout time, its embedding should remain relatively constant for different t . By the same logic, if a word such as trump does change association throughout time, its embedding should reflect this shift by moving from one position to another (e.g., estate \u2192 republican). We saw this in the previous section for static words like president or mayor; they do not change meanings, though they are accompanied by names that shift to them every few years.\nTo examine the quality of embedding alignment, we create a task to query equivalences across years. For example, given obama-2012, we want to query its equivalent word in 2002. As we know obama is the U.S. president in 2012; its equivalent in 2002 is bush, who was the U.S. president at that time. In this way, we create two testsets.\nThe first one is based on publicly recorded knowledge that for each year lists different names for a particular role, such as U.S. president, U.K. prime minister, NFL superbowl champion team, and so on. For each year (e.g., 2012), we put its word (e.g., obama) into the embedding set of every other year for query its equivalence in top closest words.\nThe second test is human-generated, for exploring more interesting concepts like emerging technologies, brands and major events (e.g., disease outbreaks and financial crisis). For constructing the test word pairs, we first select emerging terms which have not been popularized before 1994, then query their well known precedents during 1990 to 1994 (e.g., app-2012 can correspond to software-1990). For emerging word (e.g., app) we extract its most popular year (e.g., 2012) with maximum frequency, and put its embedding into each year from 1990 to 1994 for querying its precedent (e.g., software). Each word-year pair now forms a query and an answer; in total we have N = 11028 such pairs in the first testset, and N = 445 in the second one.\nWe use two metrics to evaluate the performance.\n\u2022 For each test i , the correct answer word is identified at position rank[i] for closest words. The Mean Reciprocal Rank (MRR) is defined as\nMRR = 1 N N\u2211 i=1 1 rank[i] , (13)\nwhere 1rank[i] = 0 if the correct answer is not found in the top-10. Higher MRR means that correct answers appear more closely and unambiguously with the query embedding. \u2022 Additionally, for test i consisting of a query and target word-year pair, consider the closest K words to the query embedding in the target year. If the target word is among these K words, then the Precision@K for test i (denoted P@K[i]) is 1; else, it is 0. Then the Mean Precision@K is defined as\nMP@K = 1 N N\u2211 i=1 (P@K[i]). (14)\nHigher precision indicates a better ability to acquire correct answers using close embeddings.\nTables 6 and 7 show the evaluation of the alignment test. We can see that our proposed method outperforms others and shows good alignment quality, sometimes by an order of magnitude. Comparing to testset 1 which has a large amount of queries with considerable short range alignments (e.g., from 2012 to 2013), the testset 2 mostly consists of fewer long range alignments (e.g., 2012 to 1990). Therefore, we can see that the performance of SW2V is relatively good in testset 1 since the semantic distribution does not change much in short ranges which makes this test favorable to static embeddings. However, SW2V degrades sharply in testset 2, where the long range alignment is needed more. For TW2V, since it does an individual year-to-year (e.g., 2012-to-1990) transformation by assuming that the local structure of target words does not shift, its overall alignment quality of whole embedding sets is not satisfied in testset 1 with many alignments. However, it does similarly to AW2V in testset 2 because its individual year-to-year transformation makes it more capable for long range alignment. AW2V, which enforces alignment for whole embedding sets between adjacent time slices, provides quite reliable performance. However, its alignment quality is still below ours, suggesting that their two-step approach is not as successful in enforcing global alignment."
        },
        {
            "heading": "6.3 Robustness",
            "text": "Finally, we explore the robustness of our embedding model against subsampling of words for select years. Table 8 shows the result of the alignment task (testset 1) for vectors computed from subsampled co-occurrence matrices for every three years from 1991 to 2015. To subsample, each elementCi j is replaced with a randomly drawn integer C\u0302i j from a Binomial distribution for rate r and n = Ci j trials; this simulates the number of co-occurrences measured if they had been missed with probability r . The new frequency f\u0302 is then renormalized so that f\u0302i/fi = \u2211 j C\u0302i j/ \u2211 j Ci j . Listed are the alignment test results for r = 1, 0.1, 0.01, and 0.001 compared against [12], which otherwise performs comparably with our embedding. Unsurprisingly, for extreme attacks (leaving only 1% or 0.1% co-occurrences), the performance of [12] degrades sharply; however, because of our joint optimization approach, the performance of our embeddings seems to hold steady."
        },
        {
            "heading": "7 RELATEDWORK",
            "text": "Temporal effects in natural language processing: There are several studies that investigate the temporal features of natural language. Some are using topicmodeling on news corpus [1] or timestamped scientific journals [6, 33, 36] to find spikes and emergences of themes and viewpoints. Simpler word count features are used in [7, 13, 22] to find hotly discussed concepts and cultural phenomena, in [21, 32, 34] to analyze teen behavior in chatrooms, and in [13] to discover incidents of influenza. Word embedding learning: The idea of word embeddings has existed at least since the 90s, with vectors computed as rows of the co-occurrence [20], through matrix factorization [9], and most famously through deep neural networks [5, 8]. They have recently been repopularized with the success of low-dimensional embeddings like GloVE [27] and word2vec [24, 25], which have been shown to greatly improve the performance in key NLP tasks, like document clustering [16], LDA [28], and word similarity [3, 18]. There is a close connection between these recent methods and our proposed method, in that both word2vec and GloVE have been shown to be equivalent to matrix factorization of a shifted PMI matrix [17]. Temporal word embeddings and evaluations: While NLP tools have been used frequently to discover emerging wordmeanings and societal trends, many of them rely on changes in the co-occurrence or PMI matrix [11, 13, 22, 26, 37], changes in parts of speech, [23] or other statistical methods [4, 15, 35]. A few works use lowdimensional word embeddings, but either do no smoothing [31], or\nuse two-step methods [12, 14, 15]. Semantic shift and emergence are also evaluated in many different ways. In [31], word shifts are identified by tracking the mean angle between a word and its neighbors. One of the several tests in [15] create synthetic data with injected semantic shifts, and quantifies the accuracy of capturing them using various time series metrics. In [23], the authors show the semantic meaningfulness of key lexical features by using them to predict the time-stamp of a particular phrase. And, [26] makes the connection that emergent meanings usually coexist with previous meanings, and use dynamic embeddings to discover and identify multisenses, evaluated against WordNet. Primarily, temporal word embeddings are evaluated against human-created databases of known semantically shifted words [12, 15, 35] which is our approach as well."
        },
        {
            "heading": "8 CONCLUSION",
            "text": "We studied the evolution of word semantics as a dynamic word embedding learning problem. We proposed a model to learn timeaware word embeddings and used it to dynamically mine text corpora. Our proposed method simultaneously learns the embeddings and aligns them across time, and has several benefits: higher interpretability for embeddings, better quality with less data, and more reliable alignment for across-time querying. We solved the resulting optimization problem using a scalable block coordinate descent method. We designed qualitative and quantitative methods to evaluate temporal embeddings for evolving word semantics, and showed that our dynamic embedding method performs favorably against other temporal embedding approaches."
        }
    ],
    "title": "Dynamic Word Embeddings for Evolving Semantic Discovery",
    "year": 2018
}