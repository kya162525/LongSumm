{
    "abstractText": "We describe a method for learning word embeddings with data-dependent dimensionality. Our Stochastic Dimensionality Skip-Gram (SD-SG) and Stochastic Dimensionality Continuous Bag-of-Words (SD-CBOW) are nonparametric analogs of Mikolov et al.\u2019s (2013) well-known \u2018word2vec\u2019 models. Vector dimensionality is made dynamic by employing techniques used by C\u00f4t\u00e9 & Larochelle (2016) to define an RBM with an infinite number of hidden units. We show qualitatively and quantitatively that the SD-SG and SD-CBOW are competitive with their fixed-dimension counterparts while providing a distribution over embedding dimensionalities, which offers a window into how semantics distribute across dimensions.",
    "authors": [
        {
            "affiliations": [],
            "name": "Eric Nalisnick"
        },
        {
            "affiliations": [],
            "name": "Sachin Ravi"
        }
    ],
    "id": "SP:b91d1b387c42515edb223918cb74a02c14b057b7",
    "references": [
        {
            "authors": [
                "Sergey Bartunov",
                "Dmitry Kondrashkin",
                "Anton Osokin",
                "Dmitry Vetrov."
            ],
            "title": "Breaking sticks and ambiguities with adaptive skip-gram",
            "venue": "International Conference on Artificial Intelligence and Statistics .",
            "year": 2016
        },
        {
            "authors": [
                "Yoshua Bengio",
                "R\u00e9jean Ducharme",
                "Pascal Vincent",
                "Christian Janvin."
            ],
            "title": "A neural probabilistic language model",
            "venue": "The Journal of Machine Learning Research 3:1137\u20131155.",
            "year": 2003
        },
        {
            "authors": [
                "Elia Bruni",
                "Nam Khanh Tran",
                "Marco Baroni."
            ],
            "title": "Multimodal distributional semantics",
            "venue": "J. Artif. Int. Res. 49(1):1\u201347.",
            "year": 2014
        },
        {
            "authors": [
                "Marc-Alexandre C\u00f4t\u00e9",
                "Hugo Larochelle."
            ],
            "title": "An infinite restricted boltzmann machine",
            "venue": "Neural computation .",
            "year": 2016
        },
        {
            "authors": [
                "Lev Finkelstein",
                "Evgeniy Gabrilovich",
                "Yossi Matias",
                "Ehud Rivlin",
                "Zach Solan",
                "Gadi Wolfman",
                "Eytan Ruppin."
            ],
            "title": "Placing search in context: The concept revisited",
            "venue": "Proceedings of the 10th International Conference onWorldWideWeb.WWW\u201901,",
            "year": 2001
        },
        {
            "authors": [
                "Eric H. Huang",
                "Richard Socher",
                "Christopher D. Manning",
                "Andrew Y. Ng."
            ],
            "title": "Improving word representations via global context and multiple word prototypes",
            "venue": "Annual Meeting of the Association for Computational Linguistics (ACL).",
            "year": 2012
        },
        {
            "authors": [
                "Tomas Mikolov",
                "Ilya Sutskever",
                "Kai Chen",
                "Greg S Corrado",
                "Jeff Dean."
            ],
            "title": "Distributed representations of words and phrases and their compositionality",
            "venue": "Advances in neural information processing systems. pages 3111\u20133119.",
            "year": 2013
        },
        {
            "authors": [
                "Andriy Mnih",
                "Geoffrey E Hinton."
            ],
            "title": "A scalable hierarchical distributed language model",
            "venue": "Advances in neural information processing systems. pages 1081\u20131088.",
            "year": 2009
        },
        {
            "authors": [
                "Arvind Neelakantan",
                "Jeevan Shankar",
                "Alexandre Passos",
                "Andrew McCallum."
            ],
            "title": "Efficient nonparametric estimation of multiple embeddings per word in vector space",
            "venue": "Conference onEmpiricalMethods in Natural Language Processing .",
            "year": 2014
        },
        {
            "authors": [
                "Joseph Reisinger",
                "Raymond J Mooney."
            ],
            "title": "Multiprototype vector-space models of word meaning",
            "venue": "Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the Association for Computational Linguistics. Association",
            "year": 2010
        },
        {
            "authors": [
                "Fei Tian",
                "Hanjun Dai",
                "Jiang Bian",
                "Bin Gao",
                "Rui Zhang",
                "Enhong Chen",
                "Tie-Yan Liu."
            ],
            "title": "A probabilistic model for learning multi-prototype word embeddings",
            "venue": "Proceedings of COLING. pages 151\u2013160.",
            "year": 2014
        },
        {
            "authors": [
                "Joseph Turian",
                "Lev Ratinov",
                "Yoshua Bengio."
            ],
            "title": "Word representations: a simple and general method for semi-supervised learning",
            "venue": "Proceedings of the 48th annual meeting of the association for computational linguistics. Association for Computational",
            "year": 2010
        },
        {
            "authors": [
                "Luke Vilnis",
                "Andrew McCallum."
            ],
            "title": "Word representations via gaussian embedding",
            "venue": "International Conference on Learning Representations .",
            "year": 2015
        }
    ],
    "sections": [
        {
            "heading": "1 Introduction",
            "text": "WordEmbeddings (WEs) (Bengio et al., 2003;Mnih and Hinton, 2009; Turian et al., 2010;Mikolov et al., 2013) have received wide-spread attention for their ability to capture surprisingly detailed semantic information without supervision. However, despite their success, WEs still have deficiencies. One flaw is that the embedding dimensionality must be set by the user and thus requires some form of cross-validation be performed. Yet, this issue is not just one of implementation. Words naturally vary in their semantic complexity, and since vector dimensionality is standardized across the vocabulary, it is difficult to allocate an appropriate number of parameters to each word. For instance, the meaning of the word race varies with context (ex: competition vs anthropological classification), but the meaning of regatta is rather specific and\n\u2217Authors contributed equally.\ninvariant. It seems unlikely that race and regatta\u2019s representations could contain the same number of parameters without one overfitting or underfitting.\nTo better capture the semantic variability of words, we propose a novel extension to the popular Skip-Gram and Continuous Bag-of-Words models (Mikolov et al., 2013) that allows vectors to have stochastic, data-dependent dimensionality. By employing the same mathematical tools that allow the definition of an Infinite Restricted Boltzmann Machine (C\u00f4t\u00e9 and Larochelle, 2016), we define two log-bilinear energy-based models named Stochastic Dimensionality Skip-Gram (SD-SG) and Stochastic Dimensionality Continuous Bag-of-Words (SDCBOW) after their fixed dimensional counterparts. During training, SD-SG and SD-CBOWallowword representations to grow naturally based on howwell they can predict their context. This behavior, among other things, enables the vectors of specific words to use few dimensions (since their context is reliably predictable) and the vectors of vague or polysemous words to elongate to capture as wide a semantic range as needed. As far as we are aware, this is the first word embedding method that allows vector dimensionality to be learned and to vary across words."
        },
        {
            "heading": "2 Fixed Dimension Word Embeddings",
            "text": "We first review the original Skip-Gram (SG) and Continuous Bag-of-Words (CBOW) architectures (Mikolov et al., 2013) before describing our novel extensions. In the following model definitions, let wi \u2208 Rd be a d-dimensional, real-valued vector representing the ith input word wi , and let ck \u2208 Rd be a vector representing the kth context word ck appearing in a 2K-sized window around an instance of wi in some training corpus D.\nar X\niv :1\n51 1.\n05 39\n2v 3\n[ st\nat .M\nL ]\n1 3\nA pr\n2 01\n7"
        },
        {
            "heading": "2.1 Skip-Gram",
            "text": "SG learns a word\u2019s embedding via maximizing the log probability of that word\u2019s context (i.e. the words occurring within a fixed-sized window around the input word). Training the SG model reduces to maximizing the following objective function:\nLSG = |D |\u2211 i=1 \u2211 i\u2212K\u2264k\u2264i+K,k,i log p(ck |wi)\n= |D |\u2211 i=1 \u2211 i\u2212K\u2264k\u2264i+K,k,i log ec T k wi\u2211V v=1 e cTv wi\n(1)\nwhere V is the size of the context vocabulary. Stochastic gradient descent is used to update not only wi but also ck and cv . A hierarchical softmax or negative sampling is commonly used to approximate the normalization term in the denominator (Mikolov et al., 2013)."
        },
        {
            "heading": "2.2 Continuous Bag-of-Words",
            "text": "CBOW can be viewed as the inverse of SG: context words c1 . . . ck serve as input in the prediction of a center word wi. The CBOW objective function is then written as\nLCBOW = |D |\u2211 i=1 log p(wi |ci\u2212K . . . ci+K )\n= |D |\u2211 i=1 log e 1 2K\u22121 \u2211 j cTj wi\u2211V v=1 e 1 2K\u22121 \u2211 j cTj wv\n(2)\nwhere c, w, and V are defined as above for SG. Again, the denominator is approximated via negative sampling or a hierarchical softmax."
        },
        {
            "heading": "3 Word Embeddings with Stochastic Dimensionality",
            "text": "Having introduced the fixed-dimensional embedding techniques SG and CBOW, we now define extensions that make vector dimensionality a random variable. In order for embedding growth to be unconstrained, word vectors wi \u2208 R\u221e and context vectors ck \u2208 R\u221e are considered infinite dimensional and initialized such that the first few dimensions are non-zero and the rest zero."
        },
        {
            "heading": "3.1 Stochastic Dimensionality Skip-Gram",
            "text": "Define the Stochastic Dimensionality Skip-Gram (SD-SG) model to be the following joint Gibbs\ndistribution over wi, ck , and a random positive integer z \u2208 Z+ denoting the maximum index over which to compute the embedding inner product: p(wi, ck, z) = 1Z e\u2212E(wi,ck,z) where Z = \u2211 w \u2211 c \u2211\nz e\u2212E(w,c,z), also known as the partition function. Define the energy function as E(wi, ck, z) = z log a\u2212 \u2211z j=1 wi, jck, j\u2212\u03bbw 2 i, j\u2212\u03bbc2k, j where 1 < a < \u221e, a \u2208 R and \u03bb is a weight on the L2 penalty. Notice that SD-SG is essentially the same as SG except for three modification: (1) the inner product index z is a random variable, (2) an L2 term is introduced to penalize vector length, and (3) an additional z log a term is introduced to ensure the infinite sum over dimensions results in a convergent geometric series (C\u00f4t\u00e9 and Larochelle, 2016). This convergence, in turn, yields a finite partition function; see the Appendix for the underlying assumptions and derivation. For SD-SG\u2019s learning objective, ideally, we would like to marginalize out z:\nlogp(ck |wi) = log \u221e\u2211 z=1 p(ck, z |wi)\n= log\n[ l\u2211\nz=1 p(ck, z |wi) +\na a \u2212 1 p(ck, l |wi) ] (3)\nwhere l is the maximum index at which w or c contains a non-zero value. l must exist under the sparsity assumption that makes the partition function finite (see Appendix), but that assumption gives no information about l\u2019s value. One work-around is to fix l at some constant, but that would restrict the model and make l a crucial hyperparameter. A better option is to sample z values and rely on the randomness to make learning dynamic yet tractable. This way l can grow arbitrarily (i.e. its the observed maximum sample) while the vectors retain a finite number of non-zero elements. Thus we write the loss in terms of an expectation\nLSD-SG = log p(ck |wi) = Ez |ck,wi [log p(ck, z |wi) \u2212 log p(z |ck,wi)] .\n(4)\nNotice that this is the evidence bound widely used for variational inference except here there is equality, not a bound, because we have set the variational distribution q(z) to the posterior p(z |w, c), which is tractable. The sampling we desire then comes\nabout via a score function estimate of the gradient:\n\u2202\n\u2202wi LSD-SG \u2248 1 S S\u2211 s=1 \u2202 \u2202wi log p(ck, z\u0302s |wi)\n+ [log p(ck |wi) \u2212 1] \u2202\n\u2202wi log p(z\u0302s |ck,wi)\n(5)\nwhere S samples are drawn from z\u0302s \u223c p(z |ck,wi). Note the presence of the p(ck |wi) term\u2014the very term that we said was problematic in Equation 3 since l was not known. We can compute this term in the Monte Carlo objective by setting l to be the largest z\u0302 value sampled up to that point in training. The presence of p(ck |wi) is a boon because, since it does not depend z\u0302, there is no need for control variates to stabilize the typically high variance term \u2202 \u2202wi log p(z\u0302s |ck,wi).\nYet there\u2019s still a problem in that z\u0302 \u2208 [1,\u221e) and therefore a very large dimensionality (say, a few thousand or more) could be sampled, resulting in the gradient incurring painful computational costs. To remedy this situation, if a z\u0302 value greater than the current value of l is sampled, we set z\u0302 = l + 1, restricting the model to grow only one dimension at a time. Constraining growth in this way is computationally efficient since z\u0302 can be drawn from a (l + 1)-dimensional multinoulli distribution with parameters \u0398 = {\u03b81 = p(z = 1|w, c), . . . , \u03b8l+1 = a a\u22121 p(z = l |w, c)}. The intuition is the model can sample a dimension less than or equal to l if l is already sufficiently large or draw the (l+1)th option if not, choosing to increase the model\u2019s capacity. The hyperparameter a controls this growing behavior: as a approaches one from the right, P(z > l |w) approaches infinity."
        },
        {
            "heading": "3.2 Stochastic Dimensionality Continuous Bag-of-Words",
            "text": "The Stochastic Dimensionality Continuous Bag-ofWords (SD-CBOW) model is a conditional Gibbs distribution over a center word wi and a random positive integer z \u2208 Z+ denoting the maximum index as before, given multiple context words ck : p(wi, z |ci\u2212K, . . . , ci+K ) = 1Zw,z e \u2212 12K\u22121 \u2211 j E(wi,c j,z)\nwhere Zw,c = \u2211 w \u2211 z e \u2212 12K\u22121 \u2211 j E(w,c j,z). The energy function is defined just as for the SD-SG and admits a finite partition function using the same arguments. The primary difference between SDSG and SD-CBOW is that the latter assumes all words appearing together in a window have the same vector dimensionality. The SD-SG, on the\nother hand, assumes just word-context pairs share dimensionality.\nLike with SD-SG, learning SD-CBOW\u2019s parameters is done via a Monte Carlo objective. Define the SD-CBOW objective LSD-CBOW as\nLSD-CBOW = log p(wi |ci\u2212K . . . ci+K ) = Ez[log p(wi, z |ci\u2212K . . . ci+K ) \u2212 log p(z |wi, ci\u2212K . . . ci+K )]. (6)\nAgain we use a score function estimate of the gradient to produce dynamic vector growth: \u2202\n\u2202wi LSD-CBOW \u2248 1S \u2211S s=1 \u2202 \u2202wi\nlog p(wi, z\u0302s |ci\u2212K, . . .)+ [log p(wi |ci\u2212K, . . .) \u2212 1] \u2202\u2202wi log p(z\u0302s |wi, ci\u2212K, . . .) where S samples are drawn from z\u0302s \u223c p(z |wi, ci\u2212K, . . . , ci+K ). Vectors are constrained to grow only one dimension at a time as done for the SD-SG by sampling from a l + 1th dimensional multinoulli with \u03b8l+1 = a a\u22121 p(z = l |wi, ci\u2212K, . . . , ci+K )."
        },
        {
            "heading": "4 Related Work",
            "text": "As mentioned in the Introduction, we are aware of no previous work that defines embedding dimensionality as a random variable whose distribution is learned from data. Yet, there is much existing work on increasing the flexibility of embeddings via auxiliary parameters. For instance, Vilnis &McCallum (2015) represent each word with a multivariate Gaussian distribution. The Gaussian embedding\u2019s mean parameter servesmuch like a traditional vector representation, and themethod\u2019s novelty arises from the covariance parameter\u2019s ability to capture word specificity (Vilnis and McCallum, 2015). Other related work proposes using multiple embeddings per word in order to handle polysemy and homonymy (Huang et al., 2012; Reisinger and Mooney, 2010; Neelakantan et al., 2014; Tian et al., 2014; Bartunov et al., 2016). Bartunov et al. (2016)\u2019s AdaGram model is closest in spirit to SD-SG and SD-CBOW in that it uses the Dirichlet Process to learn an unconstrained, data-dependent number of embeddings for each word. Yet, in contrast to SD-SG/-CBOW, the dimensionality of each embedding is still userspecified."
        },
        {
            "heading": "5 Evaluation",
            "text": "We evaluate SD-SG and SD-CBOW quantitatively and qualitatively against original SG and CBOW. For all experiments, models were trained on a one billionword subset ofWikipedia (6/29/08 snapshot).\nThe same learning rate (\u03b1 = 0.05 for CBOW, \u03b1 = 0.025 for SG), number of negative samples (5), context window size (6), and number of training epochs (1) were used for all models. SD-SG and SD-CBOW were initialized to ten dimensions.\nQuantitative Evaluation. We test each model\u2019s ability to rank word pairs according to their semantic similarity, a task commonly used to gauge the quality of WEs. We evaluate our embeddings on two standard test sets: WordSim353 (Finkelstein et al., 2001) andMEN (Bruni et al., 2014). As is typical for evaluation, we measure the Spearman\u2019s rank correlation between the similarity scores produced by the model and those produced by humans. The correlations for all models are reported in Subtable (a) of Figure 1. We see that the SD-SG and SDCBOW perform better than their 50 dimensional counterparts but worse than their 200 dimensional counterparts. All scores are relatively competitive though, separated by no more than 0.1.\nQualitative Evaluation. Observing that the SDSG and SD-CBOW models perform comparatively to finite versions somewhere between 50 and 200 dimensions, we qualitatively examine their distributions over vector dimensionalities. Subfigure (b) of Figure 1 shows a histogram of the expected dimensionality\u2014i.e. Ez |w,c[z]\u2014of each vector after training the SD-CBOW model. As expected, the distribution is long-tailed, and vague words\noccupy the tail while specific words are found in the head. As shown by the annotations, the word photon has an expected dimensionality of 19 while the homograph race has 150. Note that expected dimensionality correlates with word frequency\u2014due to the fact that multi-sense words, by definition, can be used more frequently\u2014but does not follow it strictly. For instance, the word william is the 482nd most frequently occurring word in the corpus but has an expected length of 62, which is closer to the lengths of much rarer words (around 20-40 dimensions) than to similarly frequent words. In subfigures (c) and (d) of Figure 1, we plot the quantity p(z |w) for two homographs, race (c) and player (d), as learned by SD-SG, in order to examine if their multiple meanings are conspicuous in their distribution over dimensionalities. For race, we see that the distribution does indeed have at least two modes: the first at around 70 dimensions represents car racing, as determined by computing nearest neighbors with that dimension as a cutoff, while the second at around 100 dimensions encodes the anthropological meaning."
        },
        {
            "heading": "6 Conclusions",
            "text": "We propose modest modifications to SG and CBOW that allow embedding dimensionality to be learned from data in a probabilistically principled way. Our models preserve performance on semantic similar-\nity tasks while providing a view\u2013via the distribution p(z |w, c)\u2013into how embeddings utilize their parameters and distribute semantic information."
        },
        {
            "heading": "A Finite Partition Function",
            "text": "Stochastic Dimensionality Skip-Gram\u2019s partition function, containing a sum over all countably infinite values of z, would seem to be divergent and thus incomputable. However, it is not, due to two key properties first proposed by (C\u00f4t\u00e9 and Larochelle, 2016) to define a Restricted Boltzmann Machine with an infinite number of hidden units (iRBM). They are:\n1. Sparsity penalty: The L2 penalty in E(wi, ck, z) (i.e. the w2i, j and c2k, j terms) ensures the word and context vectors must have a finite two-norm under iterative gradient-based optimization with a finite initial condition. In other words, no proper optimization method could converge to the infinite solution if all w and c vectors are initialized to have a finite number of non-zero elements (C\u00f4t\u00e9 and Larochelle, 2016).\n2. Per-dimension constant penalty: The energy function\u2019s z log a term results in dimensions greater than l becoming a convergent geometric series. This is discussed further below.\nWith those two properties in mind, consider the conditional distribution of z given an input and context word:\np(z |w, c) = e \u2212E(w,c,z)\u2211\u221e\nz\u2032=1 e\u2212E(w,c,z \u2032) . (7)\nAgain, the denominator looks problematic due to the infinite sum, but notice the following:\nZz = l\u2211\nz\u2032=1 e\u2212E(w,c,z\n\u2032) + \u221e\u2211\nz\u2032=l+1 e\u2212E(w,c,z\n\u2032)\n= l\u2211 z\u2032=1 e\u2212E(w,c,z \u2032) + e\u2212E(w,c,l) \u221e\u2211 z\u2032=0 1 az\u2032\n= l\u2211 z\u2032=1 e\u2212E(w,c,z \u2032) + a a \u2212 1e \u2212E(w,c,l).\n(8)\nThe sparsity penalty allows the sum to be split as it is in step #2 into a finite term ( \u2211l z\u2032=1 e\n\u2212E(w,c,z\u2032)) and an infinite sum ( \u2211\u221e z\u2032=l+1 e\n\u2212E(w,c,z\u2032)) at an index l such that wi, j = ck, j = 0 \u2200 j > l. After e\u2212E(w,c,l) is factored out of the second term, all remaining wi, j and ck, j terms are zero. A few steps of algebra then reveal the presence of a convergent geometric series. Intuitively, we can think of the second term, aa\u22121 e\n\u2212E(w,c,l), as quantifying the data\u2019s need to expand the model\u2019s capacity given w and c."
        }
    ],
    "title": "Learning the Dimensionality of Word Embeddings",
    "year": 2017
}