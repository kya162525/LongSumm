{
    "abstractText": "Deep neural networks have excelled on a wide range of problems, from vision to language and game playing. Neural networks very gradually incorporate information into weights as they process data, requiring very low learning rates. If the training distribution shifts, the network is slow to adapt, and when it does adapt, it typically performs badly on the training distribution before the shift. Our method, Memory-based Parameter Adaptation, stores examples in memory and then uses a context-based lookup to directly modify the weights of a neural network. Much higher learning rates can be used for this local adaptation, reneging the need for many iterations over similar data before good predictions can be made. As our method is memory-based, it alleviates several shortcomings of neural networks, such as catastrophic forgetting, fast, stable acquisition of new knowledge, learning with an imbalanced class labels, and fast learning during evaluation. We demonstrate this on a range of supervised tasks: large-scale image classification and language modelling.",
    "authors": [
        {
            "affiliations": [],
            "name": "Pablo Sprechmann"
        },
        {
            "affiliations": [],
            "name": "Siddhant M. Jayakumar"
        },
        {
            "affiliations": [],
            "name": "Jack W. Rae"
        },
        {
            "affiliations": [],
            "name": "Alexander Pritzel"
        },
        {
            "affiliations": [],
            "name": "Adri\u00e0 Puigdom\u00e8nech Badia"
        },
        {
            "affiliations": [],
            "name": "Benigno Uria"
        },
        {
            "affiliations": [],
            "name": "Oriol Vinyals"
        },
        {
            "affiliations": [],
            "name": "Demis Hassabis"
        },
        {
            "affiliations": [],
            "name": "Razvan Pascanu"
        },
        {
            "affiliations": [],
            "name": "Charles Blundell"
        }
    ],
    "id": "SP:5c673ddba881fc063cff2f8792169c95a88d8929",
    "references": [
        {
            "authors": [
                "Aharoni",
                "Ziv",
                "Rattner",
                "Gal",
                "Permuter",
                "Haim"
            ],
            "title": "Gradual learning of deep recurrent neural networks",
            "venue": "arXiv preprint arXiv:1708.08863,",
            "year": 2017
        },
        {
            "authors": [
                "Anselmi",
                "Fabio",
                "Leibo",
                "Joel Z",
                "Rosasco",
                "Lorenzo",
                "Mutch",
                "Jim",
                "Tacchetti",
                "Andrea",
                "Poggio",
                "Tomaso"
            ],
            "title": "Unsupervised learning of invariant representations with low sample complexity: the magic of sensory cortex or a new framework for machine learning",
            "year": 2014
        },
        {
            "authors": [
                "Ba",
                "Jimmy",
                "Hinton",
                "Geoffrey E",
                "Mnih",
                "Volodymyr",
                "Leibo",
                "Joel Z",
                "Ionescu",
                "Catalin"
            ],
            "title": "Using fast weights to attend to the recent past",
            "venue": "In Advances In Neural Information Processing Systems,",
            "year": 2016
        },
        {
            "authors": [
                "Bahdanau",
                "Dzmitry",
                "Cho",
                "Kyunghyun",
                "Bengio",
                "Yoshua"
            ],
            "title": "Neural machine translation by jointly learning to align and translate",
            "venue": "arXiv preprint arXiv:1409.0473,",
            "year": 2014
        },
        {
            "authors": [
                "Blundell",
                "Charles",
                "Uria",
                "Benigno",
                "Pritzel",
                "Alexander",
                "Li",
                "Yazhe",
                "Ruderman",
                "Avraham",
                "Leibo",
                "Joel Z",
                "Rae",
                "Jack",
                "Wierstra",
                "Daan",
                "Hassabis",
                "Demis"
            ],
            "title": "Model-free episodic control",
            "venue": "arXiv preprint arXiv:1606.04460,",
            "year": 2016
        },
        {
            "authors": [
                "Finn",
                "Chelsea",
                "Abbeel",
                "Pieter",
                "Levine",
                "Sergey"
            ],
            "title": "Model-agnostic meta-learning for fast adaptation of deep networks",
            "venue": "arXiv preprint arXiv:1703.03400,",
            "year": 2017
        },
        {
            "authors": [
                "Fortunato",
                "Meire",
                "Blundell",
                "Charles",
                "Vinyals",
                "Oriol"
            ],
            "title": "Bayesian recurrent neural networks",
            "venue": "arXiv preprint arXiv:1704.02798,",
            "year": 2017
        },
        {
            "authors": [
                "French",
                "Robert M"
            ],
            "title": "Catastrophic forgetting in connectionist networks",
            "venue": "Trends in cognitive sciences,",
            "year": 1999
        },
        {
            "authors": [
                "Furlanello",
                "Tommaso",
                "Zhao",
                "Jiaping",
                "Saxe",
                "Andrew M",
                "Itti",
                "Laurent",
                "Tjan",
                "Bosco S"
            ],
            "title": "Active long term memory networks",
            "venue": "arXiv preprint arXiv:1606.02355,",
            "year": 2016
        },
        {
            "authors": [
                "Grave",
                "Edouard",
                "Joulin",
                "Armand",
                "Usunier",
                "Nicolas"
            ],
            "title": "Improving neural language models with a continuous cache",
            "venue": "arXiv preprint arXiv:1612.04426,",
            "year": 2016
        },
        {
            "authors": [
                "Gu",
                "Jiatao",
                "Wang",
                "Yong",
                "Cho",
                "Kyunghyun",
                "Li",
                "Victor OK"
            ],
            "title": "Search engine guided non-parametric neural machine translation",
            "venue": "arXiv preprint arXiv:1705.07267,",
            "year": 2017
        },
        {
            "authors": [
                "He",
                "Kaiming",
                "Zhang",
                "Xiangyu",
                "Ren",
                "Shaoqing",
                "Sun",
                "Jian"
            ],
            "title": "Deep residual learning for image recognition",
            "venue": "In Proceedings of the IEEE conference on computer vision and pattern recognition,",
            "year": 2016
        },
        {
            "authors": [
                "Hinton",
                "Geoffrey",
                "Vinyals",
                "Oriol",
                "Dean",
                "Jeff"
            ],
            "title": "Distilling the knowledge in a neural network",
            "venue": "arXiv preprint arXiv:1503.02531,",
            "year": 2015
        },
        {
            "authors": [
                "Hochreiter",
                "Sepp",
                "Schmidhuber",
                "J\u00fcrgen"
            ],
            "title": "Long short-term memory",
            "venue": "Neural computation,",
            "year": 1997
        },
        {
            "authors": [
                "Kaiser",
                "\u0141ukasz",
                "Nachum",
                "Ofir",
                "Roy",
                "Aurko",
                "Bengio",
                "Samy"
            ],
            "title": "Learning to remember rare events",
            "venue": "arXiv preprint arXiv:1703.03129,",
            "year": 2017
        },
        {
            "authors": [
                "Kingma",
                "Diederik",
                "Ba",
                "Jimmy"
            ],
            "title": "Adam: A method for stochastic optimization",
            "venue": "arXiv preprint arXiv:1412.6980,",
            "year": 2014
        },
        {
            "authors": [
                "Kirkpatrick",
                "James",
                "Pascanu",
                "Razvan",
                "Rabinowitz",
                "Neil",
                "Veness",
                "Joel",
                "Desjardins",
                "Guillaume",
                "Rusu",
                "Andrei A",
                "Milan",
                "Kieran",
                "Quan",
                "John",
                "Ramalho",
                "Tiago",
                "Grabska-Barwinska",
                "Agnieszka"
            ],
            "title": "Overcoming catastrophic forgetting in neural networks",
            "venue": "Proceedings of the National Academy of Sciences,",
            "year": 2017
        },
        {
            "authors": [
                "Krause",
                "Ben",
                "Kahembwe",
                "Emmanuel",
                "Murray",
                "Iain",
                "Renals",
                "Steve"
            ],
            "title": "Dynamic evaluation of neural sequence models",
            "venue": "arXiv preprint arXiv:1709.07432,",
            "year": 2017
        },
        {
            "authors": [
                "Krizhevsky",
                "Alex",
                "Sutskever",
                "Ilya",
                "Hinton",
                "Geoffrey E"
            ],
            "title": "Imagenet classification with deep convolutional neural networks. In Advances in neural information processing",
            "year": 2012
        },
        {
            "authors": [
                "Kumaran",
                "Dharshan",
                "Hassabis",
                "Demis",
                "McClelland",
                "James L"
            ],
            "title": "What learning systems do intelligent agents need? complementary learning systems theory updated",
            "venue": "Trends in cognitive sciences,",
            "year": 2016
        },
        {
            "authors": [
                "LeCun",
                "Yann",
                "Bottou",
                "L\u00e9on",
                "Bengio",
                "Yoshua",
                "Haffner",
                "Patrick"
            ],
            "title": "Gradient-based learning applied to document recognition",
            "venue": "Proceedings of the IEEE,",
            "year": 1998
        },
        {
            "authors": [
                "Leibo",
                "Joel Z",
                "Cornebise",
                "Julien",
                "G\u00f3mez",
                "Sergio",
                "Hassabis",
                "Demis"
            ],
            "title": "Approximate hubel-wiesel modules and the data structures of neural computation",
            "venue": "arXiv preprint arXiv:1512.08457,",
            "year": 2015
        },
        {
            "authors": [
                "Li",
                "Xiaoqing",
                "Zhang",
                "Jiajun",
                "Zong",
                "Chengqing"
            ],
            "title": "One sentence one model for neural machine",
            "venue": "translation. CoRR,",
            "year": 2016
        },
        {
            "authors": [
                "Li",
                "Zhizhong",
                "Hoiem",
                "Derek"
            ],
            "title": "Learning Without Forgetting",
            "year": 2016
        },
        {
            "authors": [
                "Loader",
                "Clive"
            ],
            "title": "Local regression and likelihood",
            "venue": "Springer Science & Business Media,",
            "year": 2006
        },
        {
            "authors": [
                "Lopez-Paz",
                "David",
                "Ranzato"
            ],
            "title": "Marc\u2019Aurelio. Gradient episodic memory for continuum learning",
            "venue": "arXiv preprint arXiv:1706.08840,",
            "year": 2017
        },
        {
            "authors": [
                "Marcus",
                "Mitchell P",
                "Marcinkiewicz",
                "Mary Ann",
                "Santorini",
                "Beatrice"
            ],
            "title": "Building a large annotated corpus of english: The penn treebank",
            "venue": "Computational linguistics,",
            "year": 1993
        },
        {
            "authors": [
                "McClelland",
                "James L",
                "McNaughton",
                "Bruce L",
                "O\u2019reilly",
                "Randall C"
            ],
            "title": "Why there are complementary learning systems in the hippocampus and neocortex: insights from the successes and failures of connectionist models of learning and memory",
            "venue": "Psychological review,",
            "year": 1995
        },
        {
            "authors": [
                "McCloskey",
                "Michael",
                "Cohen",
                "Neal J"
            ],
            "title": "Catastrophic interference in connectionist networks: The sequential learning problem",
            "venue": "Psychology of learning and motivation,",
            "year": 1989
        },
        {
            "authors": [
                "Melis",
                "G\u00e1bor",
                "Dyer",
                "Chris",
                "Blunsom",
                "Phil"
            ],
            "title": "On the state of the art of evaluation in neural language models",
            "venue": "arXiv preprint arXiv:1707.05589,",
            "year": 2017
        },
        {
            "authors": [
                "Merity",
                "Stephen",
                "Xiong",
                "Caiming",
                "Bradbury",
                "James",
                "Socher",
                "Richard"
            ],
            "title": "Pointer sentinel mixture models",
            "venue": "arXiv preprint arXiv:1609.07843,",
            "year": 2016
        },
        {
            "authors": [
                "Merity",
                "Stephen",
                "Keskar",
                "Nitish Shirish",
                "Socher",
                "Richard"
            ],
            "title": "Regularizing and optimizing lstm language models",
            "venue": "arXiv preprint arXiv:1708.02182,",
            "year": 2017
        },
        {
            "authors": [
                "Mnih",
                "Volodymyr",
                "Kavukcuoglu",
                "Koray",
                "Silver",
                "David",
                "Rusu",
                "Andrei A",
                "Veness",
                "Joel",
                "Bellemare",
                "Marc G",
                "Graves",
                "Alex",
                "Riedmiller",
                "Martin",
                "Fidjeland",
                "Andreas K",
                "Ostrovski",
                "Georg"
            ],
            "title": "Humanlevel control through deep reinforcement learning",
            "venue": "Nature, 518(7540):529\u2013533,",
            "year": 2015
        },
        {
            "authors": [
                "Oord",
                "Aaron van den",
                "Dieleman",
                "Sander",
                "Zen",
                "Heiga",
                "Simonyan",
                "Karen",
                "Vinyals",
                "Oriol",
                "Graves",
                "Alex",
                "Kalchbrenner",
                "Nal",
                "Senior",
                "Andrew",
                "Kavukcuoglu",
                "Koray"
            ],
            "title": "Wavenet: A generative model for raw audio",
            "venue": "arXiv preprint arXiv:1609.03499,",
            "year": 2016
        },
        {
            "authors": [
                "Pritzel",
                "Alexander",
                "Uria",
                "Benigno",
                "Srinivasan",
                "Sriram",
                "Puigdom\u00e8nech",
                "Adri\u00e0",
                "Vinyals",
                "Oriol",
                "Hassabis",
                "Demis",
                "Wierstra",
                "Daan",
                "Blundell",
                "Charles"
            ],
            "title": "Neural episodic control",
            "year": 2017
        },
        {
            "authors": [
                "Ravi",
                "Sachin",
                "Larochelle",
                "Hugo"
            ],
            "title": "Optimization as a model for few-shot learning",
            "year": 2016
        },
        {
            "authors": [
                "Russakovsky",
                "Olga",
                "Deng",
                "Jia",
                "Su",
                "Hao",
                "Krause",
                "Jonathan",
                "Satheesh",
                "Sanjeev",
                "Ma",
                "Sean",
                "Huang",
                "Zhiheng",
                "Karpathy",
                "Andrej",
                "Khosla",
                "Aditya",
                "Bernstein",
                "Michael"
            ],
            "title": "Imagenet large scale visual recognition challenge",
            "venue": "International Journal of Computer Vision,",
            "year": 2015
        },
        {
            "authors": [
                "Santoro",
                "Adam",
                "Bartunov",
                "Sergey",
                "Botvinick",
                "Matthew",
                "Wierstra",
                "Daan",
                "Lillicrap",
                "Timothy"
            ],
            "title": "One-shot learning with memory-augmented neural networks",
            "venue": "arXiv preprint arXiv:1605.06065,",
            "year": 2016
        },
        {
            "authors": [
                "Silver",
                "David",
                "Schrittwieser",
                "Julian",
                "Simonyan",
                "Karen",
                "Antonoglou",
                "Ioannis",
                "Huang",
                "Aja",
                "Guez",
                "Arthur",
                "Hubert",
                "Thomas",
                "Baker",
                "Lucas",
                "Lai",
                "Matthew",
                "Bolton",
                "Adrian",
                "Chen",
                "Yutian Chen",
                "Lillicrap",
                "Timothy",
                "Hui",
                "Fan Hui",
                "Sifre",
                "Laurent",
                "van den Driessche",
                "George",
                "Graepel",
                "Thore",
                "Hassabis",
                "Demis"
            ],
            "title": "Mastering the game of go without human knowledge",
            "year": 2017
        },
        {
            "authors": [
                "Snell",
                "Jake",
                "Swersky",
                "Kevin",
                "Zemel",
                "Richard S"
            ],
            "title": "Prototypical networks for few-shot learning",
            "venue": "arXiv preprint arXiv:1703.05175,",
            "year": 2017
        },
        {
            "authors": [
                "Vinyals",
                "Oriol",
                "Blundell",
                "Charles",
                "Lillicrap",
                "Tim",
                "Wierstra",
                "Daan"
            ],
            "title": "Matching networks for one shot learning",
            "venue": "In Advances in Neural Information Processing Systems,",
            "year": 2016
        },
        {
            "authors": [
                "Wu",
                "Yonghui",
                "Schuster",
                "Mike",
                "Chen",
                "Zhifeng",
                "Le",
                "Quoc V",
                "Norouzi",
                "Mohammad",
                "Macherey",
                "Wolfgang",
                "Krikun",
                "Maxim",
                "Cao",
                "Yuan",
                "Gao",
                "Qin",
                "Klaus"
            ],
            "title": "Google\u2019s neural machine translation system: Bridging the gap between human and machine translation",
            "venue": "arXiv preprint arXiv:1609.08144,",
            "year": 2016
        },
        {
            "authors": [
                "Zhang",
                "Xiang",
                "Zhao",
                "Junbo",
                "LeCun",
                "Yann"
            ],
            "title": "Character-level convolutional networks for text classification",
            "venue": "In Advances in neural information processing systems,",
            "year": 2015
        }
    ],
    "sections": [
        {
            "heading": "1 INTRODUCTION",
            "text": "Neural networks have been proven to be powerful function approximators, as shown in a long list of successful applications: image classification (e.g. Krizhevsky et al., 2012), audio processing (e.g. Oord et al., 2016), game playing (e.g. Mnih et al., 2015; Silver et al., 2017), and machine translation (e.g. Wu et al., 2016). Typically these applications apply batch training to large or near-infinite data sets, requiring many iterations to obtain satisfactory performance.\nHumans and animals are able to incorporate new knowledge quickly from single examples, continually throughout much of their lifetime. In contrast, neural network-based models rely on the data distribution being stationary and the training procedure using low learning rates and many passes through the training data to obtain good generalisation. This limits their application to life-long learning or dynamic environments and tasks.\nProblems in continual learning with neural networks commonly manifest as the phenomenon of catastrophic forgetting (McCloskey & Cohen, 1989; French, 1999): a neural network performs badly on old tasks having been trained to perform well on a new task. Several recent approaches have proven promising at overcoming this, such as elastic weight consolidation (Kirkpatrick et al., 2017). Recent work in language modelling has demonstrated how popular neural language models may appropriately be adapted to take advantage of rare, recently seen words, as in the neural cache (Grave et al., 2016), pointer sentinel networks (Merity et al., 2016) and learning to remember rare events (Kaiser et al., 2017). Our work generalises these approaches and we present experimental results where we apply our model to both continual or incremental learning tasks, as well as language modelling.\nWe propose Memory-based Parameter Adaptation (MbPA), a method for augmenting neural networks with an episodic memory to allow for rapid acquisition of new knowledge while preserving\n*Denotes equal contribution.\nar X\niv :1\n80 2.\n10 54\n2v 1\n[ st\nat .M\nL ]\n2 8\nFe b\n20 18\nTraining setting Testing setting\nthe high performance and good generalisation of standard deep models. It combines desirable properties of many existing few-shot, continual learning and language models. We draw inspiration from the theory of complementary learning systems (CLS: McClelland et al., 1995; Leibo et al., 2015; Kumaran et al., 2016), where effective continual, life-long learning necessitates two complementary systems: one that allows for the gradual acquisition of structured knowledge, and another that allows rapid learning of the specifics of individual experiences. As such, MbPA consists of two components: a parametric component (a standard neural network) and a non-parametric component (a neural network augmented with a memory containing previous problem instances). The parametric component learns slowly but generalises well, whereas the non-parametric component rapidly adapts the weights of the parametric component. The non-parametric, instance-based adaptation of the weights is local, in the sense the modification is directly dictated by the inputs to the parametric component. The local adaptation is discarded after the model produces its output, avoiding long term consequences of strong local adaptation (such as overfitting), allowing the weights of the parametric model to learn slowly leading to strong performance and generalisation.\nThe contributions of our work are: (i) proposing an architecture for enhancing powerful parametric models with a fast adaptation mechanism to efficiently cope with changes in the task at hand; (ii) establish connections between our method and attention mechanisms frequently used for querying memories; (iii) present a Bayesian interpretation of the method allowing a principled form of regularisation; (iv) evaluating the method on a range of different tasks: continual learning, incremental learning and data distribution shifts, obtaining promising results."
        },
        {
            "heading": "2 MODEL-BASED PARAMETER ADAPTATION",
            "text": "Our models consist of three components: an embedding network, f\u03b3 , a memory M and an output network g\u03b8. The embedding network, f\u03b3 , and the output network, g\u03b8, are standard parametric (feed forward or recurrent) neural networks with parameters \u03b3 and \u03b8, respectively. The memory M is a dynamically-sized memory module that stores key and value pairs, M = {(hi, vi)}. Keys {hi} are given by the embedding network. The values {vi} correspond to the desired output yi. For classification, yi would simply be the true class label, whereas for regression, yi would be the true regression target. Hence, upon observing the j-th example, we append the pair (hj , vj) to the memory M , where:\nhj \u2190 f\u03b3(xj), vj \u2190 yj .\nThe memory has a fixed size and acts as a circular buffer: when it is full, the oldest data is overwritten first. Retrieval from the memory M uses K-nearest neighbour search on the keys {hi} with Euclidean distance to obtain the K most similar keys and associated values.\nOur model is used differently in the training and testing phases. During training, for a given input x, we parametrise the conditional likelihood with a deep neural network given by the composition\nAlgorithm 1 Model-based Parameter Adaptation procedure MBPA-TRAIN\nSample mini-batch of training examples B = {(xb, yb)}b from training data. Calculate the embedded mini-batch B\u2032 = {(f\u03b3(xb), yb) : xb, yb \u2208 B}. Update \u03b8, \u03b3 by maximising the likelihood (1) of \u03b8 and \u03b3 with respect to mini-batch B Add the embedded mini-batch examples B\u2032 to memory M : M \u2190M \u222aB\u2032.\nprocedure MBPA-TEST(test input: x, output prediction: y\u0302) Calculate embedding q = f\u03b3(x), and \u2206total \u2190 0. Retrieve K-nearest neighbours to q and producing context, C = {(h(x)k , v (x) k , w (x) k )}Kk=1.\nfor each step of MbPA do Calculate \u2206M (x, \u03b8 + \u2206total) according to (4) \u2206total \u2190 \u2206total + \u2206M (x).\nOutput prediction y\u0302 = g\u03b8+\u2206total(h)\nof the embedding and output networks. Namely,\nptrain(y|x, \u03b3, \u03b8) = g\u03b8(f\u03b3(x)). (1) In the case of classification, the last layer of g\u03b8 is a softmax layer. The parameters {\u03b8, \u03b3} are estimated by maximum likelihood estimation. The memory is updated with new entries, as they are seen, however no local adaptation is performed on the model.\nFigure 1 (left) shows a diagram of the training setting and Algorithm 1 (MbPA-Train) shows the algorithm for updating MbPA during training.\nOn the other hand, at test time, it temporarily adapts the parameters of the output network based upon the current input and the contents of the memory M . That is, it uses the exact same parametrisation as (1), but with a different set of parameters in the output network.\nLet the context C of an input x be the keys, values and associated weights of the K nearest neighbours to query q = f\u03b3(x) in the memory M : C = {(h(x)k , v (x) k , w (x) k )}Kk=1. The coefficients w (x) k \u221d kern(h (x) k , q) are weightings of each of the retrieved neighbours according to their closeness to the query f\u03b3(x). kern(h, q) is a kernel function which, following (Pritzel et al., 2017), we choose as kern(h, q) = 1\n+\u2016h\u2212q\u201622 . The parametrisation of the likelihood takes the form,\np(y|x, \u03b8x) = p(y|x, \u03b8x, C) = g\u03b8x(f\u03b3(x)), (2) as opposed to the standard parametric approach g\u03b8(f\u03b3(x)), where \u03b8x = \u03b8 + \u2206M (x, \u03b8) with \u2206M (x, \u03b8) being a contextual (it is based upon the input x) update of the parameters of the output network. The MbPA adaptation corresponds to decreasing the weighted average negative loglikelihood over the retrieved neighbours in C. Figure 1 (right) shows a diagram of the testing setting and Algorithm 1(MbPA-Test) shows the algorithm for using MbPA during testing.\nAn interesting property of the model is that the correction \u2206M (x, \u03b8) is such that, as the parametric model becomes better at fitting the training data (and consequently the episodic memories), it selfregulates and diminishes. In the CLS theory, this process is referred to as consolidation, when the parametric model can reliably perform predictions without relying on episodic memories."
        },
        {
            "heading": "2.1 MAXIMUM A POSTERIORI INTERPRETATION OF MBPA",
            "text": "We can now derive \u2206M (x, \u03b8), motivated by considering the posterior distribution on the parameters \u03b8x. Let x correspond to the input with context C = {hk, vk, w(x)k }Kk=1. The maximum a posteriori over the context C, given the parameters obtained after training \u03b8, can be written as:\nmax \u03b8x log p(\u03b8x|\u03b8) + K\u2211 k=1 w (x) k log p(v (x) k |h (x) k , \u03b8 x, x), (3)\nwhere the second term is a weighted likelihood of the data in C and log p(\u03b8x|\u03b8) \u221d \u2212 ||\u03b8 x\u2212\u03b8||22 2\u03b1M\n(i.e. a Gaussian prior on \u03b8x centred at \u03b8) can be thought as a regularisation term that prevents overfitting. See Appendix D for details of this derivation.\nEquation (3) does not have a closed form solution, and requires fitting a large number of parameters at inference time. This can be costly and susceptible to overfitting. We can avoid this problem by adapting the reference parameters \u03b8. Specifically, we perform a fixed number of gradient descent steps to minimise (3). One step of gradient descent to the loss in (3) with respect to \u03b8x yields\n\u2206M (x, \u03b8) = \u2212\u03b1M \u2207\u03b8 K\u2211 k=1 w (x) k log p(v (x) k |h (x) k , \u03b8 x, x) \u2223\u2223\u2223\u2223\u2223 \u03b8 \u2212 \u03b2(\u03b8 \u2212 \u03b8x), (4)\nwhere \u03b2 is a scalar hyper-parameter. These adapted parameters are used for output computation but discarded thereafter, as described in Algorithm 1."
        },
        {
            "heading": "2.2 FROM ATTENTION TO LOCAL FITTING",
            "text": "A standard formulation of memory augmented networks is in the form of attention (Bahdanau et al., 2014), i.e. query memory to use a weighted average based on some similarity metric.\nWe can now show that an attention-based procedure is a particular case of local adaptation or MbPA. The details of this are discussed in Appendix E. Effectively, attention can be viewed as fitting a constant function the neighbourhood of memories, whereas MbPA generalises to fit a function parameterised by the output network of our model.\nThe diagram in Figure 2 illustrates an example in a regression task for simplicity. Given a query (blue), the retrieved memories and their corresponding values are depicted in red. The predictions of an attention based model are shown in orange. We can see that the prediction is biased towards the value of the neighbours with higher functional value. In magenta we represent the predictions made by the model g\u03b8. We can see that it is not able to explain all memories equally well. This could be either because the problem is too difficult, poor training, or because the a prediction needs to be made while assimilating new information. The green curve show the prediction obtained after adapting the parameters to better explain the episodic memories."
        },
        {
            "heading": "3 RELATED WORK",
            "text": "A key component of MbPA is the non-parametric, episodic memory. Many recent works have looked at augmenting neural network systems with memories to allow for fast adaptation or incorporation of new knowledge. Variants of this architecture have been successfully used in the context of classification (Vinyals et al., 2016; Santoro et al., 2016; Kaiser et al., 2017), language modelling (Merity et al., 2016; Grave et al., 2016), reinforcement learning (Blundell et al., 2016; Pritzel et al., 2017), machine translation (Bahdanau et al., 2014), and question answering (Weston et al., 2014), to name a few. For the MbPA experiments below, we use a memory architecture similar to the Differentiable Neural Dictionary (DND) used in Neural Episodic Control (NEC) (Pritzel et al., 2017). One key difference is that we do not train the embedding network through the gradients from the memories (as they are not used at training time).\nWhile many of these approaches share a contextual memory lookup system, MbPA is distinct in the method by which the memories are used. Matching Networks (Vinyals et al., 2016) use a non-\nparametric network to map from a few examples to a target class via a kernel weighted average. Prototypical Networks (Snell et al., 2017) extend this and use a linear model instead of a nearest neighbour method.\nMbPA is further related to meta-learning approaches for few shot learning. In the context of learning invariant representations for object recognition, Anselmi et al. (2014) proposed a method that can invariantly and discriminatively represent objects using a single sample, even of a new class. In their method, instead of training via gradient descent, image templates are stored in the weights of simple-complex cell networks while objects undergo transformations. Optimisation as a model of few shot learning (Ravi & Larochelle, 2016) proposes using a meta-learner LSTM to control the gradient updates of another network, while Model-Agnostic Meta-Learning (MAML Finn et al. (2017)) proposes a way of doing meta-learning over a distribution of tasks. These methods extend the classic fine-tuning technique used in domain adaptation type of ideas (e.g. fit a given neural network to a small set of new data). The MAML algorithm (particularly related to our work) aims at learning an easily adaptable set of weights, such that given a small amount of training data for a given task following the training distribution, the fine-tuning procedure would effectively adapt the weights to this particular task. Their work does not use any memory or per-example adaptation and is not based on a continual (life-long) learning setting. In contrast, our work, aims at augmenting a powerful neural network with a fine-tuning procedure that is used at inference only. The idea is to enhance the performance of the parametric model while maintaining its full training.\nRecent approaches to addressing the continual learning problem have included elastic weight consolidation (Kirkpatrick et al., 2017), where a penalty term is added to the loss for deviations far from previous weights, and learning without forgetting (Li & Hoiem, 2016; Furlanello et al., 2016), where distillation (Hinton et al., 2015) from previously trained models is used to keep old knowledge available. Gradient Episodic Memory for Continual Learning (Lopez-Paz & Ranzato, 2017) attempts to solve the problem by storing data from previous tasks and taking gradient updates when learning new tasks that do not increase the training loss on examples stored in memory.\nThere has been recent work in applying attention to quickly adapt a subset of fast weights (Ba et al., 2016). A number of recent works in language modelling have augmented prediction with attention over recent examples to account for the distributional shift between training and testing settings. Works in this direction include neural cache (Grave et al., 2016) and pointer sentinel networks (Merity et al., 2016). Learning to remember rare events (Kaiser et al., 2017) augments an LSTM with a key-value memory structure, and meta networks (Munkhdalai & Yu, 2017) combines fast weights with regular weights. Our model shares this flavour of attention and fast weights, while providing a model agnostic memory-based method that applies beyond language modelling.\nWorks in the context of machine translation relate to MbPA. Gu et al. (2017) explore how to incorporate information from memory into the final model predictions. The authors find that shallow mixing works best. We show in this paper that MbPA is another competitive strategy to shallow mixing, and often working better (PTB for language modelling, ImageNet for image classification). The work by Li et al. (2016) shares the focus on fast-adaptation during inference with our work. Given a test example, the translation model is fine-tuned by fitting similar sentences from the training set. MbPA can be viewed as a generalisation of such approach: it relies on an episodic memory (rather than the training set), contextual lookup and similarity based weighting scheme to fine-tune the original model. Collectively, these allow MbPA to be a powerful domain-agnostic algorithm, which allows it to handle continual and incremental learning.\nFinally, we mention that our work is closely related to the local regression and adaptive coefficient models literature, see Loader (2006) and references therein.\nLocally adaptive methods achieved relatively modest success in high-dimensional classification problems, as fitting many parameters to a few neighbours often leads to over fitting. We attempt to counter this with contextual lookups and a local modification of only a subset of model parameters."
        },
        {
            "heading": "4 EXPERIMENTS AND RESULTS",
            "text": "Our scheme unifies elements from traditional approaches to continual, one-shot, and incremental or life-long learning. Models that solve these problems must have certain fundamental attributes\nin common: the ability to negate the effects of catastrophic forgetting, unbalanced and scarce data, while displaying rapid acquisition of knowledge and good generalisation.\nIn essence, these problems require the ability to deal with changes and shifts in data distributions. We demonstrate that MbPA provides a way to address this. More concretely, due to the robustness of the local adaptation, the model can deal with shifts in domain distribution (e.g. train vs test set in language), the task label set (e.g. incremental learning) or sequential distributional shifts (e.g. continual learning). Further, MbPA is agnostic to both task domain (e.g. image or language) and choice of underlying parametric model, e.g. convolutional neural networks (LeCun et al., 1998) or LSTM (Hochreiter & Schmidhuber, 1997).\nTo this end, our experiments focus on displaying the advantages of MbPA on widely used tasks and datasets, comparing with competing deep learning methods and baselines. We start by looking at the continual learning framework, followed by incremental learning, the problems of unbalanced data and test time distributional changes."
        },
        {
            "heading": "4.1 CONTINUAL LEARNING: SEQUENTIAL DISTRIBUTIONAL SHIFT",
            "text": "In this set of experiments, we explored the effects of MbPA on continual learning, i.e. when dealing with the problem of sequentially learning multiple tasks without the ability to revisit a task.\nWe considered the permuted MNIST setup (Goodfellow et al., 2013). In this setting, each task was given by a different random permutation of the pixels of the MNIST dataset. We explored a chaining of 20 different tasks (20 different permutations) trained sequentially. The model was tested on all tasks it had been trained on thus far.\nWe trained all models using 10,000 examples per task, comparing to elastic weight consolidation (EWC; Kirkpatrick et al., 2017) and regular gradient descent training. In all cases we rely on a two layer MLP and use Adam (Kingma & Ba, 2014) as the optimiser. The EWC penalty cost was chosen using a grid search, as was the local MbPA learning rate (between 0.0 and 1.0) and number of optimisation steps for MbPA (between 1 and 20).\nFigure 3 compares our approach with that of the baselines. For this particular task we worked directly on pixels as our embedding, i.e. f\u03b3 is the identity function, and explored regimes where the episodic memory is small. A key takeaway of this experiment is that once a task is catastrophically forgotten, we find that only a few gradient steps on carefully selected data from memory are sufficient to recover performance, as MbPA does. Considering the number of updates required to reach the solution from random initialisation, this fact itself might seem surprising. MbPA provides a principled and effective way of performing these updates. The naive approach of performing updates on memories chosen at random from the entire memory is considerably less useful.\nWe outperformed the MLP, and were superior to EWC for all but one memory size (when storing only a 100 examples per task). Further, the performance of our model grew with the number of examples stored, ceteris paribus. Crucially, our memory requirements are much lower than that of EWC, which requires storing model parameters and Fisher matrices for all tasks seen so far. Unlike EWC we do not store any tasks identifiers, merely appending the memory with a few examples. Further, MbPA does not use knowledge of exact task boundaries or identities of tasks switched to, unlike EWC and other methods. This allows for frequent switches that would otherwise hamper the Fisher calculations needed for models like EWC.\nOur method can be combined with any other algorithm such as standard replay from the memory buffer or EWC, providing further improvement. In Figure 3 (right) we combine MbPA and EWC."
        },
        {
            "heading": "4.2 INCREMENTAL LEARNING: SHIFTS IN TASK LABEL DISTRIBUTIONS",
            "text": "The goal of this section was to evaluate the model in the context of incremental learning. We considered a classification scenario where a model pre-trained on a subset of classes, was introduced to novel, previously unseen classes. The aim was to incorporate the new related knowledge, as quickly as possible, while preserving knowledge from the previous set. This was as opposed to the continual learning problem where there are distinct tasks without the ability to revisit old data.\nSpecifically we considered the problem of image classification on the ImageNet dataset (Russakovsky et al., 2015). As a parametric model we used a ResnetV1 model (He et al., 2016). This was pre-trained on a random subset of the ImageNet dataset containing half of the classes. We then presented all 1000 classes and evaluated how quickly the network can acquire this knowledge (i.e. perform well across all 1000 classes).\nFor MbPA, we used the penultimate layer of the network as the embedding network f\u03b3 , forming the key h and query q for our episodic memory M . The last fully connected layer was used to initialise the parametric model g\u03b8. MbPA was applied at test time, using RMSprop with a local learning rate \u03b1M and the number of optimisation steps (as in Algorithm 1) tuned as hyper-parameters.\nA natural baseline was to simply fine-tune the last layer of the parametric model with the new training set. We also evaluated a mixture model, combining the classifications of the parametric model and the non-parametric model at decision level in the following manner:\np(y|q) = \u03bbpparam(y|q) + (1\u2212 \u03bb)pmem(y|q), (5) where the parameter \u03bb \u2208 [0, 1] controls the contribution of each model (this model was proposed by Grave et al. (2016) in the context of language modelling). We created five random splits in new and old classes. Hyperparameters were tuned for all models using the first split and the validation set, and we report the average performance on the remaining splits evaluated on the test set.\nFigure 4 shows the test set performance for all models, split by new and old classes.\nWhile the mixture model provides a large improvement over the plain parametric model, MbPA significantly outperforms both of them both in speed and performance. This is particularly noticeable in the new classes, where MbPA acquires knowledge from very few examples. Table 1 shows a quantitative analysis of these observations. After around 30 epoches the parametric model matches the performance of MbPA. In the appendix we explore sensitivity of MbPA on this task to various hyperparameters (memory size, learning rate)."
        },
        {
            "heading": "4.2.1 UNBALANCED DATASETS",
            "text": "We further explored the incremental introduction of new classes, specifically in the context of unbalanced datasets. Most real world data are unbalanced, whereas standard datasets (like ImageNet) are artificially balanced to play well with deep learning methods.\nWe replicated the setting from the ImageNet experiments in the previous section, where new classes were introduced to a pre-trained model. However, we only showed a tenth of the data for half the new classes and all data for the other half. We report performance on the full balanced validation set. Once again, we compared the parametric model with MbPA and a memory based mixture model.\nResults are summarised in Figure 5 (left). After 20 epochs of training, MbPA outperformed both baselines, with a wider gap in performance than the previous experiment. Further, the mixture model, though equipped with memory, did significantly worse than MbPA, leading us to conclude that the inductive bias in the local adaptation process was well suited to deal with data scarcity."
        },
        {
            "heading": "4.3 LANGUAGE MODELLING: DOMAIN SHIFTS",
            "text": "Finally we considered how MbPA can be used at test time to further improve the performance of language modelling. Given the general formulation of MbPA, this could be applied to any problem where there is a shift in distribution at test time \u2014 we focus on language modelling, where using recent information has proved promising, such as neural cache and dynamic evaluation (Grave et al., 2016; Krause et al., 2017).\nWe considered two datasets with established performance benchmarks, Penn Treebank (PTB; Marcus et al., 1993) and WikiText-2 (Merity et al., 2016). We pre-trained an LSTM and apply MbPA to the weights and biases of the output softmax layer. The memory stores the past LSTM outputs and associated class labels observed during evaluation. Full model details and hyper-parameters are detailed in Appendix B.\nPenn Treebank is a small text corpus containing 887,521 train tokens, 70,390 validation tokens, and 78,669 test tokens; with a vocabulary size of 10,000. The LSTM obtained a test perplexity of 59.6 and this dropped by 4.3 points when interpolated with the neural cache. When we interpolated an LSTM with MbPA we were able to improve on the LSTM baseline by 5.3 points (an additional one from the cache model). We also attempted a dynamic evaluation scheme in a similar style to Krause et al. (2017), where we loaded the Adam optimisation parameters obtained during training and evaluated with training of the LSTM enabled, using a BPTT window of 5 steps. However we did not manage to obtain gains above 1 perplexity from baseline, and so we did not try it for WikiText-2.\nWikiText-2 is a larger text corpus than PTB, derived from Wikipedia articles. It contains 2,088,628 train tokens, 217,646 validation tokens, and 245,569 test tokens, with a vocabulary of 33,278. Our LSTM baseline obtained a test perplexity of 65.9, and this is improved by 14.6 points when mixed with a neural cache. Combining the baseline LSTM with an LSTM fit with MbPA we see a drop of 9.9 points, however the combination of all three models (LSTM baseline + MbPA + cache) produced\nthe largest drop of 15.9 points. Comparing the perplexity word-by-word between LSTM + cache and LSTM + cache + MbPA, we see that MbPA improves predictions for rarer words (Figure 8)."
        },
        {
            "heading": "5 CONCLUSION",
            "text": "We have described Memory-based Parameter Adaptation (MbPA), a scheme for using an episodic memory structure to locally adapt the parameters of a neural network based upon the current input context. MbPA works well on a wide range of supervised learning tasks in several incremental, lifelong learning settings: image classification, language modelling. Our experiments show that MbPA improves performance in continual learning experiments, comparable to or in many cases exceeding the performance of EWC. We also demonstrated that MbPA allows neural networks to rapidly adapt to previously unseen classes in large-scale image classification problems using the ImageNet dataset. Furthermore, MbPA can use the local, contextual updates from memory to counter and alleviate the effect of imbalanced classification data, where some new classes are over-represented at train time whilst others are underrepresented. Finally we demonstrated on two language modelling tasks that MbPA is able to adapts to shifts in word distribution common in language modelling tasks, achieving significant improvements in performance compared to LSTMs and building on methods like neural cache (Grave et al., 2016)."
        },
        {
            "heading": "ACKNOWLEDGMENTS",
            "text": "We would like to thank Gabor Melis for providing the LSTM baselines on the language tasks. We would also like to thank Dharshan Kumaran, Jonathan Hunt, Olivier Tieleman, Koray Kavukcuoglu, Daan Wierstra, Sam Ritter, Jane Wang, Alistair Muldal, Nando de Frietas, Tim Harley, Jacob Menick and Steven Hansen for many helpful comments and invigorating discussions."
        },
        {
            "heading": "A MBPA HYPERPARAMETERS FOR INCREMENTAL LEARNING IMAGENET TASK",
            "text": "MbPA was robust and the inductive bias of the MbPA correction adapts the performance of the model on novel classes. This is shown in Figure 6 (right) where MbPA manages to achieve high performance almost at the same rate, regardless of the learning rate of the underlying parametric component. .\nIn Figure 6 (left) we explore the influence in performance when changing the size of the episodic memory. We can see that the performance on the new classes is more sensitive to this parameter but it quickly saturates after about 400,000 entries. We repeat the above experiment by changing now the number of neighbours retrieved. The results are shown in Figure 7. We can observe that using more neighbours is better, but again, performance saturates quickly after 50 neighbours."
        },
        {
            "heading": "B MODEL DETAILS LANGUAGE MODELLING TASKS",
            "text": "For both datasets we used a single-layer LSTM baseline trained with Adam (Kingma & Ba, 2014) using the regularisation techniques described in Melis et al. (2017).\nIn this application of MbPA the test set is small (e.g. < 80,000 words for PTB), and so it was easy to overfit to the retrieved points. To remedy this, we tuned an L2 penalty \u03b2 ||\u03b8x \u2212 \u03b8||2 term in our MbPA loss (7), where \u03b8 were the parameters derived from the training set and \u03b2 was a scalar hyper-parameter.\nWe swept over the following hyper-parameters:\n\u2022 Memory size: N \u2208 {500, 1000, 5000}\n\u2022 Nearest neighbours: K \u2208 {256, 512} \u2022 Cache interpolation: \u03bbcache \u2208 {0, 0.05, 0.1, 0.15} \u2022 MbPA interpolation: \u03bbmbpa \u2208 {0, 0.05, 0.1, 0.15} \u2022 Number of MbPA optimisation steps: T \u2208 {1, 5, 10} \u2022 MbPA optimization learning rate: \u03b1 \u2208 {0.01, 0.1, 0.15, 0.2, 0.5, 1}\nWhere memory size refers to both the MbPA memory size, and the size of the neural cache for comparison, and the \u03bb interpolation parameters refer to the mixing of model outputs, alike to Eq. 5. The optimal parameters were: N = 5000, K = 256, \u03bbcache = 0.15, \u03bbmbpa = 0.1, T = 1, \u03b1 = 0.15.\nFor Penn Treebank, we used a pre-trained LSTM baseline containing roughly 10M parameters with a hidden size of 1194 and a word embedding size of 268. For WikiText-2, we used a pretrained LSTM baseline containing roughly 24M parameters with a hidden size of 1,853 and a word embedding size of 241."
        },
        {
            "heading": "C COMPARISON OF CACHE VS MBPA FOR WIKITEXT-2",
            "text": "The comparative benefit of MbPA is investigated, when combined with the LSTM + cache model. By computing the perplexity on a per-word basis and comparing whether the inclusion of MbPA improves (lowers) the perplexity, we can understand what types of words are better predicted. Anecdotal samples were not sufficient to understand the trend, however when the words were bucketed by their training frequency, we see a tend of improved performance for less frequent words.\nThis improved performance for rare words may be because the cache model has a prior to boost all recent words. Specifically, the cache probabilities are obtained from summing the attention for each instance of a word in memory, and so frequently occurring recent words that are not very contextually relevant will still be boosted. As MbPA does not do this, it appears to be more sensitive to infrequently occurring words."
        },
        {
            "heading": "D MAP INTERPRETATION OF MBPA AND DERIVATION OF CONTEXTUAL UPDATE",
            "text": "Let xc correspond to the input of the hc, vc key-value pair in the context C of a given input x. In other words, hc was computed by feeding xc to the embedding network. Then the posterior given\nthis pair and the parameter obtained after training \u03b8, can be written as:\np(\u03b8x|\u03b8, xc, vc, x) = p(vc|xc, \u03b8x, x)p(\u03b8x|\u03b8)\np(vc|\u03b8, xc, x) . (6)\nIf we maximise the posterior over the context C with respect to \u03b8x.\narg max \u03b8x EC {log p(\u03b8x|\u03b8, xc, vc, x)} = arg max \u03b8x log p(\u03b8x|\u03b8) + EC {log p(vc|xc, \u03b8x, x)}\n= arg max \u03b8x log p(\u03b8x|\u03b8) + K\u2211 k=1 w (x) k log p(v (x) k |h (x) k , \u03b8 x, x).\n(7)\nLet log p(\u03b8x|\u03b8) \u221d \u2212 ||\u03b8 x\u2212\u03b8||22 2\u03b1M\n(i.e. a Gaussian prior on \u03b8x centred at \u03b8) be thought as a regularisation term that prevents the local adaptation to move \u03b8x too far from \u03b8, preventing overfitting.\nAnother interpretation of (7) is that when the prior is taken to be a Gaussian, it is a form of elastic weight regularisation (similar to Kirkpatrick et al. (2017)) and the second term corresponds to the log likelihood of \u03b8x on the data in the contextC. This can also be seen as posterior sharpening (Fortunato et al., 2017), where we can think of the second term as an approximation of log p(yt|xt, \u03b8). Thus a view of MbPA is it is a form of local elastic weight consolidation on a context dataset C.\nEquation (7) does not have a closed form solution, and requires fitting a large number of parameters at inference time. This can be costly and susceptible to overfitting. We can avoid this problem by simply adapting the reference parameters \u03b8. Specifically, we perform a fixed number of gradient descent steps (or any of its popular variants) to minimise (7). One step of gradient descent to the loss in (7) with respect to \u03b8x yields\n\u2206M (x, \u03b8) = \u2212\u03b1M \u2207\u03b8 K\u2211 k=1 w (x) k log p(v (x) k |h (x) k , \u03b8 x, x) \u2223\u2223\u2223\u2223\u2223 \u03b8 \u2212 \u03b2(\u03b8 \u2212 \u03b8x), (8)\nwhere \u03b2 is a scalar hyper-parameter. These adapted parameters are used for output computation but discarded thereafter."
        },
        {
            "heading": "E ATTENTION AS A SPECIAL CASE OF MBPA",
            "text": "Let C = {(wi, hi, vi)}ki=1 be the neighbourhood retrieved from memory given a query q. The likelihood prediction based on attention is given by\npmem(y = j|q) = \u2211k i=1 wi\u03b4(vi = j)\u2211k\ni=1 wi , (9)\nwhere the Kronecker \u03b4 is one when the equality holds and zero otherwise. We now show how the attention-based prediction given in (9) can be seen as particular case of local adaptation.\nFor classification with c classes, we parameterise pmem via its logits, z \u2208 Rc, with pmem(v|q) = softmax(z). One good candidate z is the one that is the most consistent with context C. Specifically, the logit vector that minimises the weighted average negative log-likelihood (NLL) of the memories in context C:\nzq = argmin z N\u2211 i=1 wi ( zvi \u2212 log( c\u2211 k=1 ezk) ) . (10)\nThe attention weights scale the importance of each memory in the neighbour given its similarity to the query. This matches the loss (7) (ignoring the prior term). If we differentiate the above equation with respect to a zj and set to zero, we obtain exactly the same expression as in (9).\nEffectively, in (10) we are fitting a constant function to the context retrieved from the episodic memory. This is a particular case of a local likelihood model (Loader, 2006). The update also is the same as applying a k-nn, see Figure 2.\nNote that this interpretation is not limited to classification tasks, the exact same reasoning (and result) could be done for a regression task, simply by changing the loss function to be Mean Squared Error (MSE).\nIn this context, we can think of MbPA as a generalisation of the attention mechanism, in which the function used for the local fitting is given by the output network. Moreover, the parameters of the model are used as a prior for solving the local fitting problem and only change slightly to prevent overfitting."
        }
    ],
    "title": "MEMORY-BASED PARAMETER ADAPTATION",
    "year": 2018
}