{
    "abstractText": "In this paper we introduce a generative parametric model capable of producing high quality samples of natural images. Our approach uses a cascade of convolutional networks within a Laplacian pyramid framework to generate images in a coarse-to-fine fashion. At each level of the pyramid, a separate generative convnet model is trained using the Generative Adversarial Nets (GAN) approach [10]. Samples drawn from our model are of significantly higher quality than alternate approaches. In a quantitative assessment by human evaluators, our CIFAR10 samples were mistaken for real images around 40% of the time, compared to 10% for samples drawn from a GAN baseline model. We also show samples from models trained on the higher resolution images of the LSUN scene dataset.",
    "authors": [
        {
            "affiliations": [],
            "name": "Emily Denton"
        },
        {
            "affiliations": [],
            "name": "Soumith Chintala"
        },
        {
            "affiliations": [],
            "name": "Arthur Szlam"
        },
        {
            "affiliations": [],
            "name": "Rob Fergus"
        }
    ],
    "id": "SP:83b7b29bc9fe84cb25152473c48e2437713bc332",
    "references": [
        {
            "authors": [
                "P.J. Burt",
                "Edward",
                "E.H. Adelson"
            ],
            "title": "The laplacian pyramid as a compact image code",
            "venue": "IEEE Transactions on Communications,",
            "year": 1983
        },
        {
            "authors": [
                "J.S. De Bonet"
            ],
            "title": "Multiresolution sampling procedure for analysis and synthesis of texture images",
            "venue": "In Proceedings of the 24th annual conference on Computer graphics and interactive techniques,",
            "year": 1997
        },
        {
            "authors": [
                "J. Deng",
                "W. Dong",
                "R. Socher",
                "L.-J. Li",
                "K. Li",
                "L. Fei-Fei"
            ],
            "title": "Imagenet: A large-scale hierarchical image database",
            "venue": "In CVPR,",
            "year": 2009
        },
        {
            "authors": [
                "A. Dosovitskiy",
                "J.T. Springenberg",
                "T. Brox"
            ],
            "title": "Learning to generate chairs with convolutional neural networks",
            "venue": "arXiv preprint arXiv:1411.5928,",
            "year": 2014
        },
        {
            "authors": [
                "A.A. Efros",
                "T.K. Leung"
            ],
            "title": "Texture synthesis by non-parametric sampling",
            "venue": "In ICCV,",
            "year": 1999
        },
        {
            "authors": [
                "S.A. Eslami",
                "N. Heess",
                "C.K. Williams",
                "J. Winn"
            ],
            "title": "The shape boltzmann machine: a strong model of object shape",
            "venue": "International Journal of Computer Vision,",
            "year": 2014
        },
        {
            "authors": [
                "W.T. Freeman",
                "T.R. Jones",
                "E.C. Pasztor"
            ],
            "title": "Example-based super-resolution",
            "venue": "Computer Graphics and Applications, IEEE,",
            "year": 2002
        },
        {
            "authors": [
                "J. Gauthier"
            ],
            "title": "Conditional generative adversarial nets for convolutional face generation. Class Project for Stanford CS231N: Convolutional Neural Networks for Visual Recognition, Winter semester",
            "year": 2014
        },
        {
            "authors": [
                "I. Goodfellow",
                "J. Pouget-Abadie",
                "M. Mirza",
                "B. Xu",
                "D. Warde-Farley",
                "S. Ozair",
                "A. Courville",
                "Y. Bengio"
            ],
            "title": "Generative adversarial nets",
            "venue": "In NIPS,",
            "year": 2014
        },
        {
            "authors": [
                "K. Gregor",
                "I. Danihelka",
                "A. Graves",
                "D. Wierstra"
            ],
            "title": "DRAW: A recurrent neural network for image generation",
            "venue": "CoRR, abs/1502.04623,",
            "year": 2015
        },
        {
            "authors": [
                "J. Hays",
                "A.A. Efros"
            ],
            "title": "Scene completion using millions of photographs",
            "venue": "ACM Transactions on Graphics (TOG),",
            "year": 2007
        },
        {
            "authors": [
                "G.E. Hinton",
                "R.R. Salakhutdinov"
            ],
            "title": "Reducing the dimensionality of data with neural networks",
            "year": 2006
        },
        {
            "authors": [
                "S. Ioffe",
                "C. Szegedy"
            ],
            "title": "Batch normalization: Accelerating deep network training by reducing internal covariate shift",
            "venue": "arXiv preprint arXiv:1502.03167v3,",
            "year": 2015
        },
        {
            "authors": [
                "D.P. Kingma",
                "M. Welling"
            ],
            "title": "Auto-encoding variational bayes",
            "venue": "ICLR,",
            "year": 2014
        },
        {
            "authors": [
                "A. Krizhevsky",
                "G.E. Hinton"
            ],
            "title": "Factored 3-way restricted boltzmann machines for modeling natural images",
            "venue": "In AISTATS,",
            "year": 2010
        },
        {
            "authors": [
                "M. Mirza",
                "S. Osindero"
            ],
            "title": "Conditional generative adversarial nets",
            "venue": "CoRR, abs/1411.1784,",
            "year": 2014
        },
        {
            "authors": [
                "B.A. Olshausen",
                "D.J. Field"
            ],
            "title": "Sparse coding with an overcomplete basis set: A strategy employed by v1",
            "venue": "Vision research,",
            "year": 1997
        },
        {
            "authors": [
                "S. Osindero",
                "G.E. Hinton"
            ],
            "title": "Modeling image patches with a directed hierarchy of markov random fields",
            "year": 2008
        },
        {
            "authors": [
                "J. Portilla",
                "E.P. Simoncelli"
            ],
            "title": "A parametric texture model based on joint statistics of complex wavelet coefficients",
            "venue": "International Journal of Computer Vision,",
            "year": 2000
        },
        {
            "authors": [
                "M. Ranzato",
                "V. Mnih",
                "J.M. Susskind",
                "G.E. Hinton"
            ],
            "title": "Modeling natural images using gated MRFs",
            "venue": "IEEE Transactions on Pattern Analysis & Machine Intelligence,",
            "year": 2013
        },
        {
            "authors": [
                "D.J. Rezende",
                "S. Mohamed",
                "D. Wierstra"
            ],
            "title": "Stochastic backpropagation and variational inference in deep latent gaussian models",
            "venue": "arXiv preprint arXiv:1401.4082,",
            "year": 2014
        },
        {
            "authors": [
                "S. Roth",
                "M.J. Black"
            ],
            "title": "Fields of experts: A framework for learning image priors",
            "venue": "In In CVPR,",
            "year": 2005
        },
        {
            "authors": [
                "R. Salakhutdinov",
                "G.E. Hinton"
            ],
            "title": "Deep boltzmann machines",
            "venue": "In AISTATS, pages 448\u2013455,",
            "year": 2009
        },
        {
            "authors": [
                "E.P. Simoncelli",
                "W.T. Freeman",
                "E.H. Adelson",
                "D.J. Heeger"
            ],
            "title": "Shiftable multiscale transforms",
            "venue": "Information Theory, IEEE Transactions on,",
            "year": 1992
        },
        {
            "authors": [
                "J. Sohl-Dickstein",
                "E.A. Weiss",
                "N. Maheswaranathan",
                "S. Ganguli"
            ],
            "title": "Deep unsupervised learning using nonequilibrium thermodynamics",
            "venue": "CoRR, abs/1503.03585,",
            "year": 2015
        },
        {
            "authors": [
                "L. Theis",
                "M. Bethge"
            ],
            "title": "Generative image modeling using spatial LSTMs",
            "year": 2015
        },
        {
            "authors": [
                "P. Vincent",
                "H. Larochelle",
                "Y. Bengio",
                "P.-A. Manzagol"
            ],
            "title": "Extracting and composing robust features with denoising autoencoders",
            "venue": "In ICML,",
            "year": 2008
        },
        {
            "authors": [
                "J. Wright",
                "Y. Ma",
                "J. Mairal",
                "G. Sapiro",
                "T.S. Huang",
                "S. Yan"
            ],
            "title": "Sparse representation for computer vision and pattern recognition",
            "venue": "Proceedings of the IEEE,",
            "year": 2010
        },
        {
            "authors": [
                "Y. Zhang",
                "F. Yu",
                "S. Song",
                "P. Xu",
                "A. Seff",
                "J. Xiao"
            ],
            "title": "Large-scale scene understanding challenge",
            "venue": "In CVPR Workshop,",
            "year": 2015
        },
        {
            "authors": [
                "S.C. Zhu",
                "Y. Wu",
                "D. Mumford"
            ],
            "title": "Filters, random fields and maximum entropy (frame): Towards a unified theory for texture modeling",
            "venue": "International Journal of Computer Vision,",
            "year": 1998
        },
        {
            "authors": [
                "D. Zoran",
                "Y. Weiss"
            ],
            "title": "From learning models of natural image patches to whole image restoration",
            "venue": "In ICCV,",
            "year": 2011
        }
    ],
    "sections": [
        {
            "heading": "1 Introduction",
            "text": "Building a good generative model of natural images has been a fundamental problem within computer vision. However, images are complex and high dimensional, making them hard to model well, despite extensive efforts. Given the difficulties of modeling entire scene at high-resolution, most existing approaches instead generate image patches. In contrast, in this work, we propose an approach that is able to generate plausible looking scenes at 32 \u00d7 32 and 64 \u00d7 64. To do this, we exploit the multi-scale structure of natural images, building a series of generative models, each of which captures image structure at a particular scale of a Laplacian pyramid [1]. This strategy breaks the original problem into a sequence of more manageable stages. At each scale we train a convolutional network-based generative model using the Generative Adversarial Networks (GAN) approach of Goodfellow et al. [10]. Samples are drawn in a coarse-to-fine fashion, commencing with a low-frequency residual image. The second stage samples the band-pass structure at the next level, conditioned on the sampled residual. Subsequent levels continue this process, always conditioning on the output from the previous scale, until the final level is reached. Thus drawing samples is an efficient and straightforward procedure: taking random vectors as input and running forward through a cascade of deep convolutional networks (convnets) to produce an image.\nDeep learning approaches have proven highly effective at discriminative tasks in vision, such as object classification [3]. However, the same level of success has not been obtained for generative tasks, despite numerous efforts [13, 24, 28]. Against this background, our proposed approach makes a significant advance in that it is straightforward to train and sample from, with the resulting samples showing a surprising level of visual fidelity, indicating a better density model than prior methods."
        },
        {
            "heading": "1.1 Related Work",
            "text": "Generative image models are well studied, falling into two main approaches: non-parametric and parametric. The former copy patches from training images to perform, for example, texture synthesis [6] or super-resolution [8]. More ambitiously, entire portions of an image can be in-painted, given a sufficiently large training dataset [12]. Early parametric models addressed the easier problem of tex\u2217denotes equal contribution.\nar X\niv :1\n50 6.\n05 75\n1v 1\n[ cs\n.C V\n] 1\n8 Ju\nn 20\nture synthesis [2, 31, 20], with Portilla & Simoncelli [20] making use of a steerable pyramid wavelet representation [25], similar to our use of a Laplacian pyramid. For image processing tasks, models based on marginal distributions of image gradients are effective [18, 23], but are only designed for image restoration rather than being true density models (so cannot sample an actual image). Very large Gaussian mixture models [32] and sparse coding models of image patches [29] can also be used but suffer the same problem.\nA wide variety of deep learning approaches involve generative parametric models. Restricted Boltzmann machines [13, 16, 19, 21], Deep Boltzmann machines [24, 7], Denoising auto-encoders [28] all have a generative decoder that reconstructs the image from the latent representation. Variational auto-encoders [15, 22] provide probabilistic interpretation which facilitates sampling. However, for all these methods convincing samples have only been shown on simple datasets such as MNIST and NORB, possibly due to training complexities which limit their applicability to larger and more realistic images.\nSeveral recent papers have proposed novel generative models. Dosovitskiy et al. [5] showed how a convnet can draw chairs with different shapes and viewpoints. While our model also makes use of convnets, it is able to sample general scenes and objects. The DRAW model of Gregor et al. [11] used an attentional mechanism with an RNN to generate images via a trajectory of patches, showing samples of MNIST and CIFAR10 images. Sohl-Dickstein et al. [26] use a diffusion-based process for deep unsupervised learning and the resulting model is able to produce reasonable CIFAR10 samples. Theis and Bethge [27] employ LSTMs to capture spatial dependencies and show convincing inpainting results of natural textures.\nOur work builds on the GAN approach of Goodfellow et al. [10] which works well for smaller images (e.g. MNIST) but cannot directly handle large ones, unlike our method. Most relevant to our approach is the preliminary work of Mirza and Osindero [17] and Gauthier [9] who both propose conditional versions of the GAN model. The former shows MNIST samples, while the latter focuses solely on frontal face images. Our approach also uses several forms of conditional GAN model but is much more ambitious in its scope."
        },
        {
            "heading": "2 Approach",
            "text": "The basic building block of our approach is the generative adversarial network (GAN) of Goodfellow et al. [10]. After reviewing this, we introduce our LAPGAN model which integrates a conditional form of GAN model into the framework of a Laplacian pyramid."
        },
        {
            "heading": "2.1 Generative Adversarial Networks",
            "text": "The GAN approach [10] is a framework for training generative models, which we briefly explain in the context of image data. The method pits two networks against one another: a generative model G that captures the data distribution and a discriminative model D that distinguishes between samples drawn from G and images drawn from the training data. In our approach, both G and D are convolutional networks. The former takes as input a noise vector z drawn from a distribution pNoise(z) and outputs an image h\u0303. The discriminative network D takes an image as input stochastically chosen (with equal probability) to be either h\u0303 \u2013 as generated from G, or h \u2013 a real image drawn from the training data pData(h). D outputs a scalar probability, which is trained to be high if the input was real and low if generated from G. A minimax objective is used to train both models together:\nmin G max D Eh\u223cpData(h)[logD(h)] + Ez\u223cpNoise(z)[log(1\u2212D(G(z)))] (1)\nThis encourages G to fit pData(h) so as to fool D with its generated samples h\u0303. Both G and D are trained by backpropagating the loss in Eqn. 1 through their respective models to update the parameters.\nThe conditional generative adversarial net (CGAN) is an extension of the GAN where both networks G and D receive an additional vector of information l as input. This might contain, say, information about the class of the training example h. The loss function thus becomes\nmin G max D Eh,l\u223cpData(h,l)[logD(h, l)] + Ez\u223cpNoise(z),l\u223cpl(l)[log(1\u2212D(G(z, l), l))] (2)\nwhere pl(l) is, for example, the prior distribution over classes. This model allows the output of the generative model to be controlled by the conditioning variable l. Mirza and Osindero [17] and\nGauthier [9] both explore this model with experiments on MNIST and faces, using l as a class indicator. In our approach, l will be another image, generated from another CGAN model."
        },
        {
            "heading": "2.2 Laplacian Pyramid",
            "text": "The Laplacian pyramid [1] is a linear invertible image representation consisting of a set of band-pass images, spaced an octave apart, plus a low-frequency residual. Formally, let d(.) be a downsampling operation which blurs and decimates a j\u00d7 j image I , so that d(I) is a new image of size j/2\u00d7 j/2. Also, let u(.) be an upsampling operator which smooths and expands I to be twice the size, so u(I) is a new image of size 2j \u00d7 2j. We first build a Gaussian pyramid G(I) = [I0, I1, . . . , IK ], where I0 = I and Ik is k repeated applications\u2217 of d(.) to I . K is the number of levels in the pyramid, selected so that the final level has very small spatial extent (\u2264 8\u00d7 8 pixels). The coefficients hk at each level k of the Laplacian pyramid L(I) are constructed by taking the difference between adjacent levels in the Gaussian pyramid, upsampling the smaller one with u(.) so that the sizes are compatible: hk = Lk(I) = Gk(I)\u2212 u(Gk+1(I)) = Ik \u2212 u(Ik+1) (3) Intuitively, each level captures image structure present at a particular scale. The final level of the Laplacian pyramid hK is not a difference image, but a low-frequency residual equal to the final Gaussian pyramid level, i.e. hK = IK . Reconstruction from a Laplacian pyramid coefficients [h1, . . . , hK ] is performed using the backward recurrence: Ik = u(Ik+1) + hk (4) which is started with IK = hK and the reconstructed image being I = Io. In other words, starting at the coarsest level, we repeatedly upsample and add the difference image h at the next finer level until we get back to the full resolution image."
        },
        {
            "heading": "2.3 Laplacian Generative Adversarial Networks (LAPGAN)",
            "text": "Our proposed approach combines the conditional GAN model with a Laplacian pyramid representation. The model is best explained by first considering the sampling procedure. Following training (explained below), we have a set of generative convnet models {G0, . . . , GK}, each of which captures the distribution of coefficients hk for natural images at a different level of the Laplacian pyramid. Sampling an image is akin to the reconstruction procedure in Eqn. 4, except that the generative models are used to produce the hk\u2019s:\nI\u0303k = u(I\u0303k+1) + h\u0303k = u(I\u0303k+1) +Gk(zk, u(I\u0303k+1)) (5)\nThe recurrence starts by setting I\u0303K+1 = 0 and using the model at the final level GK to generate a residual image I\u0303K using noise vector zK : I\u0303K = GK(zK). Note that models at all levels except the final are conditional generative models that take an upsampled version of the current image I\u0303k+1 as a conditioning variable, in addition to the noise vector zk. Fig. 1 shows this procedure in action for a pyramid with K = 3 using 4 generative models to sample a 64\u00d7 64 image. The generative models {G0, . . . , GK} are trained using the CGAN approach at each level of the pyramid. Specifically, we construct a Laplacian pyramid from each training image I . At each level \u2217i.e. I2 = d(d(I)).\nwe make a stochastic choice (with equal probability) to either (i) construct the coefficients hk either using the standard procedure from Eqn. 3, or (ii) generate them using Gk:\nh\u0303k = Gk(zk, u(Ik+1)) (6)\nNote that Gk is a convnet which uses a coarse scale version of the image lk = u(Ik+1) as an input, as well as noise vector zk. Dk takes as input hk or h\u0303k, along with the low-pass image lk (which is explicitly added to hk or h\u0303k before the first convolution layer), and predicts if the image was real or generated. At the final scale of the pyramid, the low frequency residual is sufficiently small that it can be directly modeled with a standard GAN: h\u0303K = GK(zK) andDK only has hK or h\u0303K as input. The framework is illustrated in Fig. 2.\nBreaking the generation into successive refinements is the key idea in this work. Note that we give up any \u201cglobal\u201d notion of fidelity; we never make any attempt to train a network to discriminate between the output of a cascade and a real image and instead focus on making each step plausible. Furthermore, the independent training of each pyramid level has the advantage that it is far more difficult for the model to memorize training examples \u2013 a hazard when high capacity deep networks are used.\nAs described, our model is trained in an unsupervised manner. However, we also explore variants that utilize class labels. This is done by add a 1-hot vector c, indicating class identity, as another conditioning variable for Gk and Dk."
        },
        {
            "heading": "3 Model Architecture & Training",
            "text": "We apply our approach to three datasets: (i) CIFAR10 \u2013 32\u00d732 pixel color images of 10 different classes, 100k training samples with tight crops of objects; (ii) STL \u2013 96\u00d796 pixel color images of 10 different classes, 100k training samples (we use the unlabeled portion of data); and (iii) LSUN [30] \u2013 \u223c10M images of 10 different natural scene types, downsampled to 64\u00d764 pixels. For each dataset, we explored a variety of architectures for {Gk, Dk}. We now detail the best performing models, selected using a combination of log-likelihood and visual appearance of the samples. Complete Torch specification files for all models are provided in supplementary material [4]. For all models, the noise vector zk is drawn from a uniform [-1,1] distribution."
        },
        {
            "heading": "3.1 CIFAR10 and STL",
            "text": "Initial scale: This operates at 8 \u00d7 8 resolution, using densely connected nets for both GK & DK with 2 hidden layers and ReLU non-linearities. DK uses Dropout and has 600 units/layer vs 1200 for GK . zK is a 100-d vector.\nSubsequent scales: For CIFAR10, we boost the training set size by taking four 28\u00d7 28 crops from the original images. Thus the two subsequent levels of the pyramid are 8 \u2192 14 and 14 \u2192 28. For STL, we have 4 levels going from 8 \u2192 16 \u2192 32 \u2192 64 \u2192 96. For both datasets, Gk & Dk are convnets with 3 and 2 layers, respectively (see [4]). The noise input zk to Gk is presented as a 4th \u201ccolor plane\u201d to low-pass lk, hence its dimensionality varies with the pyramid level. For CIFAR10, we also explore a class conditional version of the model, where a vector c encodes the label. This is integrated into Gk & Dk by passing it through a linear layer whose output is reshaped into a single plane feature map which is then concatenated with the 1st layer maps. The loss in Eqn. 2 is trained using SGD with an initial learning rate of 0.02, decreased by a factor of (1 + 4 \u00d7 10\u22125) at each epoch. Momentum starts at 0.5, increasing by 0.0008 at epoch up to a maximum of 0.8. During training, we monitor log-likelihood using a Parzen-window estimator and retain the best performing model. Training time depends on the models size and pyramid level, with smaller models taking hours to train and larger models taking several days."
        },
        {
            "heading": "3.2 LSUN",
            "text": "The larger size of this dataset allows us to train a separate LAPGAN model for each the 10 different scene classes. During evaluation, so that we may understand the variation captured by our models, we commence the sampling process with validation set images\u2020, downsampled to 4\u00d7 4 resolution. The four subsequent scales 4 \u2192 8 \u2192 16 \u2192 32 \u2192 64 use a common architecture for Gk & Dk at each level. Gk is a 5-layer convnet with {64, 368, 128, 224} feature maps and a linear output layer. 7 \u00d7 7 filters, ReLUs, batch normalization [14] and Dropout are used at each hidden layer. Dk has 3 hidden layers with {48, 448, 416} maps plus a sigmoid output. See [4] for full details. Note that Gk and Dk are substantially larger than those used for CIFAR10 and STL, as afforded by the larger training set."
        },
        {
            "heading": "4 Experiments",
            "text": "We evaluate our approach using 3 different methods: (i) computation of log-likelihood on a held out image set; (ii) drawing sample images from the model and (iii) a human subject experiment that compares (a) our samples, (b) those of baseline methods and (c) real images."
        },
        {
            "heading": "4.1 Evaluation of Log-Likelihood",
            "text": "A traditional method for evaluating generative models is to measure their log-likelihood on a held out set of images. But, like the original GAN method [10], our approach does not have a direct way of computing the probability of an image. Goodfellow et al. [10] propose using a Gaussian Parzen window estimate to compute log-likelihoods. Despite showing poor performance in high dimensional spaces, this approach is the best one available for estimating likelihoods of models lacking an explicitly represented density function.\nOur LAPGAN model allows for an alternative method of estimating log-likelihood that exploits the multi-scale structure of the model. This new approach uses a Gaussian Parzen window estimate to compute a probability at each scale of the Laplacian pyramid. We use this procedure, described in detail in Appendix A, to compute the log-likelihoods for CIFAR10 and STL images (both at 32\u00d732 resolution). The parameter \u03c3 (controlling the Parzen window size) was chosen using the validation set. We also compute the Parzen window based log-likelihood estimates of the standard GAN [10] model, using 50k samples for both the CIFAR10 and STL estimates. Table 1 shows our model achieving a significantly higher log-likelihood on both datasets. Comparisons to further approaches, notably [26], are problematic due to different normalizations used on the data."
        },
        {
            "heading": "4.2 Model Samples",
            "text": "We show samples from models trained on CIFAR10, STL and LSUN datasets. Additional samples can be found in the supplementary material [4].\n\u2020These were not used in any way during training.\nFig. 3 shows samples from our models trained on CIFAR10. Samples from the class conditional LAPGAN are organized by class. Our reimplementation of the standard GAN model [10] produces slightly sharper images than those shown in the original paper. We attribute this improvement to the introduction of data augmentation. The LAPGAN samples improve upon the standard GAN samples. They appear more object-like and have more clearly defined edges. Conditioning on a class label improves the generations as evidenced by the clear object structure in the conditional LAPGAN samples. The quality of these samples compares favorably with those from the DRAW model of Gregor et al. [11] and also Sohl-Dickstein et al. [26]. The rightmost column of each image shows the nearest training example to the neighboring sample (in L2 pixel-space). This demonstrates that our model is not simply copying the input examples.\nFig. 4(a) shows samples from our LAPGAN model trained on STL. Here, we lose clear object shape but the samples remain sharp. Fig. 4(b) shows the generation chain for random STL samples.\nFig. 5 shows samples from LAPGAN models trained on three LSUN categories (tower, bedroom, church front). The 4 \u00d7 4 validation image used to start the generation process is shown in the first column, along with 10 different 64 \u00d7 64 samples, which illustrate the inherent variation captured by the model. Collectively, these show the models capturing long-range structure within the scenes, being able to recompose scene elements into credible looking images. To the best of our knowledge, no other generative model has been able to produce samples of this complexity. The substantial gain in quality over the CIFAR10 and STL samples is likely due to the much larger training LSUN training set which allowed us to train bigger and deeper models."
        },
        {
            "heading": "4.3 Human Evaluation of Samples",
            "text": "To obtain a quantitative measure of quality of our samples, we asked 15 volunteers to participate in an experiment to see if they could distinguish our samples from real images. The subjects were presented with the user interface shown in Fig. 6(right) and shown at random four different types of image: samples drawn from three different GAN models trained on CIFAR10 ((i) LAPGAN, (ii) class conditional LAPGAN and (iii) standard GAN [10]) and also real CIFAR10 images. After being presented with the image, the subject clicked the appropriate button to indicate if they believed the image was real or generated. Since accuracy is a function of viewing time, we also randomly pick the presentation time from one of 11 durations ranging from 50ms to 2000ms, after which a gray mask image is displayed. Before the experiment commenced, they were shown examples of real images from CIFAR10. After collecting \u223c10k samples from the volunteers, we plot in Fig. 6 the fraction of images believed to be real for the four different data sources, as a function of presentation time. The curves show our models produce samples that are far more realistic than those from standard GAN [10]."
        },
        {
            "heading": "5 Discussion",
            "text": "By modifying the approach in [10] to better respect the structure of images, we have proposed a conceptually simple generative model that is able to produce high-quality sample images that are both qualitatively and quantitatively better than other deep generative modeling approaches. A key point in our work is giving up any \u201cglobal\u201d notion of fidelity, and instead breaking the generation into plausible successive refinements. We note that many other signal modalities have a multiscale structure that may benefit from a similar approach."
        },
        {
            "heading": "Appendix A",
            "text": "To describe the log-likelihood computation in our model, let us consider a two scale pyramid for the moment. Given a (vectorized) j \u00d7 j image I , denote by l = d(I) the coarsened image, and h = I \u2212 u(d(I)) to be the high pass. In this section, to simplify the computations, we use a slightly different u operator than the one used to generate the images displayed in Fig. 3. Namely, here we take d(I) to be the mean over each disjoint block of 2\u00d7 2 pixels, and take u to be the operator that removes the mean from each 2\u00d7 2 block. Since u has rank 3d2/4, in this section, we write h in an orthonormal basis of the range of u, then the (linear) mapping from I to (l, h) is unitary. We now build a probability density p on Rd2 by\np(I) = q0(l, h)q1(l) = q0(d(I), h(I))q1(d(I)); in a moment we will carefully define the functions qi. For now, suppose that qi \u2265 0, \u222b q1(l) dl = 1,\nand for each fixed l, \u222b q0(l, h) dh = 1. Then we can check that p has unit integral:\u222b\np dI = \u222b q0(d(I), h(I))q1(d(I))dI = \u222b \u222b q0(l, h)q1(l) dl dh = 1.\nNow we define the qi with Parzen window approximations to the densities of each of the scales. For q1, we take a set of training samples l1, ...., lN0 , and construct the density function q1(l) \u223c\u2211N1 i=1 e ||l\u2212li||2/\u03c31 . We fix l = d(I) to define q0(I) = q0(l, h) \u223c \u2211N0 i=1 e\n||h\u2212hi||2/\u03c30 .For pyramids with more levels, we continue in the same way for each of the finer scales. Note we always use the true low pass at each scale, and measure the true high pass against the high pass samples generated from the model. Thus for a pyramid with K levels, the final log likelihood will be: log(qK(lK)) +\u2211K\u22121 k=0 log(qk(lk, hk))."
        }
    ],
    "title": "Deep Generative Image Models using a Laplacian Pyramid of Adversarial Networks",
    "year": 2015
}