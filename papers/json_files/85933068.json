{
    "abstractText": "Probabilistic generative models can be used for compression, denoising, inpainting, texture synthesis, semi-supervised learning, unsupervised feature learning, and other tasks. Given this wide range of applications, it is not surprising that a lot of heterogeneity exists in the way these models are formulated, trained, and evaluated. As a consequence, direct comparison between models is often difficult. This article reviews mostly known but often underappreciated properties relating to the evaluation and interpretation of generative models with a focus on image models. In particular, we show that three of the currently most commonly used criteria\u2014average log-likelihood, Parzen window estimates, and visual fidelity of samples\u2014are largely independent of each other when the data is high-dimensional. Good performance with respect to one criterion therefore need not imply good performance with respect to the other criteria. Our results show that extrapolation from one criterion to another is not warranted and generative models need to be evaluated directly with respect to the application(s) they were intended for. In addition, we provide examples demonstrating that Parzen window estimates should generally be avoided.",
    "authors": [
        {
            "affiliations": [],
            "name": "Lucas Theis"
        },
        {
            "affiliations": [],
            "name": "A\u00e4ron van den Oord"
        }
    ],
    "id": "SP:955a9034052f77dea72e44fe5b8ab6457633cbae",
    "references": [
        {
            "authors": [
                "P. Bachman",
                "D. Precup"
            ],
            "title": "Variational Generative Stochastic Networks with Collaborative Shaping",
            "venue": "Proceedings of the 32nd International Conference on Machine Learning,",
            "year": 1964
        },
        {
            "authors": [
                "Y. Bengio",
                "G. Mesnil",
                "Y. Dauphin",
                "S. Rifai"
            ],
            "title": "Better mixing via deep representations",
            "venue": "In Proceedings of the 30th International Conference on Machine Learning,",
            "year": 2013
        },
        {
            "authors": [
                "Y. Bengio",
                "E. Thibodeau-Laufer",
                "G. Alain",
                "J. Yosinski"
            ],
            "title": "Deep generative stochastic networks trainable by backprop, 2013b. arXiv:1306.1091",
            "year": 2013
        },
        {
            "authors": [
                "C.M. Bishop"
            ],
            "title": "Pattern Recognition and Machine Learning",
            "year": 2006
        },
        {
            "authors": [
                "O. Breuleux",
                "Y. Bengio",
                "P. Vincent"
            ],
            "title": "Unlearning for better mixing",
            "venue": "Technical report, Universite de Montreal,",
            "year": 2009
        },
        {
            "authors": [
                "E. Denton",
                "S. Chintala",
                "A. Szlam",
                "R. Fergus"
            ],
            "title": "Deep Generative Image Models using a Laplacian",
            "venue": "Pyramid of Adversarial Networks. arXiv.org,",
            "year": 2015
        },
        {
            "authors": [
                "A. Dosovitskiy",
                "J.T. Springenberg",
                "T. Brox"
            ],
            "title": "Learning to Generate Chairs with Convolutional Neural Networks",
            "venue": "In IEEE International Conference on Computer Vision and Pattern Recognition,",
            "year": 2015
        },
        {
            "authors": [
                "G.K. Dziugaite",
                "D.M. Roy",
                "Z. Ghahramani"
            ],
            "title": "Training generative neural networks via maximum mean discrepancy optimization",
            "year": 2015
        },
        {
            "authors": [
                "L.A. Gatys",
                "A.S. Ecker",
                "M. Bethge"
            ],
            "title": "Texture synthesis and the controlled generation of natural stimuli using convolutional neural networks",
            "year": 2015
        },
        {
            "authors": [
                "H.E. Gerhard",
                "F.A. Wichmann",
                "M. Bethge"
            ],
            "title": "How sensitive is the human visual system to the local statistics of natural images",
            "venue": "PLoS Computational Biology,",
            "year": 2013
        },
        {
            "authors": [
                "I. Goodfellow",
                "J. Pouget-Abadie",
                "M. Mirza",
                "B. Xu",
                "D. Warde-Farley",
                "S. Ozair",
                "A. Courville",
                "Y. Bengio"
            ],
            "title": "Generative adversarial nets",
            "venue": "In Advances in Neural Information Processing Systems",
            "year": 2014
        },
        {
            "authors": [
                "K. Gregor",
                "I. Danihelka",
                "A. Graves",
                "D. Wierstra"
            ],
            "title": "DRAW: A recurrent neural network for image generation",
            "venue": "In Proceedings of the 32nd International Conference on Machine Learning,",
            "year": 2015
        },
        {
            "authors": [
                "A. Gretton",
                "K.M. Borgwardt",
                "M. Rasch",
                "B. Sch\u00f6lkopf",
                "A.J. Smola"
            ],
            "title": "A kernel method for the two-sample-problem",
            "venue": "In Advances in Neural Information Processing Systems",
            "year": 2007
        },
        {
            "authors": [
                "M. Gutmann",
                "A. Hyv\u00e4rinen"
            ],
            "title": "Noise-contrastive estimation: A new estimation principle for unnormalized statistical models",
            "venue": "In Proceedings of the 13th International Conference on Artificial Intelligence and Statistics,",
            "year": 2010
        },
        {
            "authors": [
                "J. Hays",
                "A.A. Efros"
            ],
            "title": "Scene completion using millions of photographs",
            "venue": "ACM Transactions on Graphics (SIGGRAPH),",
            "year": 2007
        },
        {
            "authors": [
                "G.E. Hinton"
            ],
            "title": "Training Products of Experts by Minimizing Contrastive Divergence",
            "venue": "Neural Computation,",
            "year": 2002
        },
        {
            "authors": [
                "A. Hyv\u00e4rinen",
                "J. Hurri",
                "P.O. Hoyer"
            ],
            "title": "Natural Image Statistics: A Probabilistic Approach to Early Computational Vision",
            "year": 2009
        },
        {
            "authors": [
                "A. Hyv\u00e4rinen"
            ],
            "title": "Estimation of non-normalized statistical models using score matching",
            "venue": "Journal of Machine Learning Research,",
            "year": 2005
        },
        {
            "authors": [
                "D.P. Kingma",
                "D.J. Rezende",
                "S. Mohamed",
                "M. Welling"
            ],
            "title": "Semi-supervised learning with deep generative models",
            "venue": "In Advances in Neural Information Processing Systems",
            "year": 2014
        },
        {
            "authors": [
                "S. Lacoste-Julien",
                "F. Huszar",
                "Z. Ghahramani"
            ],
            "title": "Approximate inference for the loss-calibrated Bayesian",
            "venue": "In Proceedings of the 14th International Conference on Artificial Intelligence and Statistics,",
            "year": 2011
        },
        {
            "authors": [
                "J.A. Lasserre",
                "C.M. Bishop",
                "T.P. Minka"
            ],
            "title": "Principled hybrids of generative and discriminative models",
            "venue": "In Proceedings of the Computer Vision and Pattern Recognition Conference,",
            "year": 2006
        },
        {
            "authors": [
                "Y. Li",
                "K. Swersky",
                "R. Zemel"
            ],
            "title": "Generative moment matching networks",
            "venue": "In Proceedings of the 32nd International Conference on Machine Learning,",
            "year": 2015
        },
        {
            "authors": [
                "J. Portilla",
                "E.P. Simoncelli"
            ],
            "title": "A parametric texture model based on joint statistics of complex wavelet coefficients",
            "venue": "International Journal of Computer Vision,",
            "year": 2000
        },
        {
            "authors": [
                "C.E. Shannon"
            ],
            "title": "A mathematical theory of communication",
            "venue": "ACM SIGMOBILE Mobile Computing and Communications Review,",
            "year": 2001
        },
        {
            "authors": [
                "J. Sohl-Dickstein",
                "P. Battaglino",
                "M.R. DeWeese"
            ],
            "title": "Minimum Probability Flow Learning",
            "venue": "In Proceedings of the 28th International Conference on Machine Learning,",
            "year": 2011
        },
        {
            "authors": [
                "J. Sohl-Dickstein",
                "E.A. Weiss",
                "N. Maheswaranathan",
                "S. Ganguli"
            ],
            "title": "Deep unsupervised learning using nonequilibrium thermodynamics",
            "venue": "In Proceedings of the 32nd International Conference on Machine Learning,",
            "year": 2015
        },
        {
            "authors": [
                "L. Theis",
                "M. Bethge"
            ],
            "title": "Generative Image Modeling Using Spatial LSTMs",
            "venue": "In Advances in Neural Information Processing Systems",
            "year": 2015
        },
        {
            "authors": [
                "B. Uria",
                "I. Murray",
                "H. Larochelle"
            ],
            "title": "RNADE: The real-valued neural autoregressive densityestimator",
            "venue": "In Advances in Neural Information Processing Systems",
            "year": 2013
        },
        {
            "authors": [
                "A. van den Oord",
                "J. Dambre"
            ],
            "title": "Locally-connected transformations for deep GMMs",
            "venue": "Deep Learning Workshop,",
            "year": 2015
        },
        {
            "authors": [
                "A. van den Oord",
                "B. Schrauwen"
            ],
            "title": "Factoring Variations in Natural Images with Deep Gaussian Mixture Models",
            "venue": "In Advances in Neural Information Processing Systems",
            "year": 2014
        },
        {
            "authors": [
                "Z. Wang",
                "A.C. Bovik"
            ],
            "title": "Mean squared error: Love it or leave it",
            "venue": "IEEE Signal Processing Magazine,",
            "year": 2009
        },
        {
            "authors": [
                "M. Welling",
                "Y.W. Teh"
            ],
            "title": "Bayesian Learning via Stochastic Gradient Langevin Dynamics",
            "venue": "In Proceedings of the 28th International Conference on Machine Learning,",
            "year": 2011
        }
    ],
    "sections": [
        {
            "heading": "1 INTRODUCTION",
            "text": "Generative models have many applications and can be evaluated in many ways. For density estimation and related tasks, log-likelihood (or equivalently Kullback-Leibler divergence) has been the de-facto standard for training and evaluating generative models. However, the likelihood of many interesting models is computationally intractable. For example, the normalization constant of unnormalized energy-based models is generally difficult to compute, and latent-variable models often require us to solve complex integrals to compute the likelihood. These models may still be trained with respect to a different objective that is more or less related to log-likelihood, such as contrastive divergence (Hinton, 2002), score matching (Hyva\u0308rinen, 2005), lower bounds on the log-likelihood (Bishop, 2006), noise-contrastive estimation (Gutmann & Hyva\u0308rinen, 2010), probability flow (SohlDickstein et al., 2011), maximum mean discrepancy (MMD) (Gretton et al., 2007; Li et al., 2015), or approximations to the Jensen-Shannon divergence (JSD) (Goodfellow et al., 2014).\nFor computational reasons, generative models are also often compared in terms of properties more readily accessible than likelihood, even when the task is density estimation. Examples include visualizations of model samples, interpretations of model parameters (Hyva\u0308rinen et al., 2009), Parzen window estimates of the model\u2019s log-likelihood (Breuleux et al., 2009), and evaluations of model performance in surrogate tasks such as denoising or missing value imputation.\nIn this paper, we look at some of the implications of choosing certain training and evaluation criteria. We first show that training objectives such as JSD and MMD can result in very different optima than \u2217These authors contributed equally to this work. \u2020Now at Google DeepMind.\nar X\niv :1\n51 1.\n01 84\n4v 3\n[ st\nat .M\nL ]\n2 4\nA pr"
        },
        {
            "heading": "Data KLD MMD JSD",
            "text": "log-likelihood. We then discuss the relationship between log-likelihood, classification performance, visual fidelity of samples and Parzen window estimates. We show that good or bad performance with respect to one metric is no guarantee of good or bad performance with respect to the other metrics. In particular, we show that the quality of samples is generally uninformative about the likelihood and vice versa, and that Parzen window estimates seem to favor models with neither good likelihood nor samples of highest possible quality. Using Parzen window estimates as a criterion, a simple model based on k-means outperforms the true distribution of the data."
        },
        {
            "heading": "2 TRAINING OF GENERATIVE MODELS",
            "text": "Many objective functions and training procedures have been proposed for optimizing generative models. The motivation for introducing new training methods is typically the wish to fit probabilistic models with computationally intractable likelihoods, rendering direct maximum likelihood learning impractical. Most of the available training procedures are consistent in the sense that if the data is drawn from a model distribution, then this model distribution will be optimal under the training objective in the limit of an infinite number of training examples. That is, if the model is correct, and for extremely large amounts of data, all of these methods will produce the same result. However, when there is a mismatch between the data distribution and the model, different objective functions can lead to very different results.\nFigure 1 illustrates this on a simple toy example where an isotropic Gaussian distribution has been fit to a mixture of Gaussians by minimizing various measures of distance. Maximum mean discrepancy (MMD) has been used with generative moment matching networks (Li et al., 2015; Dziugaite et al., 2015) and Jensen-Shannon divergence (JSD) has connections to the objective function optimized by generative adversarial networks (Goodfellow et al., 2014) (see box for a definition). Minimizing MMD or JSD yields a Gaussian which fits one mode well, but which ignores other parts of the data. On the other hand, maximizing average log-likelihood or equivalently minimizing Kullback-Leibler divergence (KLD) avoids assigning extremely small probability to any data point but assigns a lot of probability mass to non-data regions.\nUnderstanding the trade-offs between different measures is important for several reasons. First, different applications require different trade-offs, and we want to choose the right metric for a given application. Assigning sufficient probability to all plausible images is important for compression, but it may be enough to generate a single plausible example in certain image reconstruction applications (e.g., Hays & Efros, 2007). Second, a better understanding of the trade-offs allows us to better interpret and relate empirical findings. Generative image models are often assessed based on the visual fidelity of generated samples (e.g., Goodfellow et al., 2014; Gregor et al., 2015; Denton et al., 2015; Li et al., 2015). Figure 1 suggests that a model optimized with respect to KLD is more likely to produce atypical samples than the same model optimized with respect to one of the other two measures. That is, plausible samples\u2014in the sense of having large density under the target\nMMD (Gretton et al., 2007) is defined as,\nMMD[p, q] = (Ep,q[k(x,x\u2032)\u2212 2k(x,y) + k(y,y\u2032)]) 1 2 , (1)\nwhere x,x\u2032 are indepent and distributed according to the data distribution p, and y,y\u2032 are independently distributed according to the model distribution q. We followed the approach of Li et al. (2015), optimizing an empirical estimate of MMD and using a mixture of Gaussian kernels with various bandwidths for k.\nJSD is defined as\nJSD[p, q] = 1 2 KLD[p || m] + 1 2 KLD[q || m], (2)\nwherem = (p+q)/2 is an equal mixture of distributions p and q. We optimized JSD directly using the data density, which is generally not possible in practice where we only have access to samples from the data distribution. In this case, generative adversarial networks (GANs) may be used to approximately optimize JSD, although in practical applications the objective function optimized by GANs can be very different from JSD. Parameters were initialized at the maximum likelihood solution in all cases, but the same optimum was consistently found using random initializations.\ndistribution\u2014are not necessarily an indication of a good density model as measured by KLD, but may be expected when optimizing JSD."
        },
        {
            "heading": "3 EVALUATION OF GENERATIVE MODELS",
            "text": "Just as choosing the right training method is important for achieving good performance in a given application, so is choosing the right evaluation metric for drawing the right conclusions. In the following, we first continue to discuss the relationship between average log-likelihood and the visual appearance of model samples.\nModel samples can be a useful diagnostic tool, often allowing us to build an intuition for why a model might fail and how it could be improved. However, qualitative as well as quantitative analyses based on model samples can be misleading about a model\u2019s density estimation performance, as well as the probabilistic model\u2019s performance in applications other than image synthesis. Below we summarize a few examples demonstrating this."
        },
        {
            "heading": "3.1 LOG-LIKELIHOOD",
            "text": "Average log-likelihood is widely considered as the default measure for quantifying generative image modeling performance. However, care needs to be taken to ensure that the numbers measured are meaningful. While natural images are typically stored using 8-bit integers, they are often modeled using densities, i.e., an image is treated as an instance of a continuous random variable. Since the discrete data distribution has differential entropy of negative infinity, this can lead to arbitrary high likelihoods even on test data. To avoid this case, it is becoming best practice to add real-valued noise to the integer pixel values to dequantize the data (e.g., Uria et al., 2013; van den Oord & Schrauwen, 2014; Theis & Bethge, 2015).\nIf we add the right amount of uniform noise, the log-likelihood of the continuous model on the dequantized data is closely related to the log-likelihood of a discrete model on the discrete data. Maximizing the log-likelihood on the continuous data also optimizes the log-likelihood of the discrete model on the original data. This can be seen as follows.\nConsider images x \u2208 {0, ..., 255}D with a discrete probability distribution P (x), uniform noise u \u2208 [0, 1[D, and noisy data y = x+u. If p refers to the noisy data density and q refers to the model density, then we have for the average log-likelihood:\n\u222b p(y) log q(y) dy = \u2211 x P (x) \u222b [0,1[D log q(x+ u) du (3)\n\u2264 \u2211 x P (x) log \u222b [0,1[D q(x+ u) du (4)\n= \u2211 x P (x) logQ(x), (5)\nwhere the second step follows from Jensen\u2019s inequality and we have defined\nQ(x) = \u222b [0,1[D q(x+ u) du (6)\nfor x \u2208 ZD. The left-hand side in Equation 3 is the expected log-likelihood which would be estimated in a typical benchmark. The right-hand side is the log-likelihood of the probability mass function Q on the original discrete-valued image data. The negative of this log-likelihood is equivalent to the average number of bits (assuming base-2 logarithm) required to losslessly compress the discrete data with an entropy coding scheme optimized for Q (Shannon, 2001)."
        },
        {
            "heading": "SEMI-SUPERVISED LEARNING",
            "text": "A second motivation for using log-likelihood comes from semi-supervised learning. Consider a dataset consisting of images X and corresponding labels Y for some but not necessarily all of the images. In classification, we are interested in the prediction of a class label y for a previously unseen query image x. For a given model relating x, y, and parameters \u03b8, the only correct way to infer the distribution over y\u2014from a Bayesian point of view \u2014is to integrate out the parameters (e.g., Lasserre et al., 2006),\np(y | x,X ,Y) = \u222b p(\u03b8 | X ,Y)p(y | x,\u03b8) d\u03b8. (7)\nWith sufficient data and under certain assumptions, the above integral will be close to p(y | x, \u03b8\u0302MAP), where\n\u03b8\u0302MAP = argmax\u03b8 p(\u03b8 | X ,Y) (8) = argmax\u03b8 [log p(\u03b8) + log p(X | \u03b8) + log p(Y | X ,\u03b8)] . (9)\nWhen no training labels are given, i.e., in the unsupervised setting, and for a uniform prior over parameters, it is therefore natural to try to optimize the log-likelihood, log p(X | \u03b8). In practice, this approach might fail because of a mismatch between the model and the data, because of an inability to solve Equation 9, or because of overfitting induced by the MAP approximation. These issues can be addressed by better image models (e.g., Kingma et al., 2014), better optimization and inference procedures, or a more Bayesian treatment of the parameters (e.g., Lacoste-Julien et al., 2011; Welling & Teh, 2011)."
        },
        {
            "heading": "3.2 SAMPLES AND LOG-LIKELIHOOD",
            "text": "For many interesting models, average log-likelihood is difficult to evaluate or even approximate. For some of these models at least, generating samples is a lot easier. It would therefore be useful if we could use generated samples to infer something about a model\u2019s log-likelihood. This approach is also intuitive given that a model with zero KL divergence will produce perfect samples, and visual inspection can work well in low dimensions for assessing a model\u2019s fit to data. Unfortunately these intuitions can be misleading when the image dimensionality is high. A model can have poor loglikelihood and produce great samples, or have great log-likelihood and produce poor samples."
        },
        {
            "heading": "POOR LOG-LIKELIHOOD AND GREAT SAMPLES",
            "text": "A simple lookup table storing enough training images will generate convincing looking images but will have poor average log-likelihood on unseen test data. Somewhat more generally we might\nconsider a mixture of Gaussian distributions,\nq(x) = 1\nN \u2211 n N (x;xn, \u03b52I), (10)\nwhere the means xn are either training images or a number of plausible images derived from the training set (e.g., using a set of image transformations). If \u03b5 is small enough such that the Gaussian noise becomes imperceptible, this model will generate great samples but will still have very poor log-likelihood. This shows that plausible samples are clearly not sufficient for a good log-likelihood.\nGerhard et al. (2013) empirically found a correlation between some models\u2019 log-likelihoods and their samples\u2019 ability to fool human observers into thinking they were extracted from real images. However, the image patches were small and all models used in the study were optimized to minimize KLD. The correlation between log-likelihood and sample quality may disappear, for example, when considering models optimized for different objective functions or already when considering a different set of models."
        },
        {
            "heading": "GREAT LOG-LIKELIHOOD AND POOR SAMPLES",
            "text": "Perhaps surprisingly, the ability to produce plausible samples is not only not sufficient, but also not necessary for high likelihood as a simple argument by van den Oord & Dambre (2015) shows: Assume p is the density of a model for d dimensional data x which performs arbitrarily well with respect to average log-likelihood and q corresponds to some bad model (e.g., white noise). Then samples generated by the mixture model\n0.01p(x) + 0.99q(x) (11)\nwill come from the poor model 99% of the time. Yet the log-likelihood per pixel will hardly change if d is large:\nlog [0.01p(x) + 0.99q(x)] \u2265 log [0.01p(x)] = log p(x)\u2212 log 100 (12)\nFor high-dimensional data, log p(x) will be proportional to d while log 100 stays constant. For instance, already for the 32 by 32 images found in the CIFAR-10 dataset the difference between log-likelihoods of different models can be in the thousands, while log(100) is only about 4.61 nats (van den Oord & Dambre, 2015). This shows that a model can have large average log-likelihood but generate very poor samples."
        },
        {
            "heading": "GOOD LOG-LIKELIHOOD AND GREAT SAMPLES",
            "text": "Note that we could have also chosen q (Equation 11) such that it reproduces training examples, e.g., by choosing q as in Equation 10. In this case, the mixture model would generate samples indistinguishable from real images 99% of the time while the log-likelihood would again only change by at most 4.61 nats. This shows that any model can be turned into a model which produces realistic samples at little expense to its log-likelihood. Log-likelihood and visual appearance of samples are therefore largely independent."
        },
        {
            "heading": "3.3 SAMPLES AND APPLICATIONS",
            "text": "One might conclude that something must be wrong with log-likelihood if it does not care about a model\u2019s ability to generate plausible samples. However, note that the mixture model in Equation 11 might also still work very well in applications. While q is much more likely a priori, p is going to be much more likely a posteriori in tasks like inpainting, denoising, or classification. Consider prediction of a quantity y representing, for example, a class label or missing pixels. A model with joint distribution\n0.01p(x)p(y | x) + 0.99q(x)q(y | x) (13)\nmay again generate poor samples 99% of the time. For a given fixed x, the posterior over y will be a mixture\n\u03b1p(y | x) + (1\u2212 \u03b1)q(y | x), (14)\nA B\nwhere a few simple calculations show that\n\u03b1 = \u03c3 (ln p(x)\u2212 ln q(x)\u2212 ln 99) (15)\nand \u03c3 is the sigmoidal logistic function. Since we assume that p is a good model, q is a poor model, and x is high-dimensional, we have\nln p(x) ln q(x) + ln 99 (16)\nand therefore \u03b1 \u2248 1. That is, mixing with q has hardly changed the posterior over y. While the samples are dominated by q, the classification performance is dominated by p. This shows that high visual fidelity of samples is generally not necessary for achieving good performance in applications."
        },
        {
            "heading": "3.4 EVALUATION BASED ON SAMPLES AND NEAREST NEIGHBORS",
            "text": "A qualitative assessment based on samples can be biased towards models which overfit (Breuleux et al., 2009). To detect overfitting to the training data, it is common to show samples next to nearest neighbors from the training set. In the following, we highlight two limitations of this approach and argue that it is unfit to detect any but the starkest forms of overfitting.\nNearest neighbors are typically determined based on Euclidean distance. But already perceptually small changes can lead to large changes in Euclidean distance, as is well known in the psychophysics literature (e.g., Wang & Bovik, 2009). To illustrate this property, we used the top-left 28 by 28 pixels of each image from the 50,000 training images of the CIFAR-10 dataset. We then shifted this 28 by 28 window one pixel down and one pixel to the right and extracted another set of images. We repeated this 4 times, giving us 4 sets of images which are increasingly different from the training set. Figure 2A shows nearest neighbors of corresponding images from the query set. Although the images have hardly changed visually, a shift by only two pixels already caused a different nearest neighbor. The plot also shows Euclidean distances to 100 randomly picked images from the training set. Note that with a bigger dataset, a switch to a different nearest neighbor becomes more likely. Figure 2B shows the fraction of query images assigned to the correct training image in our example. A model which stores transformed training images can trivially pass the nearest-neighbor overfitting test. This problem can be alleviated by choosing nearest neighbors based on perceptual metrics, and by showing more than one nearest neighbor.\nA second problem concerns the entropy of the model distribution and is harder to address. There are different ways a model can overfit. Even when overfitting, most models will not reproduce perfect or trivially transformed copies of the training data. In this case, no distance metric will find a close match in the training set. A model which overfits might still never generate a plausible image or might only be able to generate a small fraction of all plausible images (e.g., a model as in Equation 10 where instead of training images we store several transformed versions of the\nModel Parzen est. [nat] Stacked CAE 121\nDBN 138 GMMN 147 Deep GSN 214 Diffusion 220\nGAN 225 True distribution 243\nGMMN + AE 282 k-means 313\nTable 1: Using Parzen window estimates to evaluate various models trained on MNIST, samples from the true distribution perform worse than samples from a simple model trained with k-means.\ntraining images, or a model which only describes data in a lower-dimensional subspace). Because the number of images we can process is vanishingly small compared to the vast number of possible images, we would not be able to detect this by looking at samples from the model."
        },
        {
            "heading": "3.5 EVALUATION BASED ON PARZEN WINDOW ESTIMATES",
            "text": "When log-likelihoods are unavailable, a common alternative is to use Parzen window estimates. Here, samples are generated from the model and used to construct a tractable model, typically a kernel density estimator with Gaussian kernel. A test log-likelihood is then evaluated under this model and used as a proxy for the true model\u2019s log-likelihood (Breuleux et al., 2009). Breuleux et al. (2009) suggested to fit the Parzen windows on both samples and training data, and to use at least as many samples as there are images in the training set. Following Bengio et al. (2013a), Parzen windows are in practice commonly fit to only 10,000 samples (e.g., Bengio et al., 2013b; Goodfellow et al., 2014; Li et al., 2015; Sohl-Dickstein et al., 2015). But even for a large number of samples Parzen window estimates generally do not come close to a model\u2019s true log-likelihood when the data dimensionality is high. In Figure 3 we plot Parzen window estimates for a multivariate Gaussian distribution fit to small CIFAR-10 image patches (of size 6 by 6). We added uniform noise to the data (as explained in Section 3.1) and rescaled between 0 and 1. As we can see, a completely infeasible number of samples would be needed to get close to the actual log-likelihood even for this small scale example. For higher dimensional data this effect would only be more pronounced.\nWhile the Parzen window estimate may be far removed from a model\u2019s true log-likelihood, one could still hope that it produces a similar or otherwise useful ranking when applied to different models. Counter to this idea, Parzen window estimates of the likelihood have been observed to produce rankings different from other estimates (Bachman & Precup, 2015). More worryingly, a GMMN+AE (Li et al., 2015) is assigned a higher score than images from the training set (which are samples from the true distribution) when evaluated on MNIST (Table 1). Furthermore it is relatively easy to exploit the Parzen window loss function to achieve even better results. To illustrate this, we fitted 10,000 centroids to the training data using k-means. We then generated 10,000 independent samples by sampling centroids with replacement. Note that this corresponds to the model in Equation 10, where the standard deviation of the Gaussian noise is zero and instead of training examples we use the centroids. We find that samples from this k-means based model are assigned a higher score than any other model, while its actual log-likelihood would be \u2212\u221e."
        },
        {
            "heading": "4 CONCLUSION",
            "text": "We have discussed the optimization and evaluation of generative image models. Different metrics can lead to different trade-offs, and different evaluations favor different models. It is therefore important that training and evaluation match the target application. Furthermore, we should be cautious not to take good performance in one application as evidence of good performance in another application.\nAn evaluation based on samples is biased towards models which overfit and therefore a poor indicator of a good density model in a log-likelihood sense, which favors models with large entropy. Conversely, a high likelihood does not guarantee visually pleasing samples. Samples can take on arbitrary form only a few bits from the optimum. It is therefore unsurprising that other approaches than density estimation are much more effective for image synthesis (Portilla & Simoncelli, 2000; Dosovitskiy et al., 2015; Gatys et al., 2015). Samples are in general also an unreliable proxy for a model\u2019s performance in applications such as classification or inpainting, as discussed in Section 3.3.\nA subjective evaluation based on visual fidelity of samples is still clearly appropriate when the goal is image synthesis. Such an analysis at least has the property that the data distribution will perform very well in this task. This cannot be said about Parzen window estimates, where the data distribution performs worse than much less desirable models1. We therefore argue Parzen window estimates should be avoided for evaluating generative models, unless the application specifically requires such a loss function. In this case, we have shown that a k-means based model can perform better than the true density. To summarize, our results demonstrate that for generative models there is no one-fits-all loss function but a proper assessment of model performance is only possible in the the context of an application."
        },
        {
            "heading": "ACKNOWLEDGMENTS",
            "text": "The authors would like to thank Jascha Sohl-Dickstein, Ivo Danihelka, Andriy Mnih, and Leon Gatys for their valuable input on this manuscript."
        }
    ],
    "title": "A NOTE ON THE EVALUATION OF GENERATIVE MODELS",
    "year": 2016
}