{
    "abstractText": "Flower pollination is an intriguing process in the natural world. Its evolutionary characteristics can be used to design new optimization algorithms. In this paper, we propose a new algorithm, namely, flower pollination algorithm, inspired by the pollination process of flowers. We first use ten test functions to validate the new algorithm, and compare its performance with genetic algorithms and particle swarm optimization. Our simulation results show the flower algorithm is more efficient than both GA and PSO. We also use the flower algorithm to solve a nonlinear design benchmark, which shows the convergence rate is almost exponential. Citation Details: Xin-She Yang, Flower pollination algorithm for global optimization, in: Unconventional Computation and Natural Computation 2012, Lecture Notes in Computer Science, Vol. 7445, pp. 240-249 (2012).",
    "authors": [
        {
            "affiliations": [],
            "name": "Xin-She Yang"
        }
    ],
    "id": "SP:94f32df65915ce1150ed21abc8c4bab822ca96ad",
    "references": [
        {
            "authors": [
                "D.H. Ackley"
            ],
            "title": "A Connectionist Machine for Genetic Hillclimbing",
            "venue": "Kluwer Academic Publishers,",
            "year": 1987
        },
        {
            "authors": [
                "L.C. Cagnina",
                "S.C. Esquivel",
                "C.A. Coello"
            ],
            "title": "Solving engineering optimization problems with the simple constrained particle swarm optimizer",
            "venue": "Informatica, 32,",
            "year": 2008
        },
        {
            "authors": [
                "L. Chittka",
                "J.D. Thomson",
                "N.M. Waser"
            ],
            "title": "Flower constancy, insect psychology, and plant evolution, Naturwissenschaften",
            "year": 1999
        },
        {
            "authors": [
                "A.H. Gandomi",
                "X.S. Yang",
                "A.H. Alavi"
            ],
            "title": "Cuckoo search algorithm: a metaheuristic approach to solve structural optimization problems, Engineering with Computers, 27, article",
            "venue": "DOI 10.1007/s00366-011-0241-y,",
            "year": 2011
        },
        {
            "authors": [
                "B.J. Glover"
            ],
            "title": "Understanding Flowers and Flowering: An Integrated Approach",
            "year": 2007
        },
        {
            "authors": [
                "E. Goldberg D"
            ],
            "title": "Genetic Algorithms in Search, Optimisation and Machine",
            "year": 1989
        },
        {
            "authors": [
                "J. Holland"
            ],
            "title": "Adaptation in Natural and Artificial Systems, University of Michigan Press",
            "venue": "Ann Anbor,",
            "year": 1975
        },
        {
            "authors": [
                "M. Kazemian",
                "Y. Ramezani",
                "C. Lucas",
                "B. Moshiri"
            ],
            "title": "Swarm clustering based on flowers pollination by artificial bees, in:Swarm Intelligence in Data Mining, Studies",
            "venue": "Computational Intelligence,",
            "year": 2006
        },
        {
            "authors": [
                "J. Kennedy",
                "C. Eberhart R"
            ],
            "title": "Particle swarm optimization",
            "venue": "Proc. of IEEE International Conference on Neural Networks,",
            "year": 1995
        },
        {
            "authors": [
                "I. Pavlyukevich"
            ],
            "title": "L\u00e9vy flights, non-local search and simulated annealing",
            "venue": "J. Computational Physics,",
            "year": 2007
        },
        {
            "authors": [
                "M. Reynolds A",
                "A. Frye M"
            ],
            "title": "Free-flight odor tracking in Drosophila is consistent with an optimal intermittent scale-free search",
            "venue": "PLoS One,",
            "year": 2007
        },
        {
            "authors": [
                "M. Walker"
            ],
            "title": "How flowers conquered the world",
            "venue": "BBC Earth News,",
            "year": 2009
        },
        {
            "authors": [
                "N.M. Waser"
            ],
            "title": "Flower constancy: definition, cause and measurement",
            "venue": "The American Naturalist,",
            "year": 1986
        },
        {
            "authors": [
                "X.S. Yang"
            ],
            "title": "Nature-Inspired Metaheuristic Algorithms",
            "year": 2008
        },
        {
            "authors": [
                "X.S. Yang"
            ],
            "title": "Firefly algorithm, stochastic test functions and design optimisation",
            "venue": "Int. J. Bio-Inspired Computation,",
            "year": 2010
        },
        {
            "authors": [
                "X.S. Yang"
            ],
            "title": "Engineering Optimization: An Introduction with Metaheuristic",
            "year": 2010
        },
        {
            "authors": [
                "X.S. Yang"
            ],
            "title": "A new metaheuristic bat-inspired algorithm, in: Nature-Inspired Cooperative Strategies for Optimization (NICSO 2010) (Eds",
            "venue": "Gonzalez J. R. et al.), Springer,",
            "year": 2010
        }
    ],
    "sections": [
        {
            "text": "ar X\niv :1\n31 2.\n56 73\nv1 [\nm at\nh. O\nC ]\nCitation Details: Xin-She Yang, Flower pollination algorithm for global optimization, in: Unconventional Computation and Natural Computation 2012, Lecture Notes in Computer Science, Vol. 7445, pp. 240-249 (2012)."
        },
        {
            "heading": "1 Introduction",
            "text": "Nature has been solving challenging problems over millions and billions of years, and many biological systems have evolved with intriguing and surprising efficiency in maximizing their evolutionary objectives such as reproduction. Based on the successfully characteristics of biological systems, many nature-inspired algorithms have been developed over the last few decades [18, 20]. For example, genetic algorithms were based on the Darwinian evolution of biological systems [9] and particle swarm optimization was based on the swarm behaviour of birds and fish [11, 12], which bat algorithm was based on the echolocation behaviour of microbats [21] and firefly algorithm was based on the flashing light patterns of tropic fireflies [18, 19]. All these algorithms have been applied to a wide range of applications.\nIn many design applications in engineering and industry, we have to try to find the optimal solution to a given problem under highly complex constraints. Such constrained optimization problems are often highly nonlinear, to find the optimal solutions is often a very challenging task if it is not impossible. Most conventional optimization do not work well for problems with nonlinearity and multimodality. Current trend is to use nature-inspired metaheuristic algorithms to tackle such difficult problems, and it has been shown that metaheuristics are surprisingly very efficient. For this reason, the literature of metaheuristics has expanded tremendously in the last two decades [18, 20]. Up to now, researchers have only use a very limited characateristics inspired by nature, and there is room for more algorithm development.\nIn this paper, we will propose a new algorithm based on the flower pollination process of flowering plants. We will first briefly review the main characteristics of flower pollination,\nand thus idealize these characteristics into four rules. We will then use them to develop a flower pollination algorithm (FPA), or the flower algorithm. Then, we validate it using a set of well-known test functions and design benchmark. We analyze the simulations and make comparison of its performance with genetic algorithm and particle swarm optimization. Finally, we discuss further topics for extending this algorithm.\nFrom the biological evolution point of view, the objective of the flower pollination is the survival of the fittest and the optimal reproduction of plants in terms of numbers as well as most fittest. This is in fact an optimization process of plant species. All the above factors and processes of flower pollination interact so as to achieve optimal reproduction of the flowering plants. Therefore, this can inspire to design new optimization algorithm. The basic idea of flower pollination in the context of bees and clustering was investigated before [10], but in this paper, we will design a completely new optimization solely based on the flower pollination characteristics."
        },
        {
            "heading": "2 Characteristics of Flower Pollination",
            "text": "It is estimated that there are over a quarter of a million types of flowering plants in Nature and that about 80% of all plant species are flowering species. It still remains partly a mystery how flowering plants came to dominate the landscape from Cretaceous period [16, 22]. Flowering plant has been evolving for more than 125 million years and flowers have become so influential in evolution, we cannot image how the plant world would be without flowers. The main purpose of a a flower is ultimately reproduction via pollination. Flower pollination is typically associated with the transfer of pollen, and such transfer is often linked with pollinators such as insects, birds, bats and other animals. In fact, some flowers and insects have co-evolved into a very specialized flower-pollinator partnership. For example, some flowers can only attract and can only depend on a specific species of insects for successful pollination [7].\nPollination can take two major forms: abiotic and biotic. About 90% of flowering plants belong to biotic pollination, that is, pollen is transferred by a pollinator such as insects and animals. About 10% of pollination takes abiotic form which does not require any pollinators. Wind and diffusion in water help pollination of such flowering plants and grass is a good example [14, 7]. Pollinators, or sometimes called pollen vectors, can be very diverse. It is estimate there are at least 200,000 variety of pollinators such as insects, bats and birds.\nHoneybees are a good example of pollinator, and they can also developed the so-called flower constancy [3]. That is, these pollinators tend to visit exclusive certain flower species while bypassing other flower species. Such flower constancy may have evolutionary advantages because this will maximize the transfer of flower pollen to the same or conspecific plants, and thus maximizing the reproduction of the same flower species. Such flower constancy may be advantageous for pollinators as well, because they can be sure that nectar supply is available with their limited memory and minimum cost of learning or exploring. Rather than focusing on some unpredictable but potentially more rewarding new flower species, flower constancy may require minimum investment cost and more likely guaranteed intake of nectar [17].\nPollination can be achieved by self-pollination or cross-pollination. Cross-pollination, or allogamy, means pollination can occur from pollen of a flower of a different plant, while self-pollination is the fertilization of one flower, such as peach flowers, from pollen of the same flower or different flowers of the same plant, which often occurs when there is no\nreliable pollinator available. Biotic, cross-pollination may occur at long distance, and the pollinators such as bees, bats, birds and flies can fly a long distance, thus they can considered as the global pollination. In addition, bees and birds may behave as Le\u0301vy flight behaviour [13], with jump or fly distance steps obey a Le\u0301vy distribution. Furthermore, flower constancy can be used an increment step using the similarity or difference of two flowers."
        },
        {
            "heading": "3 Flower Pollination Algorithm",
            "text": "Now we can idealize the above characteristics of pollination process, flower constancy and pollinator behaviour as the following rules:\n1. Biotic and cross-pollination is considered as global pollination process with pollencarrying pollinators performing Le\u0301vy flights.\n2. Abiotic and self-pollination are considered as local pollination.\n3. Flower constancy can be considered as the reproduction probability is proportional to the similarity of two flowers involved.\n4. Local pollination and global pollination is controlled by a switch probability p \u2208 [0, 1]. Due to the physical proximity and other factors such as wind, local pollination can have a significant fraction p in the overall pollination activities.\nObviously, in reality, each plant can have multiple flowers, and each flower patch often release millions and even billions of pollen gametes. However, for simplicity, we also assume that each plant only has one flower, and each flower only produce one pollen gamete. Thus, there is no need to distinguish a pollen gamete, a flower, a plant or solution to a problem. This simplicity means a solution xi is equivalent to a flower and/or a pollen gamete. In future studies, we can easily extend to multiple pollen gametes for each flower and multiple flowers for multiobjective optimization problems.\nFrom the above discussions and the idealized characteristics, we can design a flowerbased on algorithm, namely, flower pollination algorithm (FPA). There are two key steps in this algorithm, they are global pollination and local pollination.\nIn the global pollination step, flower pollens are carried by pollinators such as insects, and pollens can travel over a long distance because insects can often fly and move in a much longer range. This ensures the pollination and reproduction of the most fittest, and thus we represent the most fittest as g\u2217. The first rule plus flower constancy can be represented mathematically as\nxt+1i = x t i + L(x t i \u2212 g\u2217), (1)\nwhere xti is the pollen i or solution vector xi at iteration t, and g\u2217 is the current best solution found among all solutions at the current generation/iteration. The parameter L is the strength of the pollination, which essentially is a step size. Since insects may move over a long distance with various distance steps, we can use a Le\u0301vy flight to mimic this characteristic efficiently [13, 15]. That is, we draw L > 0 from a Levy distribution\nL \u223c \u03bb\u0393(\u03bb) sin(\u03c0\u03bb/2) \u03c0 1 s1+\u03bb , (s \u226b s0 > 0). (2)\nHere \u0393(\u03bb) is the standard gamma function, and this distribution is valid for large steps s > 0. In all our simulations below, we have used \u03bb = 1.5.\nThe local pollination (Rule 2) and flower constancy can be represented as\nxt+1i = x t i + \u01eb(x t j \u2212 xtk), (3)\nwhere xtj and x t k are pollens from the different flowers of the same plant species. This essentially mimic the flower constancy in a limited neighborhood. Mathematically, if xtj and xtk comes from the same species or selected from the same population, this become a local random walk if we draw \u01eb from a uniform distribution in [0,1].\nMost flower pollination activities can occur at both local and global scale. In practice, adjacent flower patches or flowers in the not-so-far-away neighborhood are more likely to be pollinated by local flower pollens that those far away. For this, we use a switch probability (Rule 4) or proximity probability p to switch between common global pollination to intensive local pollination. To start with, we can use p = 0.5 as an initially value and then do a parametric study to find the most appropriate parameter range. From our simulations, we found that p = 0.8 works better for most applications.\nThe above two key steps plus the switch condition can be summarized in the pseudo code shown in Fig. 1."
        },
        {
            "heading": "4 Numerical Results",
            "text": "Any new optimization should be extensively validated and comparison with other algorithms. There are many test functions, at least over a hundred well-know test functions However, there is no agreed set of test functions for validating new algorithms, though there some review and literature [1, 5, 19]. In this paper, we will choose a diverse subset of such test functions to validate our proposed Flower Pollination Algorithm (FPA).\nIn addition, we will also compare the performance of our algorithm with that of genetic algorithms [8] and particle swarm optimization [11, 12]. Furthermore, we will also apply FPA to solve a well-known pressure vessel design benchmark [2, 6]."
        },
        {
            "heading": "4.1 Test Functions",
            "text": "The Ackley function can be written as\nf(x) = \u221220 exp [ \u2212 1 5\n\u221a \u221a \u221a \u221a 1\nd\nd \u2211\ni=1\nx2i\n] \u2212 exp [1\nd\nd \u2211\ni=1\ncos(2\u03c0xi) ] + 20 + e, (4)\nwhich has a global minimum f\u2217 = 0 at (0, 0, ..., 0). The simplest of De Jong\u2019s functions is the so-called sphere function\nf(x) = n \u2211\ni=1\nx2i , \u22125.12 \u2264 xi \u2264 5.12, (5)\nwhose global minimum is obviously f\u2217 = 0 at (0, 0, ..., 0). This function is unimodal and convex.\nEasom\u2019s function\nf(x) = \u2212 cos(x) cos(y) exp [ \u2212 (x\u2212 \u03c0)2 + (y \u2212 \u03c0)2 ] , (6)\nwhose global minimum is f\u2217 = \u22121 at x\u2217 = (\u03c0, \u03c0) within \u2212100 \u2264 x, y \u2264 100. It has many local minima.\nGriewangk\u2019s function\nf(x) = 1\n4000\nn \u2211\ni=1\nx2i \u2212 n \u220f\ni=1\ncos( xi\u221a i ) + 1, \u2212600 \u2264 xi \u2264 600, (7)\nwhose global minimum is f\u2217 = 0 at x\u2217 = (0, 0, ..., 0). This function is highly multimodal.\nMichaelwicz\u2019s function\nf(x) = \u2212 n \u2211\ni=1\nsin(xi) \u00b7 [ sin( ix2i \u03c0 ) ]2m , (8)\nwhere m = 10, and 0 \u2264 xi \u2264 \u03c0 for i = 1, 2, ..., n. In 2D case, we have\nf(x, y) = \u2212 sin(x) sin20(x 2 \u03c0 )\u2212 sin(y) sin20(2y 2 \u03c0 ), (9)\nwhere (x, y) \u2208 [0, 5] \u00d7 [0, 5]. This function has a global minimum f\u2217 \u2248 \u22121.8013 at x\u2217 = (x\u2217, y\u2217) = (2.20319, 1.57049).\nRastrigin\u2019s function\nf(x) = 10n + n \u2211\ni=1\n[ x2i \u2212 10 cos(2\u03c0xi) ] , \u22125.12 \u2264 xi \u2264 5.12, (10)\nwhose global minimum is f\u2217 = 0 at (0, 0, ..., 0). This function is highly multimodal.\nRosenbrock\u2019s function\nf(x) = n\u22121 \u2211\ni=1\n[ (xi \u2212 1)2 + 100(xi+1 \u2212 x2i )2 ] , (11)\nwhose global minimum f\u2217 = 0 occurs at x\u2217 = (1, 1, ..., 1) in the domain \u22125 \u2264 xi \u2264 5 where i = 1, 2, ..., n. In the 2D case, it is often written as\nf(x, y) = (x\u2212 1)2 + 100(y \u2212 x2)2, (12)\nwhich is often referred to as the banana function.\nSchwefel\u2019s function\nf(x) = \u2212 n \u2211\ni=1\nxi sin ( \u221a |xi| ) , \u2212500 \u2264 xi \u2264 500, (13)\nwhose global minimum f\u2217 \u2248 \u2212418.9829n occurs at xi = 420.9687 where i = 1, 2, ..., n.\nYang\u2019s forest-like function [20]\nf(x) = (\nd \u2211\ni=1\n|xi| ) exp [ \u2212 d \u2211\ni=1\nsin(x2i ) ] , \u22122\u03c0 \u2264 xi \u2264 2\u03c0, (14)\nhas a global minimum f\u2217 = 0 at (0, 0, ..., 0). Shubert\u2019s function\nf(x) = [\nn \u2211\ni=1\ni cos ( i+ (i+ 1)x )] \u00b7 [\nn \u2211\ni=1\ni cos ( i+ (i+ 1)y )] , (15)\nwhich has 18 global minima f\u2217 \u2248 \u2212186.7309 for n = 5 in the search domain \u221210 \u2264 x, y \u2264 10.\nFor the above ten test functions, each function can have varied dimensions; then there is an issue which dimensions should be used in the simulations. Research suggests that higher-dimensional problems tend to be more challenging, and a new algorithm should be\ntested against a wide range of functions in terms of function properties and dimensions. Therefore, we tend to focus on problems with higher dimensions.\nIn addition, we have used three algorithms to find their optimal solution with a given tolerance 10\u22125. The three algorithms are genetic algorithm (GA), particle swarm optimization (PSO) and the new flower pollination algorithm (FPA). For each algorithm, we have carried out 100 independent runs using a population size n = 25 and p = 0.8 for FPA, crossover probability 0.95 and mutation probability 0.05 for GA, and learning parameters 2 for PSO. The results are summarized in Table 1. In the table, the results are provided as mean \u00b1 standard deviation (success rate). For example, 3341 \u00b1 649(100%) means that mean number iterations is 3341 with one standard deviation of 649 and a success rate of 100%. The total number of function evaluations is n times the mean number of iterations. For example, the number of iterations is 3341 in the table, so the total number of function evaluations is 3341n = 3341 \u00d7 25 = 83525."
        },
        {
            "heading": "4.2 Design Optimization",
            "text": "Pressure vessels are literally everywhere such as champagne bottles and gas tanks. For a given volume and working pressure, the basic aim of designing a cylindrical vessel is to minimize the total cost. Typically, the design variables are the thickness d1 of the head, the thickness d2 of the body, the inner radius r, and the length L of the cylindrical section [2]. This is a well-known test problem for optimization and it can be written as\nminimize f(x) = 0.6224d1rL+ 1.7781d2r 2 + 3.1661d21L+ 19.84d 2 1r, (16)\nsubject to the following constraints\ng1(x) = \u2212d1 + 0.0193r \u2264 0 g2(x) = \u2212d2 + 0.00954r \u2264 0 g3(x) = \u2212\u03c0r2L\u2212 4\u03c03 r3 + 1296000 \u2264 0 g4(x) = L\u2212 240 \u2264 0.\n(17)\nThe simple bounds are\n0.0625 \u2264 d1, d2 \u2264 99\u00d7 0.0625, (18)\nand 10.0 \u2264 r, L \u2264 200.0. (19)\nRecently, Cagnina et al (2008) used an efficient particle swarm optimiser to solve this problem and they found the best solution\nf\u2217 \u2248 6059.714, (20)\nat x\u2217 \u2248 (0.8125, 0.4375, 42.0984, 176.6366). (21)\nThis means the lowest price is about $6059.71. Using the proposed flower pollination algorithm, we have easily found the same as the solution f\u2217 \u2248 6059.714 obtained by Cagnina et al [2, 6]. The current best solution can be stored during iterations. Then, we can calculate the errors D in terms of the difference between the current solution to the best mean solution\nafter 40 independent runs. Figure 2 shows the typical variations of D during iterations. We can also see that the proposed algorithm approaches the optimal solution exponentially (see Fig. 2).\nAmong the three methods, the proposed FPA obtained the best result and converged most quickly."
        },
        {
            "heading": "5 Discussions",
            "text": "Flowering plants have evolved some interesting features of flower pollination, and we have successfully developed a new flower algorithm to mimic these characteristics. Our simulation results have shown that the the proposed flower pollination algorithm is very efficient and can outperform both genetic algorithm and particle swarm optimization. The convergence rate is essentially exponential as we have seen from the convergence comparison in the previous section.\nThe reasons that FPA is efficient can be twofold: long-distance pollinators and flower consistency. Pollinators such as insects can travel long distance, and thus they introduce the ability (into the algorithm) that they can escape any local landscape and subsequently explore larger search space. This acts as exploration moves. On the other hand, flower consistency ensure that the same species of the flowers (thus similar solutions) are chosen more frequently and thus guarantee the convergence more quickly. This step is essentially an exploitation step. The interplay and interaction of these key components and the selection of the best solution g\u2217 ensure that the algorithm is very efficient."
        },
        {
            "heading": "6 Conclusions",
            "text": "In the present algorithm, for simplicity, we have assumed that each flower only produce one pollen gamete, this simplifies the implementation greatly. However, to assign each flower with multiple pollen gametes and each plant with multiple flowers can have some advantages for some applications such as image compression, multiobjective optimization, and graph colouring. This can form a topic for further research.\nAnother possible extension is to use design other schemes for flower constancy. At present, this constancy is realized by a simple formula. Other more exotic form may be useful to certain type of problem, though the exact improvement may need some extensive simulations.\nFurthermore, it is possible to extend the flower algorithm to a discrete version so that it can solve combinatorial optimization problems. All these extensions will be very useful. We hope that this paper will inspire more active research in metaheuristics in the near future."
        }
    ],
    "title": "Flower Pollination Algorithm for Global Optimization",
    "year": 2013
}