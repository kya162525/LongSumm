{
    "abstractText": "Learning from demonstration (LfD) is useful in settings where hand-coding behaviour or a reward function is impractical. It has succeeded in a wide range of problems but typically relies on artificially generated demonstrations or specially deployed sensors and has not generally been able to leverage the copious demonstrations available in the wild: those that capture behaviour that was occurring anyway using sensors that were already deployed for another purpose, e.g., traffic camera footage capturing demonstrations of natural behaviour of vehicles, cyclists, and pedestrians. We propose video to behaviour (ViBe), a new approach to learning models of road user behaviour that requires as input only unlabelled raw video data of a traffic scene collected from a single, monocular, uncalibrated camera with ordinary resolution. Our approach calibrates the camera, detects relevant objects, tracks them through time, and uses the resulting trajectories to perform LfD, yielding models of naturalistic behaviour. We apply ViBe to raw videos of a traffic intersection and show that it can learn purely from videos, without additional expert knowledge.",
    "authors": [
        {
            "affiliations": [],
            "name": "Feryal Behbahani"
        },
        {
            "affiliations": [],
            "name": "Kyriacos Shiarlis"
        },
        {
            "affiliations": [],
            "name": "Xi Chen"
        },
        {
            "affiliations": [],
            "name": "Vitaly Kurin"
        },
        {
            "affiliations": [],
            "name": "Sudhanshu Kasewa"
        },
        {
            "affiliations": [],
            "name": "Ciprian Stirbu"
        },
        {
            "affiliations": [],
            "name": "Jo\u00e3o Gomes"
        },
        {
            "affiliations": [],
            "name": "Supratik Paul"
        },
        {
            "affiliations": [],
            "name": "Frans A. Oliehoek"
        },
        {
            "affiliations": [],
            "name": "Jo\u00e3o Messias"
        },
        {
            "affiliations": [],
            "name": "Shimon Whiteson"
        }
    ],
    "id": "SP:e5317021fc4d8a60007ba6ee9b72cada6fba22af",
    "references": [
        {
            "authors": [
                "T. Zhang"
            ],
            "title": "Deep imitation learning for complex manipulation tasks from virtual reality teleoperation",
            "venue": "arXiv preprint arXiv:1710.04615, 2017.",
            "year": 2017
        },
        {
            "authors": [
                "T. Osa"
            ],
            "title": "An algorithmic perspective on imitation learning",
            "venue": "Foundations and Trends R \u00a9 in Robotics, vol. 7, no. 1-2, pp. 1\u2013179, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "B.D. Argall"
            ],
            "title": "A survey of robot learning from demonstration",
            "venue": "Robotics and autonomous systems, vol. 57, no. 5, pp. 469\u2013483, 2009.",
            "year": 2009
        },
        {
            "authors": [
                "J. Ho",
                "S. Ermon"
            ],
            "title": "Generative adversarial imitation learning",
            "venue": "Advances in Neural Information Processing Systems, 2016, pp. 4565\u2013 4573.",
            "year": 2016
        },
        {
            "authors": [
                "K. He"
            ],
            "title": "Deep residual learning for image recognition",
            "venue": "2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pp. 770\u2013778, 2016.",
            "year": 2016
        },
        {
            "authors": [
                "R. Girshick"
            ],
            "title": "Detectron",
            "venue": "https://github.com/facebookresearch/ detectron, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "R. Girshick"
            ],
            "title": "Fast R-CNN",
            "venue": "Proceedings of the International Conference on Computer Vision (ICCV), 2015.",
            "year": 2015
        },
        {
            "authors": [
                "S. Ren"
            ],
            "title": "Faster R-CNN: Towards real-time object detection with region proposal networks",
            "venue": "Neural Information Processing Systems (NIPS), 2015.",
            "year": 2015
        },
        {
            "authors": [
                "K. He"
            ],
            "title": "Mask R-CNN",
            "venue": "Proceedings of the International Conference on Computer Vision (ICCV), 2017.",
            "year": 2017
        },
        {
            "authors": [
                "W. Liu"
            ],
            "title": "Ssd: Single shot multibox detector",
            "venue": "ECCV, 2016.",
            "year": 2016
        },
        {
            "authors": [
                "J. Redmon",
                "A. Farhadi"
            ],
            "title": "Yolov3: An incremental improvement",
            "venue": "CoRR, vol. abs/1804.02767, 2018. [Online]. Available: http://arxiv. org/abs/1804.02767",
            "year": 1804
        },
        {
            "authors": [
                "T. Lin"
            ],
            "title": "Focal loss for dense object detection",
            "venue": "IEEE International Conference on Computer Vision, ICCV 2017, Venice, Italy, October 22-29, 2017, 2017, pp. 2999\u20133007.",
            "year": 2017
        },
        {
            "authors": [
                "N. Wojke"
            ],
            "title": "Simple online and realtime tracking with a deep association metric",
            "venue": "2017 IEEE International Conference on Image Processing (ICIP). IEEE, 2017, pp. 3645\u20133649.",
            "year": 2017
        },
        {
            "authors": [
                "N. Wojke",
                "A. Bewley"
            ],
            "title": "Deep cosine metric learning for person re-identification",
            "venue": "2018 IEEE Winter Conference on Applications of Computer Vision (WACV). IEEE, 2018, pp. 748\u2013756.",
            "year": 2018
        },
        {
            "authors": [
                "L. Leal-Taix\u00e9"
            ],
            "title": "Learning by tracking: Siamese cnn for robust target association",
            "venue": "2016 IEEE Conference on Computer Vision and Pattern Recognition Workshops (CVPRW), pp. 418\u2013425, 2016.",
            "year": 2016
        },
        {
            "authors": [
                "L. Bertinetto"
            ],
            "title": "Fully-convolutional siamese networks for object tracking",
            "venue": "ECCV Workshops, 2016.",
            "year": 2016
        },
        {
            "authors": [
                "A. Bewley"
            ],
            "title": "Simple online and realtime tracking",
            "venue": "2016 IEEE International Conference on Image Processing (ICIP), 2016, pp. 3464\u20133468.",
            "year": 2016
        },
        {
            "authors": [
                "E. Bochinski"
            ],
            "title": "High-speed tracking-by-detection without using image information",
            "venue": "International Workshop on Traffic and Street Surveillance for Safety and Security at IEEE AVSS 2017, Lecce, Italy, Aug. 2017. [Online]. Available: http://elvera.nue.tu-berlin.de/ files/1517Bochinski2017.pdf",
            "year": 2017
        },
        {
            "authors": [
                "M.-C. Chang"
            ],
            "title": "Video analytics in smart transportation for the aic18 challenge",
            "venue": "CVPR Workshop (CVPRW) on the AI City Challenge, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "A.Y. Ng"
            ],
            "title": "Algorithms for inverse reinforcement learning.",
            "venue": "Icml,",
            "year": 2000
        },
        {
            "authors": [
                "B.D. Ziebart"
            ],
            "title": "Maximum entropy inverse reinforcement learning.",
            "venue": "in AAAI,",
            "year": 2008
        },
        {
            "authors": [
                "P. Abbeel",
                "A.Y. Ng"
            ],
            "title": "Apprenticeship learning via inverse reinforcement learning",
            "venue": "Proceedings of the twenty-first international conference on Machine learning. ACM, 2004, p. 1.",
            "year": 2004
        },
        {
            "authors": [
                "Y. Duan"
            ],
            "title": "One-shot imitation learning",
            "venue": "Advances in neural information processing systems, 2017, pp. 1087\u20131098.",
            "year": 2017
        },
        {
            "authors": [
                "C. Finn"
            ],
            "title": "Guided cost learning: Deep inverse optimal control via policy optimization",
            "venue": "International Conference on Machine Learning, 2016, pp. 49\u201358.",
            "year": 2016
        },
        {
            "authors": [
                "Y. Liu"
            ],
            "title": "Imitation from observation: Learning to imitate behaviors from raw video via context translation",
            "venue": "arXiv preprint arXiv:1707.03374, 2017.",
            "year": 2017
        },
        {
            "authors": [
                "E. Zhan"
            ],
            "title": "Generative multi-agent behavioral cloning",
            "venue": "arXiv preprint arXiv:1803.07612, 2018.",
            "year": 1803
        },
        {
            "authors": [
                "B.D. Ziebart"
            ],
            "title": "Navigate like a cabbie: Probabilistic reasoning from observed context-aware behavior",
            "venue": "Proceedings of the 10th international conference on Ubiquitous computing. ACM, 2008, pp. 322\u2013331.",
            "year": 2008
        },
        {
            "authors": [
                "X.B. Peng"
            ],
            "title": "Deepmimic: Example-guided deep reinforcement learning of physics-based character skills",
            "venue": "arXiv preprint arXiv:1804.02717, 2018.",
            "year": 1804
        },
        {
            "authors": [
                "D. Vasquez"
            ],
            "title": "Inverse reinforcement learning algorithms and features for robot navigation in crowds: an experimental comparison",
            "venue": "IEEE-RSJ Int. Conf. on Intelligent Robots and Systems, 2014, pp. 1341\u20131346.",
            "year": 2014
        },
        {
            "authors": [
                "N. Lee"
            ],
            "title": "Desire: Distant future prediction in dynamic scenes with interacting agents",
            "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, 2017, pp. 336\u2013345.",
            "year": 2017
        },
        {
            "authors": [
                "P. Henry"
            ],
            "title": "Learning to navigate through crowded environments",
            "venue": "Robotics and Automation (ICRA), 2010 IEEE International Conference on. IEEE, 2010, pp. 981\u2013986.",
            "year": 2010
        },
        {
            "authors": [
                "A. Kuefler"
            ],
            "title": "Imitating driver behavior with generative adversarial networks",
            "venue": "Intelligent Vehicles Symposium (IV), 2017 IEEE. IEEE, 2017, pp. 204\u2013211.",
            "year": 2017
        },
        {
            "authors": [
                "R.P. Bhattacharyya"
            ],
            "title": "Multi-agent imitation learning for driving simulation",
            "venue": "arXiv preprint arXiv:1803.01044, 2018.",
            "year": 1803
        },
        {
            "authors": [
                "J. Colyar",
                "J. Halkias"
            ],
            "title": "Us highway 101 dataset",
            "venue": "Federal Highway Administration (FHWA), Tech. Rep. FHWA-HRT-07-030, 2007.",
            "year": 2007
        },
        {
            "authors": [
                "Y. Aytar"
            ],
            "title": "Playing hard exploration games by watching youtube",
            "venue": "arXiv preprint arXiv:1805.11592, 2018.",
            "year": 1805
        },
        {
            "authors": [
                "X.B. Peng"
            ],
            "title": "Sfv: Reinforcement learning of physical skills from videos",
            "venue": "arXiv preprint arXiv:1810.03599, 2018.",
            "year": 1810
        },
        {
            "authors": [
                "M. Tan"
            ],
            "title": "Multi-agent reinforcement learning: Independent vs. cooperative agents",
            "venue": "Proceedings of the tenth international conference on machine learning, 1993, pp. 330\u2013337.",
            "year": 1993
        },
        {
            "authors": [
                "J.K. Gupta"
            ],
            "title": "Cooperative multi-agent control using deep reinforcement learning",
            "venue": "International Conference on Autonomous Agents and Multiagent Systems. Springer, 2017, pp. 66\u201383.",
            "year": 2017
        },
        {
            "authors": [
                "D.A. Pomerleau"
            ],
            "title": "Alvinn: An autonomous land vehicle in a neural network",
            "venue": "Advances in neural information processing systems, 1989, pp. 305\u2013313.",
            "year": 1989
        },
        {
            "authors": [
                "S. Ross"
            ],
            "title": "A reduction of imitation learning and structured prediction to no-regret online learning",
            "venue": "Proceedings of the fourteenth international conference on artificial intelligence and statistics, 2011, pp. 627\u2013635.",
            "year": 2011
        },
        {
            "authors": [
                "S. Ross",
                "D. Bagnell"
            ],
            "title": "Efficient reductions for imitation learning",
            "venue": "Proceedings of the thirteenth international conference on artificial intelligence and statistics, 2010, pp. 661\u2013668.",
            "year": 2010
        },
        {
            "authors": [
                "J. Schulman"
            ],
            "title": "Trust region policy optimization",
            "venue": "International Conference on Machine Learning, 2015, pp. 1889\u20131897.",
            "year": 2015
        },
        {
            "authors": [
                "J. Schulman"
            ],
            "title": "Proximal policy optimization algorithms",
            "venue": "arXiv preprint arXiv:1707.06347, 2017.",
            "year": 2017
        },
        {
            "authors": [
                "T.-Y. Lin"
            ],
            "title": "Microsoft coco: Common objects in context",
            "venue": "k, 2014.",
            "year": 2014
        },
        {
            "authors": [
                "D.G.R. Bradski",
                "A. Kaehler"
            ],
            "title": "Learning Opencv, 1st Edition, 1st ed",
            "year": 2008
        },
        {
            "authors": [
                "Y. Li"
            ],
            "title": "Infogail: Interpretable imitation learning from visual demonstrations",
            "venue": "Advances in Neural Information Processing Systems, 2017, pp. 3812\u20133822.",
            "year": 2017
        },
        {
            "authors": [
                "Z. Wang"
            ],
            "title": "Robust imitation of diverse behaviors",
            "venue": "Advances in Neural Information Processing Systems, 2017, pp. 5320\u20135329.",
            "year": 2017
        },
        {
            "authors": [
                "J. Song"
            ],
            "title": "Multi-agent generative adversarial imitation learning",
            "venue": "arXiv, 2018.",
            "year": 2018
        },
        {
            "authors": [
                "OpenAI"
            ],
            "title": "Openai five",
            "venue": "2018. [Online]. Available: https://blog.openai. com/openai-five/",
            "year": 2018
        },
        {
            "authors": [
                "E. Ristani"
            ],
            "title": "Performance measures and a data set for multitarget, multi-camera tracking",
            "venue": "ECCV Workshops, 2016.",
            "year": 2016
        },
        {
            "authors": [
                "K. Shiarlis"
            ],
            "title": "Inverse reinforcement learning from failure",
            "venue": "Proceedings of the 2016 International Conference on Autonomous Agents & Multiagent Systems, 2016, pp. 1060\u20131068.",
            "year": 2016
        }
    ],
    "sections": [
        {
            "text": "I. INTRODUCTION\nLearning from demonstration (LfD) is a machine learning technique that can learn complex behaviours from a dataset of expert trajectories, called demonstrations. LfD is particularly useful in settings where hand-coding behaviour, or engineering a suitable reward function, is too difficult or labour intensive. While LfD has succeeded in a wide range of problems [1], [2], [3], nearly all methods rely on either artificially generated demonstrations (e.g., from laboratory subjects) or those collected by specially deployed sensors (e.g., MOCAP). These restrictions greatly limit the practical applicability of LfD, which to date has largely not been able to leverage the copious demonstrations available in the wild: those that capture behaviour that was occurring anyway using sensors that were already deployed for other purposes.\nFor example, consider the problem of training autonomous vehicles to navigate in the presence of human road users. Since physical road tests are expensive and dangerous, simulation is an essential part of the training process. However, such training requires a realistic simulator which, in turn, requires realistic models of other agents, e.g., vehicles, cyclists, and pedestrians, that the autonomous vehicle interacts with. Hand-coded models of road users are labour intensive to create, do not generalise to new settings, and do not capture the diversity of behaviours produced by humans.\n1Latent Logic, Oxford, England 2University of Oxford, Oxford, England 3Delft University of Technology, Delft, Netherlands\nLfD is an attractive alternative. In principle, subjects could be recruited to demonstrate such behaviour or existing road users could be augmented with sensors to record their trajectories. However, doing so would be expensive and yield only limited datasets. A more effective way would be to use the abundance of relevant demonstrations available in the wild, such as traffic camera footage. Unfortunately, there are currently no LfD methods that can learn from such sources of traffic demonstrations.\nIn this paper, we propose video to behaviour (ViBe), a new approach to learning models of road user behaviour that requires as input only unlabelled raw video data of a traffic scene collected from a single, monocular, uncalibrated camera with ordinary resolution. Our approach, illustrated in Figure 1, works by calibrating the camera, detecting the relevant objects, and tracking them through time. Each\nar X\niv :1\n81 1.\n03 51\n6v 1\n[ cs\n.L G\n] 8\nN ov\n2 01\n8\ntrajectory, together with the static and dynamic context of that road user at each moment in time, is then fed as a demonstration to our LfD system, which learns robust behaviour models for road users. The resulting models are then used to populate a simulation of the scene built using the Unity game engine.\nThe contributions of this paper are two-fold: First, we present a vision pipeline that can track different road users and map their tracked trajectories to 3D space and is competitive with the state-of-the art approaches for image space tracking. Second, we extend generative adversarial imitation learning (GAIL) [4], a state-of-the-art LfD method, with a novel curriculum-based training regime that enables our agents to gradually learn to mimic temporally extended expert demonstrations and successfully generalise to unseen situations. We evaluate our method against several baselines, including behavioural cloning (BC) and state-of-the-art variants of GAIL. Using a number of metrics, we show that our method can better imitate the observed demonstrations and results in more stable learning.\nWhile this paper focuses on traffic applications, ViBe is general and could be extended to other applications where large amounts of video data containing demonstrations in the wild are available."
        },
        {
            "heading": "II. RELATED WORK",
            "text": ""
        },
        {
            "heading": "A. Computer Vision",
            "text": "In recent years, neural network approaches have significantly advanced the state of the art in computer vision tasks such as classification [5] and object detection [6]. Object detection is usually performed using region-based object detectors such as Fast R-CNN [7], Faster R-CNN [8], or Mask R-CNN [9]. Such methods are usually slower but more accurate than single-object detectors such as SSD [10], YOLO [11], RetinaNet [12], and hence more appropriate for the application considered here.\nWhen tracking multiple objects, tracking by detection, in which objects are first detected, then associated into tracks, is usually preferred. State-of-the art tracking methods employ deep features [13], [14] often generated by Siamese networks [15], [16] alongside image space motion models [17] and intersection over union (IOU) trackers [18].\nOur work employs a number of techniques for robust detection and tracking. However, unlike most vision pipelines, ours maps detections to 3D space, and makes extensive use of 3D information while tracking. Recent work [19] explores a similar application and uses the resulting 3D trajectories to estimate car velocities and detect traffic anomalies. By contrast, we use the trajectories as input to LfD."
        },
        {
            "heading": "B. Learning from Demonstration",
            "text": "ViBe\u2019s LfD component extends GAIL [4] which is inspired by inverse reinforcement learning [20], [21], [22] and is discussed further in Section III. A wide range of LfD techniques have been developed using supervised, unsupervised, or reinforcement learning [2]. However, most methods\n[3], [23], [24], even when using raw video as sensory input [25], rely on either artificially generated demonstrations or those collected by specially deployed sensors, limiting their application in realistic domains.\nBy contrast, ViBe leverages demonstrations of behaviour that was occurring naturally. The same idea has been used to imitate basketball teams [26], predict taxi driver behaviour [27], and control complex animations [28]. However, all these methods still rely on sensors (or manual labelling) that provide ground truth information about the observed demonstrations, whereas ViBe extracts trajectories directly from raw, unlabelled videos.\nRelated to ViBe are several existing LfD methods that learn road and pedestrian behaviour [29], [30], [31]. Most relevant is learning highway merging behaviour [32], [33] from NGSIM [34], a publicly available dataset of vehicle trajectories. However, these methods again rely on manual labelling or specialised equipment to obtain the trajectories, while ViBe learns from raw, unlabelled videos.\nRecent work proposed a method that can learn to play ATARI games by observing YouTube videos [35]. Like ViBe, this method requires only raw videos, and leverages existing publicly available data. However, it trains only a single agent operating in 2D space, whereas ViBe learns to control multiple agents in 3D space.\nConcurrently to our work, Peng et al. [36] proposed a similar approach in the context of character animation. An off-the-shelf vision module extracts 3D poses from unstructured YouTube videos of single agents performing acrobatic motions. A simple LfD approach then rewards behaviour that matches waypoints in individual demonstrations. By contrast, we consider a more challenging setting with multiple agents, occlusions, and complex interactions between agents. Consequently, behaviour detection, reconstruction, and imitation are more difficult. In particular, interactions between agents preclude a waypoint-matching approach, as there is no unique set of waypoints for an agent to match that would be robust to changes in other agents\u2019 behaviour."
        },
        {
            "heading": "III. BACKGROUND",
            "text": "To realistically model the traffic environment of an autonomous vehicle, we need to simulate multiple agents interacting in the same environment. Unfortunately, due to the large number of road users that may populate a traffic scenario, learning a centralized policy to control all agents simultaneously is impractical. The size of the joint action space of such a policy grows exponentially in the number of agents, leading to poor scalability in learning. Furthermore, it is crucial to model variable numbers of agents (e.g., cars routinely enter and leave an intersection), to which such joint policies are poorly suited (each agent typically has a fixed agent index).\nTo this end, we take an approach similar to that of independent Q-learning (IQL) [37], where each agent learns its own policy, conditioned only on its own observations. The other actors are effectively treated as part of the environment.\nWe can then treat the problem as one of single-agent learning and share the parameters of the policy across multiple agents. Parameter sharing [38] avoids the exponential growth of the joint action space and elegantly handles variable numbers of agents. It also avoids instabilities associated with decentralised learning by essentially performing centralised learning with only one policy.\nWe model the problem as a Markov decision process (MDP). The MDP is defined by the tuple (S,A, P,R). S represents the set of environment states, A the set of actions, P (st+1|st, at) the transition function, and R(st , at) the reward function. We use \u03c0 for the stochastic policy learnt by our agent and \u03c0E for the expert policy which we can access only through a dataset DE . The agent does not have access to R(st , at) and instead must mimic the expert\u2019s demonstrated behaviour. Given a dataset DE , we denote sample trajectories as \u03c4E . They consist of sequences of observation-action pairs generated by the expert \u03c4E = {(sE\n1 , aE 1 ), . . . , (sE T , aE T )}. Similarly, we denote trajectories\ngenerated by our agent as \u03c4 = {(s 1 , a 1 ), . . . , (s T , a T )}. In our case, DE is obtained from raw videos, via the process described in Section IV.\nThe simplest form of LfD is behavioural cloning (BC) [39], [40], which trains a regressor (i.e., a policy) to replicate the expert\u2019s behaviour given an expert state. BC works well for states covered by the training distribution but generalises poorly due to compounding errors in the actions, a problem also known as covariate shift [41]. By contrast, GAIL [4] avoids covariate shift by learning via interaction with the environment, similar to inverse reinforcement learning [20] methods.\nGAIL, aims to learn a deep neural network policy \u03c0\u03b8 that cannot be distinguished from the expert policy \u03c0E . To this end, it trains a discriminator D\u03c6, also a deep neural network, to distinguish between state-action pairs coming from expert and agent. GAIL optimises \u03c0\u03b8 to make it difficult for the discriminator to make this distinction. Formally, the GAIL objective is:\nmin \u03b8 max \u03c6 E \u03c0\u03b8 [log(D\u03c6(s, a))] + E \u03c0E\n[ log(1\u2212D\u03c6(sE , aE)) ] .\nHere, D\u03c6 outputs the probability that (s, a) originated from \u03c0. As the agent interacts with the environment using \u03c0\u03b8, (s, a) pairs are collected and used to train D\u03c6. Then, GAIL alternates between a gradient step on \u03c6 to increase the objective function with respect to D, and an RL step on \u03b8 to decrease it with respect to \u03c0. Optimisation of \u03c0 can be done with any RL algorithm using a reward function of the form R(s, a) = \u2212 log(D\u03c6(s, a)). Typically, GAIL uses policy gradient methods that approximate the gradient with Monte Carlo rollouts [42] or a critic [43]. Optimisation of D\u03c6 minimises a cross entropy loss function.\nEarly in training, the state-action pairs visited by the policy are quite different from those in the demonstrations, which can yield unreliable and sparse rewards from D\u03c6, making it difficult to learn \u03c0E . We will show how we address this problem by introducing a novel curriculum in Section IV-C.\nIn multi-agent situations, GAIL agents trained in a singleagent setting can fail to generalise to multi-agent settings [33]. PS-GAIL [33] is an extension to GAIL that addresses this issue by gradually increasing the number of agents controlled by the policy during training. We compare to PS-GAIL experimentally in Section V. However, it is complementary to the Horizon GAIL method we propose in Section IV-C and future work can focus on using them in conjunction.\nIV. VIBE: VIDEO TO BEHAVIOUR\nIn this section, we describe ViBe, which learns road behaviour policies from raw traffic camera videos (see Figure 1). We first describe how trajectories are extracted from these videos. We then describe how they are used to create a simulation of the scene. Finally, we detail how the trajectories and the simulator are used to learn realistic road behaviour policies via our novel LfD approach."
        },
        {
            "heading": "A. Extracting Demonstrations",
            "text": "This section describes our vision pipeline, whose main steps are detection, calibration, and tracking.\nOur detector uses the bounding box output of a pre-trained model of Mask R-CNN [9] [6] based on ResNet-101 [5] architecture, pre-trained on the COCO dataset [44]. Since we are only interested in the traffic information, we remove all classes except car, bus, truck, pedestrian, and bicycle.\nThe next step is calibration. As traffic cameras tend to have a large field of view, the camera images tend to be highly distorted. Due to being unable to calibrate the camera using traditional methods (e.g., using a checkboard) [45]. Instead, we obtain a top-down satellite image of the scene from Google Maps and add landmark points to both camera and satellite images. We then undistort the camera image\nand use the landmark points to calculate the camera matrix. Given the camera calibration, we map the detected bounding boxes into 3D by assuming that the detected object is a fixed height above the ground, with the height depending on its class.\nThe final step is tracking multiple objects in unstructured environments. Our multiple object tracking (MOT) module is similar to that of Deep SORT [14], which makes heavy use of an appearance model to make associations. For each scene, we train an appearance model using a Siamese network (SN) [15]. We first run our object detector over the whole video, followed by an IOU tracker. This yields short tracks that we call tracklets. Objects in the same tracklets form positive pairs, and objects from different tracklets form negative pairs used to train the SN. To avoid the possibility of similar objects appearing in negative pairs, we form these pairs using tracklets with a large temporal difference. The SN is trained using a cosine distance metric and a contrastive loss.\nOur MOT pipeline then processes the detected objects through several steps. Track initialisation occurs when a simple IOU tracker associates more than five consecutive detections. The initialised track is mapped to 3D space, where a Kalman filter predicts the next position of the object. Next, objects in the next frame within the vicinity of this prediction are compared with the current track using the features generated by SN. An association is made if this comparison yields a cosine distance in the feature space below a certain threshold. If no such association is made, the tracker attempts to associate detections using IOU. If association still fails, a final attempt is made using nearest neighbour association in 3D space. Figure 2 shows an example output of our tracking pipeline in both 2D and 3D space."
        },
        {
            "heading": "B. Simulation",
            "text": "Our vision pipeline outputs timestamped trajectories of different road users. However, a simulator also requires a reliable representation of the static elements of the scene such as pavements and zebra crossings. To this end, we use Google Maps as a reference to build a simulation of the scene in Unity. Building the static elements of the simulation is straightforward and significantly easier than realistically modeling the dynamic elements of the scene. In this paper, we simulate a roundabout intersection in Purmerend, a city in the Netherlands that provided the traffic video data used in our experiments. Figure 2 shows how the scene along with some tracks from our vision pipeline is recreated in our simulator.\nSection IV-C describes our LfD approach, which requires a state representation for the agent. Our simulator generates such a representation based on both the static and dynamic context. Pseudo-LiDAR readings, similar to those in [33], are used to represent different aspects of the static (e.g., zebra crossings and roads) and dynamic (e.g., distance and velocity of other agents) context of the agent. In addition, we provide information such as the agent\u2019s heading, distance from goal, and velocity. Our simulator uses a simple linear\nmotion model, which we found sufficient for learning, though in the future individual motion models for each road entity could be considered.\nGiven a start frame in the dataset, our simulator plays back tracked trajectories from that frame onwards, produces observations and accepts actions from agents controlled by neural network policies. In other words, it provides exactly the environment needed to both perform LfD on the extracted trajectories, and evaluate the resulting learnt policies."
        },
        {
            "heading": "C. Learning",
            "text": "Given the trajectories extracted by the vision processing from Section IV-A, ViBe uses the simulator from Section IVB to learn a policy that matches those trajectories. Learning is based on GAIL, which leverages the simulator to train the agent\u2019s behaviour for states beyond those in the demonstrations, avoiding the compounding errors of BC. However, in the original GAIL method, this interaction with the simulator means that the agent has control over the visited states from the beginning of learning. Consequently, it is likely to take bad actions that lead it to undesirable states, far from those visited by the expert, which in turn yields sparse rewards from the discriminator and slow agent learning.\nTo address this problem, we propose Horizon GAIL, which, like BC, bootstraps learning from the expert\u2019s states, in this case to ensure a reliable reward signal from the discriminator. To prevent compounding errors, we use a novel horizon curriculum that slowly increases the number of timesteps for which the agent interacts with the simulator. Thus, only at the end of the curriculum does the agent have the full control over visited states that the original GAIL agent has from the beginning. This curriculum also encourages the discriminator to learn better representations early on.\nIn each episode, the agent is initialised from a random expert state, sEt and must act for H steps, where H is the length of the horizon. Once the horizon is reached, the simulation ends but the episode is not considered terminated. Instead,\nAlgorithm 1 Horizon Curriculum for GAIL Initialise policy \u03c0\u03b8, discriminator D\u03c6, expert demonstrations DE for h = 1 . . . T do\nSample expert trajectory: \u03c4E \u223c DE for t = 0, h, 2h, . . . , T \u2212 h do\nUse expert observation sEt to initialise the agent and initialise the environment to its corresponding state at time t Sample an agent\u2019s trajectory of length h: \u03c4 \u223c \u03c0\u03b8i end for Sample M observation-action pairs \u03c7 \u223c \u03c4 and M pairs \u03c7E \u223c \u03c4E Update the discriminator parameters from \u03c6i to \u03c6i+1 with the gradient:\nE (sm,am)\u2208\u03c7 [\u2207\u03c6 log(D\u03c6(sm, am))]\n+ E (sEm,a E m)\u2208\u03c7E\n[ \u2207\u03c6 log(1\u2212D\u03c6(sEm, aEm)) ] Compute reward \u2200(sm, am) \u2208 \u03c7 using the discriminator: rm = \u2212 log(1\u2212D\u03c6i+1(sm, am)) Take a policy step from \u03b8i to \u03b8i+1, with any policy optimisation method\nend for\nHorizon GAIL uses an actor-critic approach, with the actor following a gradient estimated from an n-step return, with n = H , bootstrapping from a critic V\u03c8 when the horizon is reached. This prevents the agent from learning myopic behaviour when H is small. Hence, while GAIL is agnostic about the policy gradient method it uses, Horizon GAIL commits to an actor-critic approach in order to bootstrap beyond the simulated horizon.\nWhen H = 1, Horizon GAIL is similar to BC. In fact, pretraining GAIL with BC is known to be beneficial [32], [46], [47], [48]. However, even with H = 1, a crucial difference remains (see Figure 3). BC does not interact with a simulator, as the agent simply learns to predict the expert\u2019s action given its state. By contrast, when H = 1, the Horizon GAIL agent\u2019s action is fed back into the simulator, which generates st+1 and the policy gradient estimate bootstraps with V\u03c8(st+1).\nWhen H = 2, the agent, initialised from sEt , acts for two steps in the simulator before being terminated. H is increased during training according to a schedule. When H = \u221e, Horizon GAIL is equivalent to GAIL. See Algorithm 1 for a complete overview of our training scheme.\nGradually moving from single step state-action pairs to more difficult multi-step trajectories helps stabilise learning. It allows the generator and discriminator to jointly learn to generalise to longer sequences of behaviour and match the expert data more closely while ensuring the discriminator does not collapse early in training.\nWe found that Horizon GAIL was critical to successfully reproduce naturalistic behaviour in our complex traffic inter-\nsection problem, as we show in Section V-B."
        },
        {
            "heading": "V. EXPERIMENTAL RESULTS",
            "text": "We evaluate ViBe on a complex multi-agent traffic scene involving a roundabout in Purmerend (Section IV-B). The input data consists of 850 minutes of video at 15 Hz from the traffic camera observing the roundabout.\nOur vision pipeline identifies all the agents in the scene (e.g. cars, pedestrians and cyclists), and tracks their trajectories through time, resulting in around 10000 car trajectories. Before any learning, these trajectories are filtered and pruned. Specifically, any trajectories that result in collisions or very large velocities are considered artifacts of the tracking process and are not used during training. We split the resulting dataset into training, validation, and test sets such that there is no temporal overlap, i.e., no test trajectories occur at the same time as training trajectories. The validation set is used to tune hyper-parameters and choose the best performing model (for all baselines) in evaluation. As discussed in Section IV-B, we can use our simulator to play back these trajectories at any point in time (see Figure 1).\nWhen training with Horizon GAIL, in each episode the agent is initialised at a point sampled from an expert trajectory. The sampled point determines the full initial state of the simulator, including position, velocity, and heading of all agents in the scene. We use our policy to simulate the agent for H steps. The agent is also assigned a goal corresponding to the last state of the expert trajectory. The episode terminates if the agent collides with an object or another agent, or reaches its goal.\nWe compare Horizon GAIL to a number of baselines: BC, GAIL [4] and PS-GAIL [33], using the same dataset and observation and action spaces to train all methods. We show results using the best hyper-parameters we found after tuning them separately for each method.\nPolicies, \u03c0\u03b8, take as input 64 dimensional pseudo-LiDAR observations with a field of view of 2\u03c0 radians, generated by our simulator as described in Section IV-B. These LiDAR observations are stacked together and processed in two layers of 1x1 convolutions of 15 and 3 channels respectively. These convolutions act as channel mixing operations but maintain the spatial information of the original signal. The output then passes through a series of fully connected layers and is concatenated with the agent\u2019s orientation, distance from the goal, and a one-hot encoding of the target roundabout exit. The network outputs displacements in Cartesian coordinates, used by the simulator to update the agent\u2019s location.\nWe use identical core architectures for the discriminator D\u03c6 and value function V\u03c8 . Contrary to [33] we do not represent the policy using a recurrent neural network, thus assuming that the state is fully observable. We did not find this assumption to pose a significant obstacle to our performance, and thus leave its assessment for future work.\nWe train \u03c0\u03b8 with proximal policy optimisation (PPO) with a clipping objective [43], an actor-critic method known to perform well for long-horizon problems [49]. We train each model for 5000 epochs, each containing 1024 environment interactions. For Horizon GAIL, the horizon schedule starts with H = 1 and increments by 1 every 100 epochs. However, performance is quite robust to this hyperparameter: varying the schedule from 50 to 200 epochs and did not create any significant performance differences."
        },
        {
            "heading": "A. Performance Metrics",
            "text": "To evaluate the ViBe vision module, we measure the reliability of the tracks it generates using the metrics introduced by Ristani et al. [50]: number of tracked trajectories (NT), identity F1 score (IDF1), identity precision (IDP) and identity recall (IDR). These metrics are suitable because they reflect the key qualities of reliably tracked trajectories.\nTo evaluate our policies, we chose a 4000 timestep window of the test data and simulate all the cars within that interval. These windows do not overlap for each evaluation run. Pedestrians and other road users are played back from the dataset. In contrast to training, during evaluation we do not terminate the agents upon collision, so as to assess how well each method models long term behaviour.\nUnlike in reinforcement learning, where the true reward function is known, performance evaluation in LfD is not straightforward and typically no single metric suffices. Several researchers have proposed metrics for LfD, which are often task specific [32], [51], [47]. We take a similar approach, using a suite of metrics, each comparing a different aspect of the generated behaviour to that of human behaviour.\nDuring evaluation we record the positions and velocities of all simulated agents. Using kernel density estimation, we estimate probability distributions for speed and 2D space\noccupancy (i.e locations in 2D space) as well as a joint distribution of velocities and space occupancy. The same distributions are computed for the ground truth data. We then measure the Jensen-Shannon divergence (JSD) between the data and the respective model generated distributions for these three quantities. We also measure how often the simulated agents collide with objects or other agents in the environment, i.e. the collision rate. Finally, we measure how often the agents fail to reach their goal."
        },
        {
            "heading": "B. Results",
            "text": "To validate the ViBe vision module, we manually label 43 trajectories from the dataset and then compare its performance against two baselines, a simple IOU [18] tracker and Deep SORT [13], [14], a state-of-the-art MOT pipeline. We replace Deep SORT\u2019s appearance model with our own, as it is specifically trained for this scene.\nThe results in Table V show that the ViBe vision module outperforms both baselines. In particular, ViBe\u2019s higher IDF1 score gives confidence that the trajectories provided are of sufficient quality for LfD. The most substantial difference between Deep SORT and ViBe is that ViBe performs Kalman filtering in 3D space, which likely explains the performance difference. Even for ViBe, the number of tracked trajectories (NT) is substantially higher than ground truth (43). However, this is not caused by false positives but merely by the tracker treating a single trajectory as two separate ones. This in turn implies that ViBe produces longer tracks than the baseline methods.\nThe results of our LfD evaluation can be seen in the following figures: Figure 4 shows performance with respect to the evaluation metrics discussed in Section V-A for 4 independent 4000 timesteps of multi-agent simulations. Figure 5 shows the trajectories generated by a single such simulation by each method. The first observation is that Horizon GAIL outperforms all baselines and produces trajectories that more closely resemble the data. GAIL and PS-GAIL perform relatively poorly, failing to capture the data distribution. It is worth noting that these results represent the best training epoch out of the 5000 performed during training, as we\nobserved that both baseline GAIL methods exhibit quite unstable training dynamics. This can be further observed from Figure 6 where we plot the speed, occupancy and joint velocity-occupancy JSD metrics across the training epochs\nfor a multi-agent evaluation of 4000 timesteps across 3 random seeds. We can see that Horizon GAIL is noticeably more stable across both metrics. With respect to PS-GAIL, we observed that the curriculum parameter was relatively hard to tune. For example, adding agents too soon causes the discriminator to learn too quickly that these agents are not real.\nAnother notable observation is that BC performs well when compared to both baseline GAIL methods. This result can be attributed to the abundance of data available for training. From Figure 5 however we can see that the qualitative performance of these policies is relatively poor when compared to Horizon GAIL. As expected, the BC baseline quickly diverges from plausible trajectories, as minor errors compound over time. The long evaluation times exacerbate this effect. Horizon GAIL avoids compounding error problems associated with BC through interaction with the environment. It also avoids unstable training related with GAIL through the gradually increasing horizon. This yields stable, plausible trajectories with fewer collisions than any other method 1."
        },
        {
            "heading": "VI. CONCLUSION",
            "text": "This paper presented a novel method for learning from demonstration in the wild that can leverage abundance of freely available videos of natural behaviour. In particular, we proposed ViBe, a new approach to learning models of road user behaviour that requires as input only unlabelled raw video data of a traffic scene collected from a single, monocular, uncalibrated camera with ordinary resolution. ViBe calibrates the camera, detects relevant objects, tracks them reliably through time, and uses the resulting trajectories to learn driver policies via a novel LfD method. The learned policies are finally deployed in a simulation of the scene developed using the Unity game engine. According to several metrics our LfD method exhibits better and more stable learning than baselines such as GAIL and BC.\n1 A video presenting ViBe and showcasing the learned behaviour can be found here: https://www.youtube.com/watch?v=K8ugVsW3Gm4"
        }
    ],
    "title": "Learning from Demonstration in the Wild",
    "year": 2020
}