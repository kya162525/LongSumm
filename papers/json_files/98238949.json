{
    "abstractText": "Visual question answering is fundamentally compositional in nature\u2014a question like where is the dog? shares substructure with questions like what color is the dog? and where is the cat? This paper seeks to simultaneously exploit the representational capacity of deep networks and the compositional linguistic structure of questions. We describe a procedure for constructing and learning neural module networks, which compose collections of jointly-trained neural \u201cmodules\u201d into deep networks for question answering. Our approach decomposes questions into their linguistic substructures, and uses these structures to dynamically instantiate modular networks (with reusable components for recognizing dogs, classifying colors, etc.). The resulting compound networks are jointly trained. We evaluate our approach on two challenging datasets for visual question answering, achieving state-of-the-art results on both the VQA natural image dataset and a new dataset of complex questions about abstract shapes.",
    "authors": [
        {
            "affiliations": [],
            "name": "Jacob Andreas Marcus Rohrbach"
        },
        {
            "affiliations": [],
            "name": "Trevor Darrell"
        },
        {
            "affiliations": [],
            "name": "Dan Klein"
        }
    ],
    "id": "SP:0ac8f1a3c679b90d22c1f840cdc8d61ffef750ac",
    "references": [
        {
            "authors": [
                "J. Andreas",
                "D. Klein"
            ],
            "title": "Grounding language with points and paths in continuous spaces",
            "venue": "CoNLL",
            "year": 2014
        },
        {
            "authors": [
                "S. Antol",
                "A. Agrawal",
                "J. Lu",
                "M. Mitchell",
                "D. Batra",
                "C.L. Zitnick",
                "D. Parikh"
            ],
            "title": "Vqa: Visual question answering",
            "venue": "ICCV",
            "year": 2015
        },
        {
            "authors": [
                "K. Cho"
            ],
            "title": "B",
            "venue": "van Merri\u00ebnboer, D. Bahdanau, and Y. Bengio. On the properties of neural machine translation: Encoderdecoder approaches. arXiv preprint arXiv:1409.1259",
            "year": 2014
        },
        {
            "authors": [
                "M.-C. De Marneffe",
                "C.D. Manning"
            ],
            "title": "The Stanford typed dependencies representation",
            "venue": "Proceedings of the International Conference on Computational Linguistics, pages 1\u20138. Association for Computational Linguistics",
            "year": 2008
        },
        {
            "authors": [
                "J.L. Elman"
            ],
            "title": "Finding structure in time",
            "venue": "Cognitive science, 14(2):179\u2013211",
            "year": 1990
        },
        {
            "authors": [
                "N. FitzGerald",
                "Y. Artzi",
                "L. Zettlemoyer"
            ],
            "title": "Learning distributions over logical forms for referring expression generation",
            "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing",
            "year": 2013
        },
        {
            "authors": [
                "H. Gao",
                "J. Mao",
                "J. Zhou",
                "Z. Huang",
                "L. Wang",
                "W. Xu"
            ],
            "title": "Are you talking to a machine? dataset and methods for multilingual image question answering",
            "venue": "NIPS",
            "year": 2015
        },
        {
            "authors": [
                "D. Geman",
                "S. Geman",
                "N. Hallonquist",
                "L. Younes"
            ],
            "title": "Visual turing test for computer vision systems",
            "venue": "Proceedings of the National Academy of Sciences",
            "year": 2015
        },
        {
            "authors": [
                "R. Girshick",
                "J. Donahue",
                "T. Darrell",
                "J. Malik"
            ],
            "title": "Rich feature hierarchies for accurate object detection and semantic segmentation",
            "venue": "Computer Vision and Pattern Recognition (CVPR), 2014 IEEE Conference on, pages 580\u2013587. IEEE",
            "year": 2014
        },
        {
            "authors": [
                "S. Hochreiter",
                "J. Schmidhuber"
            ],
            "title": "Long short-term memory",
            "venue": "Neural computation, 9(8):1735\u20131780",
            "year": 1997
        },
        {
            "authors": [
                "M. Iyyer",
                "J. Boyd-Graber",
                "L. Claudino",
                "R. Socher",
                "H. Daum\u00e9 III"
            ],
            "title": "A neural network for factoid question answering over paragraphs",
            "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing",
            "year": 2014
        },
        {
            "authors": [
                "A. Karpathy",
                "L. Fei-Fei"
            ],
            "title": "Deep visual-semantic alignments for generating image descriptions",
            "venue": "CVPR",
            "year": 2015
        },
        {
            "authors": [
                "A. Karpathy",
                "A. Joulin",
                "L. Fei-Fei"
            ],
            "title": "Deep fragment embeddings for bidirectional image sentence mapping",
            "venue": "NIPS",
            "year": 2014
        },
        {
            "authors": [
                "D. Klein",
                "C.D. Manning"
            ],
            "title": "Accurate unlexicalized parsing",
            "venue": "Proceedings of the Annual Meeting of the Association for Computational Linguistics, pages 423\u2013430. Association for Computational Linguistics",
            "year": 2003
        },
        {
            "authors": [
                "C. Kong",
                "D. Lin",
                "M. Bansal",
                "R. Urtasun",
                "S. Fidler"
            ],
            "title": "What are you talking about? text-to-image coreference",
            "venue": "CVPR, pages 3558\u20133565. IEEE",
            "year": 2014
        },
        {
            "authors": [
                "J. Krishnamurthy",
                "T. Kollar"
            ],
            "title": "Jointly learning to parse and perceive: connecting natural language to the physical world",
            "venue": "Transactions of the Association for Computational Linguistics",
            "year": 2013
        },
        {
            "authors": [
                "Y. LeCun",
                "L. Bottou",
                "Y. Bengio",
                "P. Haffner"
            ],
            "title": "Gradientbased learning applied to document recognition",
            "venue": "Proceedings of the IEEE, 86(11):2278\u20132324",
            "year": 1998
        },
        {
            "authors": [
                "P. Liang",
                "M.I. Jordan",
                "D. Klein"
            ],
            "title": "Learning dependencybased compositional semantics",
            "venue": "Computational Linguistics, 39(2):389\u2013446",
            "year": 2013
        },
        {
            "authors": [
                "T.-Y. Lin",
                "M. Maire",
                "S. Belongie",
                "J. Hays",
                "P. Perona",
                "D. Ramanan",
                "P. Doll\u00e1r",
                "C.L. Zitnick"
            ],
            "title": "Microsoft coco: Common objects in context",
            "venue": "Computer Vision\u2013ECCV 2014, pages 740\u2013755. Springer",
            "year": 2014
        },
        {
            "authors": [
                "L. Ma",
                "Z.L. andiyyer Hang Li"
            ],
            "title": "Learning to answer questions from image using convolutional neural network",
            "year": 2015
        },
        {
            "authors": [
                "M. Malinowski",
                "M. Fritz"
            ],
            "title": "A multi-world approach to question answering about real-world scenes based on uncertain input",
            "venue": "NIPS",
            "year": 2014
        },
        {
            "authors": [
                "M. Malinowski",
                "M. Rohrbach",
                "M. Fritz"
            ],
            "title": "Ask your neurons: A neural-based approach to answering questions about images",
            "venue": "In ICCV,",
            "year": 2015
        },
        {
            "authors": [
                "C. Matuszek",
                "N. Fitzgerald",
                "L. Zettlemoyer",
                "L. Bo",
                "D. Fox"
            ],
            "title": "A joint model of language and perception for grounded attribute learning",
            "venue": "ICML",
            "year": 2012
        },
        {
            "authors": [
                "B. Plummer",
                "L. Wang",
                "C. Cervantes",
                "J. Caicedo",
                "J. Hockenmaier",
                "S. Lazebnik"
            ],
            "title": "Flickr30k entities: Collecting region-to-phrase correspondences for richer image-tosentence models",
            "venue": "ICCV",
            "year": 2015
        },
        {
            "authors": [
                "M. Ren",
                "R. Kiros",
                "R. Zemel"
            ],
            "title": "Image question answering: A visual semantic embedding model and a new dataset",
            "venue": "NIPS",
            "year": 2015
        },
        {
            "authors": [
                "M. Ren",
                "R. Kiros",
                "R.S. Zemel"
            ],
            "title": "Image question answering: A visual semantic embedding model and a new dataset",
            "venue": "CoRR, abs/1505.02074",
            "year": 2015
        },
        {
            "authors": [
                "K. Simonyan",
                "A. Zisserman"
            ],
            "title": "Very deep convolutional networks for large-scale image recognition",
            "venue": "CoRR, abs/1409.1556",
            "year": 2014
        },
        {
            "authors": [
                "R. Socher",
                "J. Bauer",
                "C.D. Manning",
                "A.Y. Ng"
            ],
            "title": "Parsing with compositional vector grammars",
            "venue": "Proceedings of the Annual Meeting of the Association for Computational Linguistics",
            "year": 2013
        },
        {
            "authors": [
                "J. Weston",
                "A. Bordes",
                "S. Chopra",
                "T. Mikolov"
            ],
            "title": "Towards ai-complete question answering: a set of prerequisite toy tasks",
            "venue": "arXiv preprint arXiv:1502.05698",
            "year": 2015
        },
        {
            "authors": [
                "J. Weston",
                "S. Chopra",
                "A. Bordes"
            ],
            "title": "Memory networks",
            "venue": "arXiv preprint arXiv:1410.3916",
            "year": 2014
        },
        {
            "authors": [
                "K. Xu",
                "J. Ba",
                "R. Kiros",
                "A. Courville",
                "R. Salakhutdinov",
                "R. Zemel",
                "Y. Bengio"
            ],
            "title": "Show",
            "venue": "attend and tell: Neural image caption generation with visual attention. arXiv preprint arXiv:1502.03044",
            "year": 2015
        },
        {
            "authors": [
                "L. Yu",
                "E. Park",
                "A.C. Berg",
                "T.L. Berg"
            ],
            "title": "Visual madlibs: Fill in the blank image generation and question answering",
            "venue": "arXiv:1506.00278",
            "year": 2015
        },
        {
            "authors": [
                "M.D. Zeiler"
            ],
            "title": "ADADELTA: An adaptive learning rate method",
            "venue": "arXiv preprint arXiv:1212.5701",
            "year": 2012
        }
    ],
    "sections": [
        {
            "heading": "1. Introduction",
            "text": "This paper describes an approach to visual question answering based on neural module networks (NMNs). We answer natural language questions about images using collections of jointly-trained neural \u201cmodules\u201d, dynamically composed into deep networks based on linguistic structure.\nConcretely, given an image and an associated question (e.g. where is the dog?), we wish to predict a corresponding answer (e.g. on the couch, or perhaps just couch) (Figure 1). The visual QA task has significant significant applications to human-robot interaction, search, and accessibility, and has been the subject of a great deal of recent research attention [2, 7, 20, 22, 25, 32]. The task requires sophisticated understanding of both visual scenes and natural language. Recent successful approaches represent questions as bags of words, or encode the question using a recurrent neural network [22] and train a simple classifier on the encoded question and image. In contrast to these monolithic\napproaches, another line of work for textual QA [18] and image QA [21] uses semantic parsers to decompose questions into logical expressions. These logical expressions are evaluated against a purely logical representation of the world, which may be provided directly or extracted from an image [16].\nIn this paper we draw from both lines of research, presenting a technique for integrating the representational power of neural networks with the flexible compositional structure afforded by symbolic approaches to semantics. Rather than relying on a monolithic network structure to answer all questions, our approach assembles a network on the fly from a collection of specialized, jointly-learned modules (Figure 1). Rather than using logic to reason over truth values, we remain entirely in the domain of visual features and attentions.\nOur approach first analyzes each question with a semantic parser, and uses this analysis to determine the basic com-\nar X\niv :1\n51 1.\n02 79\n9v 4\n[ cs\n.C V\n] 2\n4 Ju\nl 2 01\nputational units (attention, classification, etc.) needed to answer the question, as well as the relationships between the modules. In Figure 1, we first produce an attention focused on the dog, which passes its output to a location classifier. Depending on the underlying structure, these messages passed between modules may be raw image features, attentions, or classification decisions; each module is determined by its input and output types. Different kinds of modules are shown in different colors; attention modules (like dog) are shown in green, while labeling modules (like where) are shown in blue. Importantly, all modules in an NMN are independent and composable, which allows the computation to be different for each problem instance, and possibly unobserved during training. Outside the NMN, our final answer uses a recurrent network (LSTM) to read the question, which has been shown to be important to model common sense knowledge and dataset biases [22].\nWe evaluate our approach on two visual question answering tasks. On the recently-released VQA [2] datasets we achieve results comparable to or better than existing approaches, and show that our approach specifically outperforms previous work on questions with compositional structure (e.g. requiring that an object be located and one of its attributes described). It turns out, however, that many of the questions in both datasets are quite simple, with little composition or reasoning required. To test our approach\u2019s ability to handle harder questions, we introduce a new dataset of synthetic images paired with complex questions involving spatial relations, set-theoretic reasoning, and shape and attribute recognition. On this dataset we outperform competing approaches by as much as 25% absolute accuracy.\nWhile all the applications considered in this paper involve visual question answering, the general architecture is potentially of broader usefulness, and might be more generally applied to visual referring expression resolution [6] or question answering about natural language texts [11].\nTo summarize our contributions: We first describe neural module networks, a general architecture for discretely composing heterogeneous, jointly-trained neural modules into deep networks. Next, for the visual QA task specifically, we show how to construct NMNs based on the output of a semantic parser, and use these to successfully complete established visual question answering tasks. Finally, we introduce a new dataset of challenging, highly compositional questions about abstract shapes, and show that our model again outperforms previous approaches. We will release this dataset, as well as code for all systems described in this paper, upon publication."
        },
        {
            "heading": "2. Motivations",
            "text": "We begin with two simple observations. First, state-ofthe-art performance on the full range of computer vision tasks that are studied requires a variety of different deep\nnetwork topologies\u2014there is no single \u201cbest network\u201d for all tasks. Second, though different networks are used for different purposes, it is commonplace to initialize systems for many of vision tasks with a prefix of a network trained for classification [9]. This has been shown to substantially reduce training time and improve accuracy.\nSo while network structures are not universal (in the sense that the same network is appropriate for all problems), they are at least empirically modular (in the sense that intermediate representations for one task are useful for many others).\nCan we generalize this idea in a way that is useful for question answering? Rather than thinking of question answering as a problem of learning a single function to map from questions and contexts to answers, it\u2019s perhaps useful to think of it as a highly-multitask learning setting, where each problem instance is associated with a novel task, and the identity of that task is expressed only noisily in language. In particular, where a simple question like is this a truck? requires us to retrieve only one piece of information from an image, more complicated questions, like how many objects are to the left of the toaster? might require multiple processing steps. The compositional nature of language means that the number of such processing such steps is potentially unbounded. Moreover, multiple kinds of processing might be required\u2014repeated convolutions might identify a truck, but some kind of recurrent architecture is likely necessary to count up to arbitrary numbers.\nThus our goal in this paper is to specify a framework for modular, composable, jointly-trained neural networks. In this framework, we first predict the structure of the computation needed to answer each question individually, then realize this structure by constructing an appropriatelyshaped neural network from an inventory of reusable modules. These modules are learned jointly, rather than trained in isolation, and specialization to individual tasks (identifying properties, spatial relations, etc.) arises naturally from the training objective."
        },
        {
            "heading": "3. Related work",
            "text": "We consider three lines of related work: previous efforts toward visual question answering, discrete models for compositional semantics, and models that are structurally similar to neural module networks.\nVisual Question Answering Answering questions about images is sometimes referred to as a \u201cVisual Turing Test\u201d [21, 8]. It has only recently gained popularity, following the emergence of appropriate datasets consisting of paired images, questions, and answers. While the DAQUAR dataset [21] is restricted to indoor scenes and contains relatively few examples, the COCOQA dataset [32] and the\nVQA dataset [2] are significantly larger and have more visual variety. Both are based on images from the COCO dataset [19]. While COCOQA contains question-answer pairs automatically generated from the descriptions associated with the COCO dataset, [2] has crowed sourced questions-answer pairs. We evaluate our approach on VQA, the larger and more natural of the two datasets.\nNotable \u201cclassical\u201d approaches to this task include [21, 16]. Both of these approaches are similar to ours in their use of a semantic parser, but both rely on fixed logical inference rather than learned compositional operations.\nSeveral neural models for visual questioning have already been proposed in the literature [25, 20, 7], all of which use standard deep sequence modeling machinery to construct a joint embedding of image and text, which is immediately mapped to a distribution over answers. Here we attempt to more explicitly model the computational process needed to produce each answer, but benefit from techniques for producing sequence and image embeddings that have been important in previous work.\nOne important component of visual questioning is grounding the question in the image. This grounding task has previously been approached in [13, 24, 12, 15], where the authors tried to localize phrases in an image. [31] use an attention mechanism, to predict a heatmap for each word, as an auxiliary task, during sentence generation. The attentional component of our model is inspired by these approaches.\nGeneral compositional semantics There is a large literature on learning to answer questions about structured knowledge representations from question\u2013answer pairs, both with and without joint learning of meanings for simple predicates [18, 16]. Outside of question answering, several models have been proposed for instruction following that impose a discrete \u201cplanning structure\u201d over an underlying continuous control signal [1, 23]. We are unaware of past use of a semantic parser to predict network structures, or more generally to exploit the natural similarity between set-theoretic approaches to classical semantic parsing and attentional approaches to computer vision.\nNeural network architectures The idea of selecting a different network graph for each input datum is fundamental to both recurrent networks (where the network grows in the length of the input) [5] and recursive neural networks (where the network is built, e.g., according to the syntactic structure of the input) [28]. But both of these approaches ultimately involve repeated application of a single computational module (e.g. an LSTM [10] or GRU [3] cell). From another direction, some kinds of memory networks [30] may be viewed as a special case of our model with a fixed computational graph, consisting of a sequence of\nattend modules followed by a classify module (see section 4 below).\nOur basic contribution is in both assembling this graph on the fly, and simultaneously in allowing the nodes to perform heterogeneous computations, with for \u201dmessages\u201d of different kinds\u2014raw image features, attentions, classification predictions\u2014passed from one module to the next. We are unaware of any previous work allowing such mixed collections of modules to be trained jointly."
        },
        {
            "heading": "4. Neural module networks for visual QA",
            "text": "Each training datum for this task can be thought of as a 3-tuple (w, x, y), where\n\u2022 w is a natural-language question\n\u2022 x is an image\n\u2022 y is an answer\nA model is fully specified by a collection of modules {m}, each with associated parameters \u03b8m, and a network layout predictor P which maps from strings to networks. Given (w, x) as above, the model instantiates a network based on P (w), passes x (and possibly w again) as inputs, and obtains a distribution over labels (for the VQA task, we require the output module to be a classifier). Thus a model ultimately encodes a predictive distribution p(y | w, x; \u03b8).\nIn the remainder of this section, we describe the set of modules used for the VQA task, then explain the process by which questions are converted to network layouts."
        },
        {
            "heading": "4.1. Modules",
            "text": "Our goal here is to identify a small set of modules that can be assembled into all the configurations necessary for our tasks. This corresponds to identifying a minimal set of composable vision primitives. The modules operate on three basic data types: images, unnormalized attentions, and labels. For the particular task and modules described in this paper, almost all interesting compositional phenomena occur in the space of attentions, and it is not unreasonable to characterize our contribution more narrowly as an \u201cattention-composition\u201d network. Nevertheless, other types may be easily added in the future (for new applications or for greater coverage in the VQA domain).\nFirst, some notation: module names are typeset in a fixed width font, and are of the form TYPE[INSTANCE](ARG1, . . . ). TYPE is a high-level module type (attention, classification, etc.) of the kind described in this section. INSTANCE is the particular instance of the model under consideration\u2014for example, attend[red] locates red things, while attend[dog] locates dogs. Weights may be shared at both the type and instance level. Modules with no arguments implicitly take the image as input; higher-level arguments may also inspect the image."
        },
        {
            "heading": "Attention",
            "text": "attend : Image \u2192 Attention\nConvolution\nattend[dog]\nAn attention module attend[c] convolves every position in the input image with a weight vector (distinct for each c) to produce a heatmap or unnormalized attention. So, for example, the output of the module attend[dog] is a matrix whose entries should be in regions of the image containing cats, and small everywhere else, as shown above."
        },
        {
            "heading": "Re-attention",
            "text": "re-attend : Attention \u2192 Attention\nFC ReLU\nre-attend[above]\n\u00d72\nA re-attention module re-attend[c] is essentially just a multilayer perceptron with rectified nonlinearities (ReLUs), performing a fully-connected mapping from one attention to another. Again, the weights for this mapping are distinct for each c. So re-attend[above] should take an attention and shift the regions of greatest activation upward (as above), while re-attend[not] should move attention away from the active regions. For the experiments in this paper, the first fully-connected (FC) layer produces a vector of size 32, and the second is the same size as the input."
        },
        {
            "heading": "Combination",
            "text": "combine : Attention \u00d7Attention \u2192 Attention\nStack Conv. ReLU\ncombine[except]\nA combination module combine[c] merges two attentions into a single attention. For example, combine[and] should be active only in the regions that are active in both inputs, while combine[except] should be active where the first input is active and the second is inactive."
        },
        {
            "heading": "Classification",
            "text": "classify : Image \u00d7Attention \u2192 Label\nAttend FC Softmax couch\nA classification module classify[c] takes an attention and the input image and maps them to a distribution over labels. For example, classify[color] should return a distribution over colors in the region attended to."
        },
        {
            "heading": "Measurement",
            "text": "measure : Attention \u2192 Label\nFC ReLU Softmax yesFC\nA measurement module measure[c] takes an attention alone and maps it to a distribution over labels. Because attentions passed between modules are unnormalized, measure is suitable for evaluating the existence of a detected object, or counting sets of objects."
        },
        {
            "heading": "4.2. From strings to networks",
            "text": "Having built up an inventory of modules, we now need to assemble them into the layout specified by the question. The transformation from a natural language question to an instantiated neural network takes place in two steps. First we map from natural language questions to layouts, which specify both the set of modules used to answer a given question, and the connections between them. Next we use these layouts are used to assemble the final prediction networks.\nWe use standard tools pre-trained on existing linguistic resources to obtained structured representations of questions. Future work might focus on learning (or at least finetuning) this prediction process jointly with the rest of the system.\nParsing We begin by parsing each question with the Stanford Parser [14]. to obtain a universal dependency representation [4]. Dependency parses express grammatical relations between parts of a sentence (e.g. between objects and their attributes, or events and their participants), and provide a lightweight abstraction away from the surface form\nof the sentence. The parser also performs basic lemmatization, for example turning kites into kite and were into be. This reduces sparsity of module instances.\nNext, we filter the set of dependencies to those connected the wh-word in the question (the exact distance we traverse varies depending on the task). This gives a simple symbolic form expressing (the primary) part of the sentence\u2019s meaning. For example, what is standing in the field becomes what(stand); what color is the truck becomes color(truck), and is there a circle next to a square becomes is(circle, next-to(square)). In the process we also strip away function words like determiners and modals, so what type of cakes were they? and what type of cake is it? both get converted to type(cake). The code for transforming parse trees to structured queries will be provided in the accompanying software package.\nThese representations bear a certain resemblance to pieces of a combinatory logic [18]: every leaf is implicitly a function taking the image as input, and the root represents the final value of the computation. But our approach, while compositional and combinatorial, is crucially not logical: the inferential computations operate on continuous representations produced by neural networks, becoming discrete only in the prediction of the final answer.\nLayout These symbolic representations already determine the structure of the predicted networks, but not the identities of the modules that compose them. This final assignment of modules is fully determined by the structure of the parse. All leaves become attend modules, all internal nodes become re-attend or combine modules dependent on their arity, and root nodes become measure modules for yes/no questions and classify modules for all other question types.\nGiven the mapping from queries to network layouts described above, we have for each training example a network structure, an input image, and an output label. In many cases, these network structures are different, but have tied parameters. Networks which have the same high-level structure but different instantiations of individual modules (for example what color is the cat?\u2014 classify[color](attend[cat]) and where is the truck?\u2014 classify[where](attend[truck])) can be processed in the same batch, resulting in efficient computation.\nAs noted above, parts of this conversion process are taskspecific\u2014we found that relatively simple expressions were best for the natural image questions, while the shapes question (by design) required deeper structures. Some summary statistics are provided in Table 1.\nGeneralizations It is easy to imagine applications where the input to the layout stage comes from something other than a natural language parser. Users of an image database, for example, might write SQL-like queries directly in order to specify their requirements precisely, e.g."
        },
        {
            "heading": "IS(cat) AND NOT(IS(dog))",
            "text": "or even mix visual and non-visual specifications in their queries:\nIS(cat) and date > 2014-11-5\nIndeed, it is possible to construct this kind of \u201cvisual SQL\u201d using precisely the approach described in this paper\u2014 once our system is trained, the learned modules for attention, classification, etc. can be assembled by any kind of outside user, without relying on natural language specifically."
        },
        {
            "heading": "4.3. Answering natural language questions",
            "text": "So far our discussion has focused on the neural module net architecture, without reference to the remainder of Figure 1. Our final model combines the output from the neural module network with predictions from a simple LSTM question encoder. This is important for two reasons. First, because of the relatively aggressive simplification of the question that takes place in the parser, grammatical cues that do not substantively change the semantics of the question, but which might affect the answer, are discarded. For example, what is flying? and what are flying? both get converted to what(fly), but their answers should be kite and kites respectively, even given the same underlying image features. The question encoder thus allows us to model underlying syntactic regularities in the data. Second, it allows us to capture semantic regularities: with missing or low-quality image data, it is reasonable to guess that what color is the bear? is answered by brown, and unreasonable to guess green. The question encoder also allows us to model effects of this kind.\nAll experiments in this paper use a standard single-layer LSTM with 1024 hidden units. The question modeling component predicts a distribution over the set of answers, like the root module of the NMN. The final prediction from the model is a geometric average of these two probability distributions, dynamically reweighted using both text and image features. The complete model, including both the NMN and sequence modeling component, is trained jointly."
        },
        {
            "heading": "5. Training neural module networks",
            "text": "Our training objective is simply to find module parameters maximizing the likelihood of the data. By design, the last module in every network outputs a distribution over labels, and so each assembled network also represents a probability distribution.\nBecause of the dynamic network structures used to answer questions, some weights are updated much more frequently than others. For this reason we found that learning algorithms with adaptive per-weight learning rates performed substantially better than simple gradient descent. All the experiments described below use AdaDelta [33]\n(thus there was no hyperparameter search over step sizes). It is important to emphasize that the labels we have assigned to distinguish instances of the same module type\u2014 cat, and, etc.\u2014are a notational convenience, and do not reflect any manual specification of the behavior of the corresponding modules. detect[cat] is not fixed or even initialized as cat recognizer (rather than a couch recognizer or a dog recognizer), and combine[and] isn\u2019t fixed to compute intersections of attentions (rather than unions or differences). Instead, they acquire these behaviors as a byproduct of the end-to-end training procedure. As can be seen in Figure 2, the image\u2013answer pairs and parameter tying together encourage each module to specialize in the appropriate way."
        },
        {
            "heading": "6. Experiments: compositionality",
            "text": "We begin with a set of motivating experiments on synthetic data. Compositionality, and the corresponding ability to answer questions with arbitrarily complex structure, is an essential part of the kind of deep image understanding visual QA datasets are intended to test. At the same time, questions in most existing natural image datasets are quite simple, for the most part requiring that only one or two pieces of information be extracted from an image in order to answer it successfully, and with little evaluation of robustness in the presence of distractors (e.g. asking is there a blue house in an image of a red house and a blue car).\nAs one of the primary goals of this work is to learn models for deep semantic compositionality, we have created SHAPES, a synthetic dataset that places such compositional phenomena at the forefront. This dataset consists of complex questions about simple arrangements of colored shapes (Figure 3). Questions contain between two and four attributes, object types, or relationships. There are 244 questions and 15616 images in total. To eliminate modeguessing as a viable strategy, all questions have a yes-or-no answer, but good performance requires that the system learn to recognize shapes and colors, and understand both spatial and logical relations among sets of objects.\nWhile success on this dataset is by no means a sufficient condition for robust visual QA, we believe it is a necessary one. In this respect it is similar in spirit to the bAbI [29]\ndataset, and we hope that SHAPES will continue to be used in conjunction with natural image datasets.\nTo produce an initial set of image features, we pass the input image through the convolutional portion of a LeNet [17] which is jointly trained with the question-answering part of the model. We compare our approach to a reimplementation of the VIS+LSTM baseline similar to the one described by [26], again swapping out the pre-trained image embedding with a LeNet.\nAs can be seen in Table 2, our model achieves excellent performance on this dataset, while the VIS+LSTM baseline fares little better than a majority guesser. Moreover, the color detectors and attention transformations behave as expected (Figure 2b), indicating that our joint training procedure correctly allocates responsibilities among modules. This confirms that our approach is able to model complex compositional phenomena outside the capacity of previous approaches to visual question answering.\nWe perform an additional experiment on a modified version of the training set, which contains no size-6 questions (i.e. questions whose corresponding NMN has 6 modules). Here our performance does not suffer at all, and perhaps increases slightly; this demonstrates that our model is able to generalize to questions even more complicated than those it has seen during training. Using only linguistic information, the model extrapolates simple visual patterns it has learned to even harder questions."
        },
        {
            "heading": "7. Experiments: natural images",
            "text": "Next we consider the model\u2019s ability to handle hard perceptual problems involving natural images. Here we evaluate on the recently-released VQA dataset. This is the largest resource of its kind, consisting of more than 200,000 images, each paired with three questions and ten answers per question. Data was generated by human annotators, in contrast to previous work, which has generated questions automatically from captions [26]. We learn our model using the standard train/test split, training only with those answers\nmarked as high confidence. The visual input to the NMN is the conv5 layer of a 16-layer VGGNet [27] after maxpooling. We do not fine-tune the VGGNet.\nResults are shown in Table 3. As can be seen, we outperform the best published results on this task. A breakdown of our questions by answer type reveals that our model performs especially well on questions answered by an object, attribute, or number, but worse than a sequence baseline in the yes/no category. Inspection of training-set accuracies suggests that performance on yes/no questions is due to overfitting. An ensemble with a sequence-only system might achieve even better results; future work within the NMN framework should focus on redesigning the measure module to reduce effects from overfitting.\nInspection of parser outputs also suggests that there is substantial room to improve the system using a better parser. A hand inspection of the first 50 parses in the training set suggests that most (80\u201390%) of questions asking for simple properties of objects are correctly analyzed, but more complicated questions are more prone to picking up irrelevant predicates. For example are these people most likely experiencing a work day? is parsed as be(people, likely), when the desired analysis is is(people, work). Parser errors of this kind could be fixed with joint learning.\nFigure 3 is broadly suggestive of the kinds of prediction errors made by the system, including plausible semantic confusions (cardboard interpreted as leather, round windows interpreted as clocks), normal lexical variation (container for cup), and use of answers that are a priori plausible but unrelated to the image (describing a horse as located in a pen rather than a barn)."
        },
        {
            "heading": "8. Conclusions and future work",
            "text": "In this paper, we have introduced neural module networks, which provide a general-purpose framework for learning collections of neural modules which can be dynamically assembled into arbitrary deep networks. We have demonstrated that this approach achieves state-of-the-art performance on existing datasets for visual question an-\nswering, performing especially well on questions answered by an object or an attribute. Additionally, we have introduced a new dataset of highly compositional questions about simple arrangements of shapes, and shown that our approach substantially outperforms previous work.\nSo far we have maintained a strict separation between predicting network structures and learning network parameters. It is easy to imagine that these two problems might be solved jointly, with uncertainty maintained over network structures throughout training and decoding. This might be accomplished either with a monolithic network, by using some higher-level mechanism to \u201cattend\u201d to relevant portions of the computation, or else by integrating with existing\ntools for learning semantic parsers [16].\nThe fact that our neural module networks can be trained to produce predictable outputs\u2014even when freely composed\u2014points toward a more general paradigm of \u201cprograms\u201d built from neural networks. In this paradigm, network designers (human or automated) have access to a standard kit of neural parts from which to construct models for performing complex reasoning tasks. While visual question answering provides a natural testbed for this approach, its usefulness is potentially much broader, extending to queries about documents and structured knowledge bases or more general signal processing and function approximation."
        },
        {
            "heading": "Acknowledgments",
            "text": "The authors are grateful to Lisa Anne Hendricks, Eric Tzeng, and Russell Stewart for useful conversations, and to Nvidia for a hardware grant. JA is supported by a National Science Foundation Graduate Research Fellowship. MR is supported by a fellowship within the FIT weltweit-Program of the German Academic Exchange Service (DAAD). This work was additionally supported by DARPA, AFRL, DoD MURI award N000141110688, NSF awards IIS-1427425 and IIS-1212798, and the Berkeley Vision and Learning Center."
        }
    ],
    "title": "Deep Compositional Question Answering with Neural Module Networks",
    "year": 2017
}